

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Apr 18 10:47:04 2022

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1180                           INDF equ 00h ;# 
  1181  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1182                           TMR0 equ 01h ;# 
  1183  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1184                           PCL equ 02h ;# 
  1185  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1186                           STATUS equ 03h ;# 
  1187  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1188                           FSR equ 04h ;# 
  1189  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1190                           PORTA equ 05h ;# 
  1191  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1192                           PORTB equ 06h ;# 
  1193  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1194                           PORTC equ 07h ;# 
  1195  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1196                           PORTD equ 08h ;# 
  1197  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1198                           PORTE equ 09h ;# 
  1199  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1200                           PCLATH equ 0Ah ;# 
  1201  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1202                           INTCON equ 0Bh ;# 
  1203  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1204                           PIR1 equ 0Ch ;# 
  1205  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1206                           PIR2 equ 0Dh ;# 
  1207  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1208                           TMR1 equ 0Eh ;# 
  1209  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1210                           TMR1L equ 0Eh ;# 
  1211  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1212                           TMR1H equ 0Fh ;# 
  1213  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1214                           T1CON equ 010h ;# 
  1215  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1216                           TMR2 equ 011h ;# 
  1217  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1218                           T2CON equ 012h ;# 
  1219  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1220                           SSPBUF equ 013h ;# 
  1221  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1222                           SSPCON equ 014h ;# 
  1223  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1224                           CCPR1 equ 015h ;# 
  1225  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1226                           CCPR1L equ 015h ;# 
  1227  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1228                           CCPR1H equ 016h ;# 
  1229  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1230                           CCP1CON equ 017h ;# 
  1231  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1232                           RCSTA equ 018h ;# 
  1233  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1234                           TXREG equ 019h ;# 
  1235  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1236                           RCREG equ 01Ah ;# 
  1237  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1238                           CCPR2 equ 01Bh ;# 
  1239  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1240                           CCPR2L equ 01Bh ;# 
  1241  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1242                           CCPR2H equ 01Ch ;# 
  1243  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1244                           CCP2CON equ 01Dh ;# 
  1245  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1246                           ADRESH equ 01Eh ;# 
  1247  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1248                           ADCON0 equ 01Fh ;# 
  1249  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1250                           OPTION_REG equ 081h ;# 
  1251  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1252                           TRISA equ 085h ;# 
  1253  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1254                           TRISB equ 086h ;# 
  1255  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1256                           TRISC equ 087h ;# 
  1257  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1258                           TRISD equ 088h ;# 
  1259  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1260                           TRISE equ 089h ;# 
  1261  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1262                           PIE1 equ 08Ch ;# 
  1263  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1264                           PIE2 equ 08Dh ;# 
  1265  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1266                           PCON equ 08Eh ;# 
  1267  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1268                           OSCCON equ 08Fh ;# 
  1269  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1270                           OSCTUNE equ 090h ;# 
  1271  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1272                           SSPCON2 equ 091h ;# 
  1273  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1274                           PR2 equ 092h ;# 
  1275  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1276                           SSPADD equ 093h ;# 
  1277  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1278                           SSPMSK equ 093h ;# 
  1279  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1280                           MSK equ 093h ;# 
  1281  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1282                           SSPSTAT equ 094h ;# 
  1283  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1284                           WPUB equ 095h ;# 
  1285  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1286                           IOCB equ 096h ;# 
  1287  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1288                           VRCON equ 097h ;# 
  1289  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1290                           TXSTA equ 098h ;# 
  1291  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1292                           SPBRG equ 099h ;# 
  1293  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1294                           SPBRGH equ 09Ah ;# 
  1295  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1296                           PWM1CON equ 09Bh ;# 
  1297  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1298                           ECCPAS equ 09Ch ;# 
  1299  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1300                           PSTRCON equ 09Dh ;# 
  1301  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1302                           ADRESL equ 09Eh ;# 
  1303  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1304                           ADCON1 equ 09Fh ;# 
  1305  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1306                           WDTCON equ 0105h ;# 
  1307  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1308                           CM1CON0 equ 0107h ;# 
  1309  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1310                           CM2CON0 equ 0108h ;# 
  1311  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1312                           CM2CON1 equ 0109h ;# 
  1313  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1314                           EEDATA equ 010Ch ;# 
  1315  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1316                           EEDAT equ 010Ch ;# 
  1317  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1318                           EEADR equ 010Dh ;# 
  1319  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1320                           EEDATH equ 010Eh ;# 
  1321  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1322                           EEADRH equ 010Fh ;# 
  1323  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1324                           SRCON equ 0185h ;# 
  1325  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1326                           BAUDCTL equ 0187h ;# 
  1327  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1328                           ANSEL equ 0188h ;# 
  1329  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1330                           ANSELH equ 0189h ;# 
  1331  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1332                           EECON1 equ 018Ch ;# 
  1333  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1334                           EECON2 equ 018Dh ;# 
  1335  018D                     	FNCALL	_main,_T0_init
  1336                           	FNCALL	_main,_T0_start
  1337                           	FNCALL	_main,_T0_status
  1338                           	FNCALL	_main,_b0
  1339                           	FNCALL	_main,_b1
  1340                           	FNCALL	_main,_b2
  1341                           	FNCALL	_main,_b3
  1342                           	FNCALL	_main,_botao_init
  1343                           	FNCALL	_main,_habTemporizador
  1344                           	FNCALL	_main,_lcd_init
  1345                           	FNCALL	_main,_lcd_num
  1346                           	FNCALL	_main,_lcd_print
  1347                           	FNCALL	_main,_resetTemporizador
  1348                           	FNCALL	_main,_temporizar
  1349                           	FNCALL	_temporizar,___awmod
  1350                           	FNCALL	_lcd_print,_lcd_dataReg
  1351                           	FNCALL	_lcd_print,_lcd_lincol
  1352                           	FNCALL	_lcd_num,___awdiv
  1353                           	FNCALL	_lcd_num,___awmod
  1354                           	FNCALL	_lcd_num,_lcd_dataReg
  1355                           	FNCALL	_lcd_num,_lcd_lincol
  1356                           	FNCALL	_lcd_lincol,_lcd_instReg
  1357                           	FNCALL	_lcd_init,_delay
  1358                           	FNCALL	_lcd_init,_lcd_instReg
  1359                           	FNROOT	_main
  1360                           	FNCALL	_isr,_T0_int
  1361                           	FNCALL	_isr,_T1_int
  1362                           	FNCALL	_isr,_T2_int
  1363                           	FNCALL	intlevel1,_isr
  1364                           	global	intlevel1
  1365                           	FNROOT	intlevel1
  1366                           	global	_b2Anterior
  1367                           	global	_b1Anterior
  1368                           	global	_b0Anterior
  1369                           	global	_T2count
  1370                           	global	_T1count
  1371                           	global	_T0count
  1372                           	global	_b3Anterior
  1373                           	global	_tempo
  1374                           	global	_PORTAbits
  1375                           _PORTAbits	set	0x5
  1376  0005                     	global	_PORTD
  1377                           _PORTD	set	0x8
  1378  0008                     	global	_PORTDbits
  1379                           _PORTDbits	set	0x8
  1380  0008                     	global	_PIR1bits
  1381                           _PIR1bits	set	0xC
  1382  000C                     	global	_T2CONbits
  1383                           _T2CONbits	set	0x12
  1384  0012                     	global	_TMR2
  1385                           _TMR2	set	0x11
  1386  0011                     	global	_TMR1L
  1387                           _TMR1L	set	0xE
  1388  000E                     	global	_TMR1H
  1389                           _TMR1H	set	0xF
  1390  000F                     	global	_T1CONbits
  1391                           _T1CONbits	set	0x10
  1392  0010                     	global	_TMR0
  1393                           _TMR0	set	0x1
  1394  0001                     	global	_INTCONbits
  1395                           _INTCONbits	set	0xB
  1396  000B                     	global	_TRISAbits
  1397                           _TRISAbits	set	0x85
  1398  0085                     	global	_TRISDbits
  1399                           _TRISDbits	set	0x88
  1400  0088                     	global	_PR2
  1401                           _PR2	set	0x92
  1402  0092                     	global	_PIE1bits
  1403                           _PIE1bits	set	0x8C
  1404  008C                     	global	_OPTION_REGbits
  1405                           _OPTION_REGbits	set	0x81
  1406  0081                     	global	_ANSEL
  1407                           _ANSEL	set	0x188
  1408  0188                     psect	strings,class=STRING,delta=2,noexec
  1409                           global __pstrings
  1410                           __pstrings:
  1411  054C                     stringtab:
  1412  054C                     	global    __stringtab
  1413                           __stringtab:
  1414  054C                     ;	String table - string pointers are 1 byte each
  1415                           stringcode:stringdir:
  1416  054C                     movlw high(stringdir)
      + 054C                     stringdir:	
  1417  054C  3005               movwf pclath
  1418  054D  008A               movf fsr,w
  1419  054E  0804               incf fsr
  1420  054F  0A84               	addwf pc
  1421  0550  0782               	global __stringbase
  1422                           __stringbase:
  1423  0551                     	retlw	0
  1424  0551  3400               psect	strings
  1425                           	global    __end_of__stringtab
  1426                           __end_of__stringtab:
  1427  0552                     	
  1428                           STR_1:	
  1429  0552                     	retlw	48	;'0'
  1430  0552  3430               	retlw	48	;'0'
  1431  0553  3430               	retlw	58	;':'
  1432  0554  343A               	retlw	48	;'0'
  1433  0555  3430               	retlw	48	;'0'
  1434  0556  3430               	retlw	32	;' '
  1435  0557  3420               	retlw	32	;' '
  1436  0558  3420               	retlw	32	;' '
  1437  0559  3420               	retlw	32	;' '
  1438  055A  3420               	retlw	32	;' '
  1439  055B  3420               	retlw	32	;' '
  1440  055C  3420               	retlw	48	;'0'
  1441  055D  3430               	retlw	48	;'0'
  1442  055E  3430               	retlw	58	;':'
  1443  055F  343A               	retlw	48	;'0'
  1444  0560  3430               	retlw	48	;'0'
  1445  0561  3430               	retlw	0
  1446  0562  3400               psect	strings
  1447                           STR_2	equ	STR_1+0
  1448  0552                     ; #config settings
  1449                           global __CFG_FOSC$INTRC_NOCLKOUT
  1450                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1451  0000                     global __CFG_WDTE$OFF
  1452                           __CFG_WDTE$OFF equ 0x0
  1453  0000                     global __CFG_PWRTE$OFF
  1454                           __CFG_PWRTE$OFF equ 0x0
  1455  0000                     global __CFG_MCLRE$OFF
  1456                           __CFG_MCLRE$OFF equ 0x0
  1457  0000                     global __CFG_CP$OFF
  1458                           __CFG_CP$OFF equ 0x0
  1459  0000                     global __CFG_CPD$OFF
  1460                           __CFG_CPD$OFF equ 0x0
  1461  0000                     global __CFG_BOREN$OFF
  1462                           __CFG_BOREN$OFF equ 0x0
  1463  0000                     global __CFG_IESO$OFF
  1464                           __CFG_IESO$OFF equ 0x0
  1465  0000                     global __CFG_FCMEN$OFF
  1466                           __CFG_FCMEN$OFF equ 0x0
  1467  0000                     global __CFG_LVP$OFF
  1468                           __CFG_LVP$OFF equ 0x0
  1469  0000                     global __CFG_BOR4V$BOR40V
  1470                           __CFG_BOR4V$BOR40V equ 0x0
  1471  0000                     global __CFG_WRT$OFF
  1472                           __CFG_WRT$OFF equ 0x0
  1473  0000                     	file	"C:\Users\21193459\AppData\Local\Temp\s2r0."
  1474                           	line	#
  1475                           psect cinit,class=CODE,delta=2
  1476                           global start_initialization
  1477                           start_initialization:
  1478  000F                     
  1479                           global __initialization
  1480                           __initialization:
  1481  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1482                           global __pbssCOMMON
  1483                           __pbssCOMMON:
  1484  0079                     _b2Anterior:
  1485  0079                            ds      1
  1486  0079                     
  1487                           _b1Anterior:
  1488  007A                            ds      1
  1489  007A                     
  1490                           _b0Anterior:
  1491  007B                            ds      1
  1492  007B                     
  1493                           psect	bssBANK0,class=BANK0,space=1,noexec
  1494                           global __pbssBANK0
  1495                           __pbssBANK0:
  1496  0020                     _T2count:
  1497  0020                            ds      2
  1498  0020                     
  1499                           _T1count:
  1500  0022                            ds      2
  1501  0022                     
  1502                           _T0count:
  1503  0024                            ds      2
  1504  0024                     
  1505                           _b3Anterior:
  1506  0026                            ds      1
  1507  0026                     
  1508                           _tempo:
  1509  0027                            ds      24
  1510  0027                     
  1511                           	file	"C:\Users\21193459\AppData\Local\Temp\s2r0."
  1512                           	line	#
  1513                           psect clrtext,class=CODE,delta=2
  1514                           global clear_ram0
  1515                           ;	Called with FSR containing the base address, and
  1516                           ;	W with the last address+1
  1517                           clear_ram0:
  1518  0606                     	clrwdt			;clear the watchdog before getting into this loop
  1519  0606  0064               clrloop0:
  1520  0607                     	clrf	indf		;clear RAM location pointed to by FSR
  1521  0607  0180               	incf	fsr,f		;increment pointer
  1522  0608  0A84               	xorwf	fsr,w		;XOR with final address
  1523  0609  0604               	btfsc	status,2	;have we reached the end yet?
  1524  060A  1903               	retlw	0		;all done for this memory range, return
  1525  060B  3400               	xorwf	fsr,w		;XOR again to restore value
  1526  060C  0604               	goto	clrloop0		;do the next byte
  1527  060D  2E07               
  1528                           ; Clear objects allocated to COMMON
  1529                           psect cinit,class=CODE,delta=2,merge=1
  1530                           	clrf	((__pbssCOMMON)+0)&07Fh
  1531  000F  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
  1532  0010  01FA               	clrf	((__pbssCOMMON)+2)&07Fh
  1533  0011  01FB               ; Clear objects allocated to BANK0
  1534                           psect cinit,class=CODE,delta=2,merge=1
  1535                           	bcf	status, 7	;select IRP bank0
  1536  0012  1383               	movlw	low(__pbssBANK0)
  1537  0013  3020               	movwf	fsr
  1538  0014  0084               	movlw	low((__pbssBANK0)+01Fh)
  1539  0015  303F               	fcall	clear_ram0
  1540  0016  120A  118A  2606  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1541                           global end_of_initialization,__end_of__initialization
  1542                           
  1543                           ;End of C runtime variable initialization code
  1544                           
  1545                           end_of_initialization:
  1546  001B                     __end_of__initialization:
  1547  001B                     clrf status
  1548  001B  0183               ljmp _main	;jump to C main() function
  1549  001C  120A  118A  281F   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1550                           global __pcstackCOMMON
  1551                           __pcstackCOMMON:
  1552  0070                     ?_lcd_init:	; 1 bytes @ 0x0
  1553  0070                     ?_T0_init:	; 1 bytes @ 0x0
  1554  0070                     ?_botao_init:	; 1 bytes @ 0x0
  1555  0070                     ?_resetTemporizador:	; 1 bytes @ 0x0
  1556  0070                     ?_b0:	; 1 bytes @ 0x0
  1557  0070                     ?_b1:	; 1 bytes @ 0x0
  1558  0070                     ?_b2:	; 1 bytes @ 0x0
  1559  0070                     ?_b3:	; 1 bytes @ 0x0
  1560  0070                     ?_temporizar:	; 1 bytes @ 0x0
  1561  0070                     ?_main:	; 1 bytes @ 0x0
  1562  0070                     ?_T0_int:	; 1 bytes @ 0x0
  1563  0070                     ??_T0_int:	; 1 bytes @ 0x0
  1564  0070                     ?_T1_int:	; 1 bytes @ 0x0
  1565  0070                     ??_T1_int:	; 1 bytes @ 0x0
  1566  0070                     ?_T2_int:	; 1 bytes @ 0x0
  1567  0070                     ??_T2_int:	; 1 bytes @ 0x0
  1568  0070                     ?_isr:	; 1 bytes @ 0x0
  1569  0070                     ??_isr:	; 1 bytes @ 0x0
  1570  0070                     ?_lcd_instReg:	; 1 bytes @ 0x0
  1571  0070                     ?_lcd_dataReg:	; 1 bytes @ 0x0
  1572  0070                     	ds	2
  1573  0070                     ??_T0_init:	; 1 bytes @ 0x2
  1574  0072                     ??_botao_init:	; 1 bytes @ 0x2
  1575  0072                     ?_T0_start:	; 1 bytes @ 0x2
  1576  0072                     ??_resetTemporizador:	; 1 bytes @ 0x2
  1577  0072                     ??_b0:	; 1 bytes @ 0x2
  1578  0072                     ??_b1:	; 1 bytes @ 0x2
  1579  0072                     ??_b2:	; 1 bytes @ 0x2
  1580  0072                     ??_b3:	; 1 bytes @ 0x2
  1581  0072                     ?_delay:	; 1 bytes @ 0x2
  1582  0072                     ??_lcd_instReg:	; 1 bytes @ 0x2
  1583  0072                     ??_lcd_dataReg:	; 1 bytes @ 0x2
  1584  0072                     	global	?_T0_status
  1585                           ?_T0_status:	; 2 bytes @ 0x2
  1586  0072                     	global	?___awdiv
  1587                           ?___awdiv:	; 2 bytes @ 0x2
  1588  0072                     	global	?___awmod
  1589                           ?___awmod:	; 2 bytes @ 0x2
  1590  0072                     	global	resetTemporizador@t
  1591                           resetTemporizador@t:	; 1 bytes @ 0x2
  1592  0072                     	global	T0_start@c
  1593                           T0_start@c:	; 2 bytes @ 0x2
  1594  0072                     	global	delay@t
  1595                           delay@t:	; 2 bytes @ 0x2
  1596  0072                     	global	___awdiv@divisor
  1597                           ___awdiv@divisor:	; 2 bytes @ 0x2
  1598  0072                     	global	___awmod@divisor
  1599                           ___awmod@divisor:	; 2 bytes @ 0x2
  1600  0072                     	ds	1
  1601  0072                     ?_habTemporizador:	; 1 bytes @ 0x3
  1602  0073                     	global	habTemporizador@h
  1603                           habTemporizador@h:	; 1 bytes @ 0x3
  1604  0073                     	ds	1
  1605  0073                     ??_T0_start:	; 1 bytes @ 0x4
  1606  0074                     ??_habTemporizador:	; 1 bytes @ 0x4
  1607  0074                     ??_T0_status:	; 1 bytes @ 0x4
  1608  0074                     ??_delay:	; 1 bytes @ 0x4
  1609  0074                     	global	lcd_instReg@i
  1610                           lcd_instReg@i:	; 1 bytes @ 0x4
  1611  0074                     	global	lcd_dataReg@d
  1612                           lcd_dataReg@d:	; 1 bytes @ 0x4
  1613  0074                     	global	___awdiv@dividend
  1614                           ___awdiv@dividend:	; 2 bytes @ 0x4
  1615  0074                     	global	___awmod@dividend
  1616                           ___awmod@dividend:	; 2 bytes @ 0x4
  1617  0074                     	ds	1
  1618  0074                     ??_lcd_init:	; 1 bytes @ 0x5
  1619  0075                     ?_lcd_lincol:	; 1 bytes @ 0x5
  1620  0075                     	global	lcd_lincol@col
  1621                           lcd_lincol@col:	; 1 bytes @ 0x5
  1622  0075                     	global	habTemporizador@t
  1623                           habTemporizador@t:	; 1 bytes @ 0x5
  1624  0075                     	ds	1
  1625  0075                     ??_lcd_lincol:	; 1 bytes @ 0x6
  1626  0076                     ??___awdiv:	; 1 bytes @ 0x6
  1627  0076                     ??___awmod:	; 1 bytes @ 0x6
  1628  0076                     	ds	1
  1629  0076                     	global	lcd_lincol@lin
  1630                           lcd_lincol@lin:	; 1 bytes @ 0x7
  1631  0077                     	global	___awmod@counter
  1632                           ___awmod@counter:	; 1 bytes @ 0x7
  1633  0077                     	ds	1
  1634  0077                     ??_lcd_print:	; 1 bytes @ 0x8
  1635  0078                     	global	___awmod@sign
  1636                           ___awmod@sign:	; 1 bytes @ 0x8
  1637  0078                     	ds	1
  1638  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1639                           global __pcstackBANK0
  1640                           __pcstackBANK0:
  1641  003F                     ?_lcd_print:	; 1 bytes @ 0x0
  1642  003F                     ??_temporizar:	; 1 bytes @ 0x0
  1643  003F                     	global	lcd_print@col
  1644                           lcd_print@col:	; 1 bytes @ 0x0
  1645  003F                     	global	___awdiv@counter
  1646                           ___awdiv@counter:	; 1 bytes @ 0x0
  1647  003F                     	ds	1
  1648  003F                     	global	lcd_print@str
  1649                           lcd_print@str:	; 1 bytes @ 0x1
  1650  0040                     	global	___awdiv@sign
  1651                           ___awdiv@sign:	; 1 bytes @ 0x1
  1652  0040                     	ds	1
  1653  0040                     	global	lcd_print@pos
  1654                           lcd_print@pos:	; 1 bytes @ 0x2
  1655  0041                     	global	___awdiv@quotient
  1656                           ___awdiv@quotient:	; 2 bytes @ 0x2
  1657  0041                     	ds	1
  1658  0041                     	global	lcd_print@lin
  1659                           lcd_print@lin:	; 1 bytes @ 0x3
  1660  0042                     	ds	1
  1661  0042                     ?_lcd_num:	; 1 bytes @ 0x4
  1662  0043                     	global	lcd_num@col
  1663                           lcd_num@col:	; 1 bytes @ 0x4
  1664  0043                     	global	temporizar@t
  1665                           temporizar@t:	; 1 bytes @ 0x4
  1666  0043                     	ds	1
  1667  0043                     	global	lcd_num@num
  1668                           lcd_num@num:	; 2 bytes @ 0x5
  1669  0044                     	ds	2
  1670  0044                     	global	lcd_num@tam
  1671                           lcd_num@tam:	; 1 bytes @ 0x7
  1672  0046                     	ds	1
  1673  0046                     ??_lcd_num:	; 1 bytes @ 0x8
  1674  0047                     	ds	3
  1675  0047                     	global	lcd_num@lin
  1676                           lcd_num@lin:	; 1 bytes @ 0xB
  1677  004A                     	ds	1
  1678  004A                     	global	lcd_num@size
  1679                           lcd_num@size:	; 1 bytes @ 0xC
  1680  004B                     	ds	1
  1681  004B                     	global	lcd_num@sinal
  1682                           lcd_num@sinal:	; 1 bytes @ 0xD
  1683  004C                     	ds	1
  1684  004C                     	global	lcd_num@div
  1685                           lcd_num@div:	; 2 bytes @ 0xE
  1686  004D                     	ds	2
  1687  004D                     ??_main:	; 1 bytes @ 0x10
  1688  004F                     	ds	4
  1689  004F                     ;!
  1690                           ;!Data Sizes:
  1691                           ;!    Strings     17
  1692                           ;!    Constant    0
  1693                           ;!    Data        0
  1694                           ;!    BSS         34
  1695                           ;!    Persistent  0
  1696                           ;!    Stack       0
  1697                           ;!
  1698                           ;!Auto Spaces:
  1699                           ;!    Space          Size  Autos    Used
  1700                           ;!    COMMON           14      9      12
  1701                           ;!    BANK0            80     20      51
  1702                           ;!    BANK1            80      0       0
  1703                           ;!    BANK3            96      0       0
  1704                           ;!    BANK2            96      0       0
  1705                           
  1706                           ;!
  1707                           ;!Pointer List with Targets:
  1708                           ;!
  1709                           ;!    resetTemporizador@t	PTR struct temporizadorT size(1) Largest target is 24
  1710                           ;!		 -> tempo(BANK0[24]), 
  1711                           ;!
  1712                           ;!    habTemporizador@t	PTR struct temporizadorT size(1) Largest target is 24
  1713                           ;!		 -> tempo(BANK0[24]), 
  1714                           ;!
  1715                           ;!    temporizar@t	PTR struct temporizadorT size(1) Largest target is 24
  1716                           ;!		 -> tempo(BANK0[24]), 
  1717                           ;!
  1718                           ;!    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
  1719                           ;!		 -> STR_2(CODE[17]), STR_1(CODE[17]), 
  1720                           ;!
  1721                           
  1722                           
  1723                           ;!
  1724                           ;!Critical Paths under _main in COMMON
  1725                           ;!
  1726                           ;!    _main->_lcd_print
  1727                           ;!    _temporizar->___awmod
  1728                           ;!    _lcd_print->_lcd_lincol
  1729                           ;!    _lcd_num->___awmod
  1730                           ;!    _lcd_lincol->_lcd_instReg
  1731                           ;!    _lcd_init->_delay
  1732                           ;!    _lcd_init->_lcd_instReg
  1733                           ;!    _habTemporizador->_b2
  1734                           ;!    _habTemporizador->_b3
  1735                           ;!
  1736                           ;!Critical Paths under _isr in COMMON
  1737                           ;!
  1738                           ;!    None.
  1739                           ;!
  1740                           ;!Critical Paths under _main in BANK0
  1741                           ;!
  1742                           ;!    _main->_lcd_num
  1743                           ;!    _lcd_num->___awdiv
  1744                           ;!
  1745                           ;!Critical Paths under _isr in BANK0
  1746                           ;!
  1747                           ;!    None.
  1748                           ;!
  1749                           ;!Critical Paths under _main in BANK1
  1750                           ;!
  1751                           ;!    None.
  1752                           ;!
  1753                           ;!Critical Paths under _isr in BANK1
  1754                           ;!
  1755                           ;!    None.
  1756                           ;!
  1757                           ;!Critical Paths under _main in BANK3
  1758                           ;!
  1759                           ;!    None.
  1760                           ;!
  1761                           ;!Critical Paths under _isr in BANK3
  1762                           ;!
  1763                           ;!    None.
  1764                           ;!
  1765                           ;!Critical Paths under _main in BANK2
  1766                           ;!
  1767                           ;!    None.
  1768                           ;!
  1769                           ;!Critical Paths under _isr in BANK2
  1770                           ;!
  1771                           ;!    None.
  1772                           
  1773 ;;
  1774 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1775 ;;
  1776                           
  1777                           ;!
  1778                           ;!Call Graph Tables:
  1779                           ;!
  1780                           ;! ---------------------------------------------------------------------------------
  1781                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1782                           ;! ---------------------------------------------------------------------------------
  1783                           ;! (0) _main                                                 4     4      0    9395
  1784                           ;!                                             16 BANK0      4     4      0
  1785                           ;!                            _T0_init
  1786                           ;!                           _T0_start
  1787                           ;!                          _T0_status
  1788                           ;!                                 _b0
  1789                           ;!                                 _b1
  1790                           ;!                                 _b2
  1791                           ;!                                 _b3
  1792                           ;!                         _botao_init
  1793                           ;!                    _habTemporizador
  1794                           ;!                           _lcd_init
  1795                           ;!                            _lcd_num
  1796                           ;!                          _lcd_print
  1797                           ;!                  _resetTemporizador
  1798                           ;!                         _temporizar
  1799                           ;! ---------------------------------------------------------------------------------
  1800                           ;! (1) _temporizar                                           5     5      0    1638
  1801                           ;!                                              0 BANK0      5     5      0
  1802                           ;!                            ___awmod
  1803                           ;! ---------------------------------------------------------------------------------
  1804                           ;! (1) _resetTemporizador                                    1     1      0     195
  1805                           ;!                                              2 COMMON     1     1      0
  1806                           ;! ---------------------------------------------------------------------------------
  1807                           ;! (1) _lcd_print                                            5     3      2     940
  1808                           ;!                                              8 COMMON     1     1      0
  1809                           ;!                                              0 BANK0      4     2      2
  1810                           ;!                        _lcd_dataReg
  1811                           ;!                         _lcd_lincol
  1812                           ;! ---------------------------------------------------------------------------------
  1813                           ;! (1) _lcd_num                                             12     8      4    5541
  1814                           ;!                                              4 BANK0     12     8      4
  1815                           ;!                            ___awdiv
  1816                           ;!                            ___awmod
  1817                           ;!                        _lcd_dataReg
  1818                           ;!                         _lcd_lincol
  1819                           ;! ---------------------------------------------------------------------------------
  1820                           ;! (2) _lcd_lincol                                           3     2      1     372
  1821                           ;!                                              5 COMMON     3     2      1
  1822                           ;!                        _lcd_instReg
  1823                           ;! ---------------------------------------------------------------------------------
  1824                           ;! (2) _lcd_dataReg                                          3     3      0      44
  1825                           ;!                                              2 COMMON     3     3      0
  1826                           ;! ---------------------------------------------------------------------------------
  1827                           ;! (2) ___awmod                                              7     3      4    1153
  1828                           ;!                                              2 COMMON     7     3      4
  1829                           ;! ---------------------------------------------------------------------------------
  1830                           ;! (2) ___awdiv                                              9     5      4    1165
  1831                           ;!                                              2 COMMON     5     1      4
  1832                           ;!                                              0 BANK0      4     4      0
  1833                           ;! ---------------------------------------------------------------------------------
  1834                           ;! (1) _lcd_init                                             0     0      0     427
  1835                           ;!                              _delay
  1836                           ;!                        _lcd_instReg
  1837                           ;! ---------------------------------------------------------------------------------
  1838                           ;! (3) _lcd_instReg                                          3     3      0     176
  1839                           ;!                                              2 COMMON     3     3      0
  1840                           ;! ---------------------------------------------------------------------------------
  1841                           ;! (2) _delay                                                3     1      2     251
  1842                           ;!                                              2 COMMON     3     1      2
  1843                           ;! ---------------------------------------------------------------------------------
  1844                           ;! (1) _habTemporizador                                      3     2      1     480
  1845                           ;!                                              3 COMMON     3     2      1
  1846                           ;!                                 _b0 (ARG)
  1847                           ;!                                 _b1 (ARG)
  1848                           ;!                                 _b2 (ARG)
  1849                           ;!                                 _b3 (ARG)
  1850                           ;! ---------------------------------------------------------------------------------
  1851                           ;! (1) _botao_init                                           0     0      0       0
  1852                           ;! ---------------------------------------------------------------------------------
  1853                           ;! (1) _b3                                                   1     1      0       0
  1854                           ;!                                              2 COMMON     1     1      0
  1855                           ;! ---------------------------------------------------------------------------------
  1856                           ;! (1) _b2                                                   1     1      0       0
  1857                           ;!                                              2 COMMON     1     1      0
  1858                           ;! ---------------------------------------------------------------------------------
  1859                           ;! (1) _b1                                                   0     0      0       0
  1860                           ;! ---------------------------------------------------------------------------------
  1861                           ;! (1) _b0                                                   0     0      0       0
  1862                           ;! ---------------------------------------------------------------------------------
  1863                           ;! (1) _T0_status                                            2     0      2       0
  1864                           ;!                                              2 COMMON     2     0      2
  1865                           ;! ---------------------------------------------------------------------------------
  1866                           ;! (1) _T0_start                                             2     0      2     174
  1867                           ;!                                              2 COMMON     2     0      2
  1868                           ;! ---------------------------------------------------------------------------------
  1869                           ;! (1) _T0_init                                              0     0      0       0
  1870                           ;! ---------------------------------------------------------------------------------
  1871                           ;! Estimated maximum stack depth 3
  1872                           ;! ---------------------------------------------------------------------------------
  1873                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1874                           ;! ---------------------------------------------------------------------------------
  1875                           ;! (4) _isr                                                  2     2      0       0
  1876                           ;!                                              0 COMMON     2     2      0
  1877                           ;!                             _T0_int
  1878                           ;!                             _T1_int
  1879                           ;!                             _T2_int
  1880                           ;! ---------------------------------------------------------------------------------
  1881                           ;! (5) _T2_int                                               0     0      0       0
  1882                           ;! ---------------------------------------------------------------------------------
  1883                           ;! (5) _T1_int                                               0     0      0       0
  1884                           ;! ---------------------------------------------------------------------------------
  1885                           ;! (5) _T0_int                                               0     0      0       0
  1886                           ;! ---------------------------------------------------------------------------------
  1887                           ;! Estimated maximum stack depth 5
  1888                           ;! ---------------------------------------------------------------------------------
  1889                           ;!
  1890                           ;! Call Graph Graphs:
  1891                           ;!
  1892                           ;! _main (ROOT)
  1893                           ;!   _T0_init
  1894                           ;!   _T0_start
  1895                           ;!   _T0_status
  1896                           ;!   _b0
  1897                           ;!   _b1
  1898                           ;!   _b2
  1899                           ;!   _b3
  1900                           ;!   _botao_init
  1901                           ;!   _habTemporizador
  1902                           ;!     _b0 (ARG)
  1903                           ;!     _b1 (ARG)
  1904                           ;!     _b2 (ARG)
  1905                           ;!     _b3 (ARG)
  1906                           ;!   _lcd_init
  1907                           ;!     _delay
  1908                           ;!     _lcd_instReg
  1909                           ;!   _lcd_num
  1910                           ;!     ___awdiv
  1911                           ;!     ___awmod
  1912                           ;!     _lcd_dataReg
  1913                           ;!     _lcd_lincol
  1914                           ;!       _lcd_instReg
  1915                           ;!   _lcd_print
  1916                           ;!     _lcd_dataReg
  1917                           ;!     _lcd_lincol
  1918                           ;!       _lcd_instReg
  1919                           ;!   _resetTemporizador
  1920                           ;!   _temporizar
  1921                           ;!     ___awmod
  1922                           ;!
  1923                           ;! _isr (ROOT)
  1924                           ;!   _T0_int
  1925                           ;!   _T1_int
  1926                           ;!   _T2_int
  1927                           ;!
  1928                           
  1929                           ;! Address spaces:
  1930                           
  1931                           ;!Name               Size   Autos  Total    Cost      Usage
  1932                           ;!BITCOMMON            E      0       0       0        0.0%
  1933                           ;!EEDATA             100      0       0       0        0.0%
  1934                           ;!NULL                 0      0       0       0        0.0%
  1935                           ;!CODE                 0      0       0       0        0.0%
  1936                           ;!COMMON               E      9       C       1       85.7%
  1937                           ;!BITSFR0              0      0       0       1        0.0%
  1938                           ;!SFR0                 0      0       0       1        0.0%
  1939                           ;!BITSFR1              0      0       0       2        0.0%
  1940                           ;!SFR1                 0      0       0       2        0.0%
  1941                           ;!STACK                0      0       0       2        0.0%
  1942                           ;!ABS                  0      0      3F       3        0.0%
  1943                           ;!BITBANK0            50      0       0       4        0.0%
  1944                           ;!BITSFR3              0      0       0       4        0.0%
  1945                           ;!SFR3                 0      0       0       4        0.0%
  1946                           ;!BANK0               50     14      33       5       63.8%
  1947                           ;!BITSFR2              0      0       0       5        0.0%
  1948                           ;!SFR2                 0      0       0       5        0.0%
  1949                           ;!BITBANK1            50      0       0       6        0.0%
  1950                           ;!BANK1               50      0       0       7        0.0%
  1951                           ;!BITBANK3            60      0       0       8        0.0%
  1952                           ;!BANK3               60      0       0       9        0.0%
  1953                           ;!BITBANK2            60      0       0      10        0.0%
  1954                           ;!BANK2               60      0       0      11        0.0%
  1955                           ;!DATA                 0      0      3F      12        0.0%
  1956                           
  1957                           	global	_main
  1958                           
  1959 ;; *************** function _main *****************
  1960 ;; Defined at:
  1961 ;;		line 17 in file "main.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : B00/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1975 ;;      Params:         0       0       0       0       0
  1976 ;;      Locals:         0       0       0       0       0
  1977 ;;      Temps:          0       4       0       0       0
  1978 ;;      Totals:         0       4       0       0       0
  1979 ;;Total ram usage:        4 bytes
  1980 ;; Hardware stack levels required when called:    5
  1981 ;; This function calls:
  1982 ;;		_T0_init
  1983 ;;		_T0_start
  1984 ;;		_T0_status
  1985 ;;		_b0
  1986 ;;		_b1
  1987 ;;		_b2
  1988 ;;		_b3
  1989 ;;		_botao_init
  1990 ;;		_habTemporizador
  1991 ;;		_lcd_init
  1992 ;;		_lcd_num
  1993 ;;		_lcd_print
  1994 ;;		_resetTemporizador
  1995 ;;		_temporizar
  1996 ;; This function is called by:
  1997 ;;		Startup code after reset
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2001                           	file	"main.c"
  2002                           	line	17
  2003                           global __pmaintext
  2004                           __pmaintext:	;psect for function _main
  2005  001F                     psect	maintext
  2006                           	file	"main.c"
  2007                           	line	17
  2008                           	global	__size_of_main
  2009                           	__size_of_main	equ	__end_of_main-_main
  2010  0172                     	
  2011                           _main:	
  2012  001F                     ;incstack = 0
  2013                           	opt	stack 3
  2014                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2015                           	line	19
  2016                           	
  2017                           l2156:	
  2018  001F                     ;main.c: 19:     ANSEL = 0;
  2019                           	bsf	status, 5	;RP0=1, select bank3
  2020  001F  1683               	bsf	status, 6	;RP1=1, select bank3
  2021  0020  1703               	clrf	(392)^0180h	;volatile
  2022  0021  0188               	line	20
  2023                           	
  2024                           l2158:	
  2025  0022                     ;main.c: 20:     lcd_init();
  2026                           	fcall	_lcd_init
  2027  0022  120A  118A  2470  120A  118A  	line	21
  2028                           	
  2029                           l2160:	
  2030  0027                     ;main.c: 21:     T0_init();
  2031                           	fcall	_T0_init
  2032  0027  120A  118A  25CA  120A  118A  	line	22
  2033                           	
  2034                           l2162:	
  2035  002C                     ;main.c: 22:     botao_init();
  2036                           	fcall	_botao_init
  2037  002C  120A  118A  261E  120A  118A  	line	24
  2038                           	
  2039                           l2164:	
  2040  0031                     ;main.c: 24:     lcd_print(0,0,"00:00      00:00");
  2041                           	bcf	status, 5	;RP0=0, select bank0
  2042  0031  1283               	bcf	status, 6	;RP1=0, select bank0
  2043  0032  1303               	clrf	(lcd_print@col)
  2044  0033  01BF               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2045  0034  3001               	movwf	(??_main+0)+0
  2046  0035  00CF               	movf	(??_main+0)+0,w
  2047  0036  084F               	movwf	(lcd_print@str)
  2048  0037  00C0               	movlw	low(0)
  2049  0038  3000               	fcall	_lcd_print
  2050  0039  120A  118A  24AF  120A  118A  	line	25
  2051                           	
  2052                           l2166:	
  2053  003E                     ;main.c: 25:     lcd_print(1,0,"00:00      00:00");
  2054                           	bcf	status, 5	;RP0=0, select bank0
  2055  003E  1283               	bcf	status, 6	;RP1=0, select bank0
  2056  003F  1303               	clrf	(lcd_print@col)
  2057  0040  01BF               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  2058  0041  3001               	movwf	(??_main+0)+0
  2059  0042  00CF               	movf	(??_main+0)+0,w
  2060  0043  084F               	movwf	(lcd_print@str)
  2061  0044  00C0               	movlw	low(01h)
  2062  0045  3001               	fcall	_lcd_print
  2063  0046  120A  118A  24AF  120A  118A  	line	27
  2064                           	
  2065                           l2168:	
  2066  004B                     ;main.c: 27:     T0_start(1000);
  2067                           	movlw	0E8h
  2068  004B  30E8               	movwf	(T0_start@c)
  2069  004C  00F2               	movlw	03h
  2070  004D  3003               	movwf	((T0_start@c))+1
  2071  004E  00F3               	fcall	_T0_start
  2072  004F  120A  118A  25EA  120A  118A  	line	28
  2073                           	
  2074                           l2170:	
  2075  0054                     ;main.c: 28:     resetTemporizador( &tempo[0] );
  2076                           	movlw	(low(_tempo|((0x0)<<8)))&0ffh
  2077  0054  3027               	fcall	_resetTemporizador
  2078  0055  120A  118A  2563  120A  118A  	line	29
  2079                           	
  2080                           l2172:	
  2081  005A                     ;main.c: 29:     resetTemporizador( &tempo[1] );
  2082                           	movlw	(low(_tempo|((0x0)<<8)+06h))&0ffh
  2083  005A  302D               	fcall	_resetTemporizador
  2084  005B  120A  118A  2563  120A  118A  	line	30
  2085                           	
  2086                           l2174:	
  2087  0060                     ;main.c: 30:     resetTemporizador( &tempo[2] );
  2088                           	movlw	(low(_tempo|((0x0)<<8)+0Ch))&0ffh
  2089  0060  3033               	fcall	_resetTemporizador
  2090  0061  120A  118A  2563  120A  118A  	line	31
  2091                           	
  2092                           l2176:	
  2093  0066                     ;main.c: 31:     resetTemporizador( &tempo[3] );
  2094                           	movlw	(low(_tempo|((0x0)<<8)+012h))&0ffh
  2095  0066  3039               	fcall	_resetTemporizador
  2096  0067  120A  118A  2563  120A  118A  	goto	l2178
  2097  006C  286D               	line	33
  2098                           ;main.c: 33:     while( 1 )
  2099                           	
  2100                           l37:	
  2101  006D                     	line	35
  2102                           	
  2103                           l2178:	
  2104  006D                     ;main.c: 34:     {;main.c: 35:         habTemporizador( &tempo[0], b0() );
  2105                           	fcall	_b0
  2106  006D  120A  118A  262B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2107  0072  1283               	bcf	status, 6	;RP1=0, select bank0
  2108  0073  1303               	movwf	(??_main+0)+0
  2109  0074  00CF               	movf	(??_main+0)+0,w
  2110  0075  084F               	movwf	(habTemporizador@h)
  2111  0076  00F3               	movlw	(low(_tempo|((0x0)<<8)))&0ffh
  2112  0077  3027               	fcall	_habTemporizador
  2113  0078  120A  118A  25F4  120A  118A  	line	36
  2114                           	
  2115                           l2180:	
  2116  007D                     ;main.c: 36:         habTemporizador( &tempo[1], b1() );
  2117                           	fcall	_b1
  2118  007D  120A  118A  2625  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2119  0082  1283               	bcf	status, 6	;RP1=0, select bank0
  2120  0083  1303               	movwf	(??_main+0)+0
  2121  0084  00CF               	movf	(??_main+0)+0,w
  2122  0085  084F               	movwf	(habTemporizador@h)
  2123  0086  00F3               	movlw	(low(_tempo|((0x0)<<8)+06h))&0ffh
  2124  0087  302D               	fcall	_habTemporizador
  2125  0088  120A  118A  25F4  120A  118A  	line	37
  2126                           	
  2127                           l2182:	
  2128  008D                     ;main.c: 37:         habTemporizador( &tempo[2], b2() );
  2129                           	fcall	_b2
  2130  008D  120A  118A  260E  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2131  0092  1283               	bcf	status, 6	;RP1=0, select bank0
  2132  0093  1303               	movwf	(??_main+0)+0
  2133  0094  00CF               	movf	(??_main+0)+0,w
  2134  0095  084F               	movwf	(habTemporizador@h)
  2135  0096  00F3               	movlw	(low(_tempo|((0x0)<<8)+0Ch))&0ffh
  2136  0097  3033               	fcall	_habTemporizador
  2137  0098  120A  118A  25F4  120A  118A  	line	38
  2138                           	
  2139                           l2184:	
  2140  009D                     ;main.c: 38:         habTemporizador( &tempo[3], b3() );
  2141                           	fcall	_b3
  2142  009D  120A  118A  25FD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2143  00A2  1283               	bcf	status, 6	;RP1=0, select bank0
  2144  00A3  1303               	movwf	(??_main+0)+0
  2145  00A4  00CF               	movf	(??_main+0)+0,w
  2146  00A5  084F               	movwf	(habTemporizador@h)
  2147  00A6  00F3               	movlw	(low(_tempo|((0x0)<<8)+012h))&0ffh
  2148  00A7  3039               	fcall	_habTemporizador
  2149  00A8  120A  118A  25F4  120A  118A  	line	40
  2150                           	
  2151                           l2186:	
  2152  00AD                     ;main.c: 40:         if( T0_status() == 0 )
  2153                           	fcall	_T0_status
  2154  00AD  120A  118A  2616  120A  118A  	movf	((0+(?_T0_status))),w
  2155  00B2  0872               iorwf	((1+(?_T0_status))),w
  2156  00B3  0473               	btfss	status,2
  2157  00B4  1D03               	goto	u1841
  2158  00B5  28B7               	goto	u1840
  2159  00B6  28B8               u1841:
  2160  00B7                     	goto	l2178
  2161  00B7  286D               u1840:
  2162  00B8                     	line	42
  2163                           	
  2164                           l2188:	
  2165  00B8                     ;main.c: 41:         {;main.c: 42:             T0_start(1000);
  2166                           	movlw	0E8h
  2167  00B8  30E8               	movwf	(T0_start@c)
  2168  00B9  00F2               	movlw	03h
  2169  00BA  3003               	movwf	((T0_start@c))+1
  2170  00BB  00F3               	fcall	_T0_start
  2171  00BC  120A  118A  25EA  120A  118A  	line	44
  2172                           	
  2173                           l2190:	
  2174  00C1                     ;main.c: 44:             temporizar( &tempo[0] );
  2175                           	movlw	(low(_tempo|((0x0)<<8)))&0ffh
  2176  00C1  3027               	fcall	_temporizar
  2177  00C2  120A  118A  227F  120A  118A  	line	45
  2178                           	
  2179                           l2192:	
  2180  00C7                     ;main.c: 45:             temporizar( &tempo[1] );
  2181                           	movlw	(low(_tempo|((0x0)<<8)+06h))&0ffh
  2182  00C7  302D               	fcall	_temporizar
  2183  00C8  120A  118A  227F  120A  118A  	line	46
  2184                           	
  2185                           l2194:	
  2186  00CD                     ;main.c: 46:             temporizar( &tempo[2] );
  2187                           	movlw	(low(_tempo|((0x0)<<8)+0Ch))&0ffh
  2188  00CD  3033               	fcall	_temporizar
  2189  00CE  120A  118A  227F  120A  118A  	line	47
  2190                           	
  2191                           l2196:	
  2192  00D3                     ;main.c: 47:             temporizar( &tempo[3] );
  2193                           	movlw	(low(_tempo|((0x0)<<8)+012h))&0ffh
  2194  00D3  3039               	fcall	_temporizar
  2195  00D4  120A  118A  227F  120A  118A  	line	49
  2196                           	
  2197                           l2198:	
  2198  00D9                     ;main.c: 49:             lcd_num(0, 0, tempo[0].hor, 2);
  2199                           	bcf	status, 5	;RP0=0, select bank0
  2200  00D9  1283               	bcf	status, 6	;RP1=0, select bank0
  2201  00DA  1303               	clrf	(lcd_num@col)
  2202  00DB  01C3               	movf	0+(_tempo)+03h,w
  2203  00DC  082A               	movwf	(??_main+0)+0
  2204  00DD  00CF               	clrf	(??_main+0)+0+1
  2205  00DE  01D0               	movf	0+(??_main+0)+0,w
  2206  00DF  084F               	movwf	(lcd_num@num)
  2207  00E0  00C4               	movf	1+(??_main+0)+0,w
  2208  00E1  0850               	movwf	(lcd_num@num+1)
  2209  00E2  00C5               	movlw	low(02h)
  2210  00E3  3002               	movwf	(??_main+2)+0
  2211  00E4  00D1               	movf	(??_main+2)+0,w
  2212  00E5  0851               	movwf	(lcd_num@tam)
  2213  00E6  00C6               	movlw	low(0)
  2214  00E7  3000               	fcall	_lcd_num
  2215  00E8  120A  118A  2191  120A  118A  	line	50
  2216                           	
  2217                           l2200:	
  2218  00ED                     ;main.c: 50:             lcd_num(0, 3, tempo[0].min, 2);
  2219                           	movlw	low(03h)
  2220  00ED  3003               	bcf	status, 5	;RP0=0, select bank0
  2221  00EE  1283               	bcf	status, 6	;RP1=0, select bank0
  2222  00EF  1303               	movwf	(??_main+0)+0
  2223  00F0  00CF               	movf	(??_main+0)+0,w
  2224  00F1  084F               	movwf	(lcd_num@col)
  2225  00F2  00C3               	movf	0+(_tempo)+02h,w
  2226  00F3  0829               	movwf	(??_main+1)+0
  2227  00F4  00D0               	clrf	(??_main+1)+0+1
  2228  00F5  01D1               	movf	0+(??_main+1)+0,w
  2229  00F6  0850               	movwf	(lcd_num@num)
  2230  00F7  00C4               	movf	1+(??_main+1)+0,w
  2231  00F8  0851               	movwf	(lcd_num@num+1)
  2232  00F9  00C5               	movlw	low(02h)
  2233  00FA  3002               	movwf	(??_main+3)+0
  2234  00FB  00D2               	movf	(??_main+3)+0,w
  2235  00FC  0852               	movwf	(lcd_num@tam)
  2236  00FD  00C6               	movlw	low(0)
  2237  00FE  3000               	fcall	_lcd_num
  2238  00FF  120A  118A  2191  120A  118A  	line	52
  2239                           	
  2240                           l2202:	
  2241  0104                     ;main.c: 52:             lcd_num(0, 11, tempo[1].min, 2);
  2242                           	movlw	low(0Bh)
  2243  0104  300B               	bcf	status, 5	;RP0=0, select bank0
  2244  0105  1283               	bcf	status, 6	;RP1=0, select bank0
  2245  0106  1303               	movwf	(??_main+0)+0
  2246  0107  00CF               	movf	(??_main+0)+0,w
  2247  0108  084F               	movwf	(lcd_num@col)
  2248  0109  00C3               	movf	0+(_tempo)+08h,w
  2249  010A  082F               	movwf	(??_main+1)+0
  2250  010B  00D0               	clrf	(??_main+1)+0+1
  2251  010C  01D1               	movf	0+(??_main+1)+0,w
  2252  010D  0850               	movwf	(lcd_num@num)
  2253  010E  00C4               	movf	1+(??_main+1)+0,w
  2254  010F  0851               	movwf	(lcd_num@num+1)
  2255  0110  00C5               	movlw	low(02h)
  2256  0111  3002               	movwf	(??_main+3)+0
  2257  0112  00D2               	movf	(??_main+3)+0,w
  2258  0113  0852               	movwf	(lcd_num@tam)
  2259  0114  00C6               	movlw	low(0)
  2260  0115  3000               	fcall	_lcd_num
  2261  0116  120A  118A  2191  120A  118A  	line	53
  2262                           	
  2263                           l2204:	
  2264  011B                     ;main.c: 53:             lcd_num(0, 14, tempo[1].seg, 2);
  2265                           	movlw	low(0Eh)
  2266  011B  300E               	bcf	status, 5	;RP0=0, select bank0
  2267  011C  1283               	bcf	status, 6	;RP1=0, select bank0
  2268  011D  1303               	movwf	(??_main+0)+0
  2269  011E  00CF               	movf	(??_main+0)+0,w
  2270  011F  084F               	movwf	(lcd_num@col)
  2271  0120  00C3               	movf	0+(_tempo)+07h,w
  2272  0121  082E               	movwf	(??_main+1)+0
  2273  0122  00D0               	clrf	(??_main+1)+0+1
  2274  0123  01D1               	movf	0+(??_main+1)+0,w
  2275  0124  0850               	movwf	(lcd_num@num)
  2276  0125  00C4               	movf	1+(??_main+1)+0,w
  2277  0126  0851               	movwf	(lcd_num@num+1)
  2278  0127  00C5               	movlw	low(02h)
  2279  0128  3002               	movwf	(??_main+3)+0
  2280  0129  00D2               	movf	(??_main+3)+0,w
  2281  012A  0852               	movwf	(lcd_num@tam)
  2282  012B  00C6               	movlw	low(0)
  2283  012C  3000               	fcall	_lcd_num
  2284  012D  120A  118A  2191  120A  118A  	line	55
  2285                           	
  2286                           l2206:	
  2287  0132                     ;main.c: 55:             lcd_num(1, 0, tempo[2].min, 2);
  2288                           	bcf	status, 5	;RP0=0, select bank0
  2289  0132  1283               	bcf	status, 6	;RP1=0, select bank0
  2290  0133  1303               	clrf	(lcd_num@col)
  2291  0134  01C3               	movf	0+(_tempo)+0Eh,w
  2292  0135  0835               	movwf	(??_main+0)+0
  2293  0136  00CF               	clrf	(??_main+0)+0+1
  2294  0137  01D0               	movf	0+(??_main+0)+0,w
  2295  0138  084F               	movwf	(lcd_num@num)
  2296  0139  00C4               	movf	1+(??_main+0)+0,w
  2297  013A  0850               	movwf	(lcd_num@num+1)
  2298  013B  00C5               	movlw	low(02h)
  2299  013C  3002               	movwf	(??_main+2)+0
  2300  013D  00D1               	movf	(??_main+2)+0,w
  2301  013E  0851               	movwf	(lcd_num@tam)
  2302  013F  00C6               	movlw	low(01h)
  2303  0140  3001               	fcall	_lcd_num
  2304  0141  120A  118A  2191  120A  118A  	line	56
  2305                           	
  2306                           l2208:	
  2307  0146                     ;main.c: 56:             lcd_num(1, 3, tempo[2].seg, 2);
  2308                           	movlw	low(03h)
  2309  0146  3003               	bcf	status, 5	;RP0=0, select bank0
  2310  0147  1283               	bcf	status, 6	;RP1=0, select bank0
  2311  0148  1303               	movwf	(??_main+0)+0
  2312  0149  00CF               	movf	(??_main+0)+0,w
  2313  014A  084F               	movwf	(lcd_num@col)
  2314  014B  00C3               	movf	0+(_tempo)+0Dh,w
  2315  014C  0834               	movwf	(??_main+1)+0
  2316  014D  00D0               	clrf	(??_main+1)+0+1
  2317  014E  01D1               	movf	0+(??_main+1)+0,w
  2318  014F  0850               	movwf	(lcd_num@num)
  2319  0150  00C4               	movf	1+(??_main+1)+0,w
  2320  0151  0851               	movwf	(lcd_num@num+1)
  2321  0152  00C5               	movlw	low(02h)
  2322  0153  3002               	movwf	(??_main+3)+0
  2323  0154  00D2               	movf	(??_main+3)+0,w
  2324  0155  0852               	movwf	(lcd_num@tam)
  2325  0156  00C6               	movlw	low(01h)
  2326  0157  3001               	fcall	_lcd_num
  2327  0158  120A  118A  2191  120A  118A  	line	58
  2328                           	
  2329                           l2210:	
  2330  015D                     ;main.c: 58:             lcd_num(1, 11, tempo[3].min, 2);
  2331                           	movlw	low(0Bh)
  2332  015D  300B               	bcf	status, 5	;RP0=0, select bank0
  2333  015E  1283               	bcf	status, 6	;RP1=0, select bank0
  2334  015F  1303               	movwf	(??_main+0)+0
  2335  0160  00CF               	movf	(??_main+0)+0,w
  2336  0161  084F               	movwf	(lcd_num@col)
  2337  0162  00C3               	movf	0+(_tempo)+014h,w
  2338  0163  083B               	movwf	(??_main+1)+0
  2339  0164  00D0               	clrf	(??_main+1)+0+1
  2340  0165  01D1               	movf	0+(??_main+1)+0,w
  2341  0166  0850               	movwf	(lcd_num@num)
  2342  0167  00C4               	movf	1+(??_main+1)+0,w
  2343  0168  0851               	movwf	(lcd_num@num+1)
  2344  0169  00C5               	movlw	low(02h)
  2345  016A  3002               	movwf	(??_main+3)+0
  2346  016B  00D2               	movf	(??_main+3)+0,w
  2347  016C  0852               	movwf	(lcd_num@tam)
  2348  016D  00C6               	movlw	low(01h)
  2349  016E  3001               	fcall	_lcd_num
  2350  016F  120A  118A  2191  120A  118A  	line	59
  2351                           	
  2352                           l2212:	
  2353  0174                     ;main.c: 59:             lcd_num(1, 14, tempo[3].seg, 2);
  2354                           	movlw	low(0Eh)
  2355  0174  300E               	bcf	status, 5	;RP0=0, select bank0
  2356  0175  1283               	bcf	status, 6	;RP1=0, select bank0
  2357  0176  1303               	movwf	(??_main+0)+0
  2358  0177  00CF               	movf	(??_main+0)+0,w
  2359  0178  084F               	movwf	(lcd_num@col)
  2360  0179  00C3               	movf	0+(_tempo)+013h,w
  2361  017A  083A               	movwf	(??_main+1)+0
  2362  017B  00D0               	clrf	(??_main+1)+0+1
  2363  017C  01D1               	movf	0+(??_main+1)+0,w
  2364  017D  0850               	movwf	(lcd_num@num)
  2365  017E  00C4               	movf	1+(??_main+1)+0,w
  2366  017F  0851               	movwf	(lcd_num@num+1)
  2367  0180  00C5               	movlw	low(02h)
  2368  0181  3002               	movwf	(??_main+3)+0
  2369  0182  00D2               	movf	(??_main+3)+0,w
  2370  0183  0852               	movwf	(lcd_num@tam)
  2371  0184  00C6               	movlw	low(01h)
  2372  0185  3001               	fcall	_lcd_num
  2373  0186  120A  118A  2191  120A  118A  	goto	l2178
  2374  018B  286D               	line	61
  2375                           ;main.c: 61:         }
  2376                           	
  2377                           l38:	
  2378  018C                     	goto	l2178
  2379  018C  286D               	line	62
  2380                           ;main.c: 62:     }
  2381                           	
  2382                           l39:	
  2383  018D                     	goto	l2178
  2384  018D  286D               	
  2385                           l40:	
  2386  018E                     	line	63
  2387                           	
  2388                           l41:	
  2389  018E                     	global	start
  2390                           	ljmp	start
  2391  018E  120A  118A  280C   	opt stack 0
  2392                           GLOBAL	__end_of_main
  2393                           	__end_of_main:
  2394  0191                     	signat	_main,89
  2395                           	global	_temporizar
  2396                           
  2397 ;; *************** function _temporizar *****************
  2398 ;; Defined at:
  2399 ;;		line 13 in file "tempo.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  t               1    wreg     PTR struct temporizadorT
  2402 ;;		 -> tempo(24), 
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  t               1    4[BANK0 ] PTR struct temporizadorT
  2405 ;;		 -> tempo(24), 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2415 ;;      Params:         0       0       0       0       0
  2416 ;;      Locals:         0       1       0       0       0
  2417 ;;      Temps:          0       4       0       0       0
  2418 ;;      Totals:         0       5       0       0       0
  2419 ;;Total ram usage:        5 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    3
  2422 ;; This function calls:
  2423 ;;		___awmod
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2429                           	file	"tempo.c"
  2430                           	line	13
  2431                           global __ptext1
  2432                           __ptext1:	;psect for function _temporizar
  2433  027F                     psect	text1
  2434                           	file	"tempo.c"
  2435                           	line	13
  2436                           	global	__size_of_temporizar
  2437                           	__size_of_temporizar	equ	__end_of_temporizar-_temporizar
  2438  0090                     	
  2439                           _temporizar:	
  2440  027F                     ;incstack = 0
  2441                           	opt	stack 4
  2442                           ; Regs used in _temporizar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2443                           ;temporizar@t stored from wreg
  2444                           	bcf	status, 5	;RP0=0, select bank0
  2445  027F  1283               	bcf	status, 6	;RP1=0, select bank0
  2446  0280  1303               	movwf	(temporizar@t)
  2447  0281  00C3               	line	15
  2448                           	
  2449                           l2106:	
  2450  0282                     ;tempo.c: 13: void temporizar( struct temporizadorT * t );tempo.c: 14: {;tempo.c: 15:   
                                   if( t->hab )
  2451                           	movf	(temporizar@t),w
  2452  0282  0843               	movwf	fsr0
  2453  0283  0084               	bcf	status, 7	;select IRP bank0
  2454  0284  1383               	movf	(indf),w
  2455  0285  0800               	btfsc	status,2
  2456  0286  1903               	goto	u1711
  2457  0287  2A89               	goto	u1710
  2458  0288  2A8A               u1711:
  2459  0289                     	goto	l214
  2460  0289  2B0E               u1710:
  2461  028A                     	line	17
  2462                           	
  2463                           l2108:	
  2464  028A                     ;tempo.c: 16:     {;tempo.c: 17:         t->seg = ++t->seg % 60;
  2465                           	movlw	03Ch
  2466  028A  303C               	movwf	(___awmod@divisor)
  2467  028B  00F2               	movlw	0
  2468  028C  3000               	movwf	((___awmod@divisor))+1
  2469  028D  00F3               	movlw	low(01h)
  2470  028E  3001               	movwf	(??_temporizar+0)+0
  2471  028F  00BF               	incf	(temporizar@t),w
  2472  0290  0A43               	movwf	fsr0
  2473  0291  0084               	movf	(??_temporizar+0)+0,w
  2474  0292  083F               	addwf	indf,f
  2475  0293  0780               	movf	(indf),w
  2476  0294  0800               	movwf	(??_temporizar+1)+0
  2477  0295  00C0               	clrf	(??_temporizar+1)+0+1
  2478  0296  01C1               	movf	0+(??_temporizar+1)+0,w
  2479  0297  0840               	movwf	(___awmod@dividend)
  2480  0298  00F4               	movf	1+(??_temporizar+1)+0,w
  2481  0299  0841               	movwf	(___awmod@dividend+1)
  2482  029A  00F5               	fcall	___awmod
  2483  029B  120A  118A  240D  120A  118A  	movf	(0+(?___awmod)),w
  2484  02A0  0872               	bcf	status, 5	;RP0=0, select bank0
  2485  02A1  1283               	bcf	status, 6	;RP1=0, select bank0
  2486  02A2  1303               	movwf	(??_temporizar+3)+0
  2487  02A3  00C2               	incf	(temporizar@t),w
  2488  02A4  0A43               	movwf	fsr0
  2489  02A5  0084               	movf	(??_temporizar+3)+0,w
  2490  02A6  0842               	bcf	status, 7	;select IRP bank0
  2491  02A7  1383               	movwf	indf
  2492  02A8  0080               	line	18
  2493                           	
  2494                           l2110:	
  2495  02A9                     ;tempo.c: 18:         if( t->seg == 0 )
  2496                           	incf	(temporizar@t),w
  2497  02A9  0A43               	movwf	fsr0
  2498  02AA  0084               	movf	(indf),w
  2499  02AB  0800               	btfss	status,2
  2500  02AC  1D03               	goto	u1721
  2501  02AD  2AAF               	goto	u1720
  2502  02AE  2AB0               u1721:
  2503  02AF                     	goto	l214
  2504  02AF  2B0E               u1720:
  2505  02B0                     	line	20
  2506                           	
  2507                           l2112:	
  2508  02B0                     ;tempo.c: 19:         {;tempo.c: 20:             t->min = ++t->min % 60;
  2509                           	movlw	03Ch
  2510  02B0  303C               	movwf	(___awmod@divisor)
  2511  02B1  00F2               	movlw	0
  2512  02B2  3000               	movwf	((___awmod@divisor))+1
  2513  02B3  00F3               	movlw	low(01h)
  2514  02B4  3001               	movwf	(??_temporizar+0)+0
  2515  02B5  00BF               	movf	(temporizar@t),w
  2516  02B6  0843               	addlw	02h
  2517  02B7  3E02               	movwf	fsr0
  2518  02B8  0084               	movf	(??_temporizar+0)+0,w
  2519  02B9  083F               	addwf	indf,f
  2520  02BA  0780               	movf	(indf),w
  2521  02BB  0800               	movwf	(??_temporizar+1)+0
  2522  02BC  00C0               	clrf	(??_temporizar+1)+0+1
  2523  02BD  01C1               	movf	0+(??_temporizar+1)+0,w
  2524  02BE  0840               	movwf	(___awmod@dividend)
  2525  02BF  00F4               	movf	1+(??_temporizar+1)+0,w
  2526  02C0  0841               	movwf	(___awmod@dividend+1)
  2527  02C1  00F5               	fcall	___awmod
  2528  02C2  120A  118A  240D  120A  118A  	movf	(0+(?___awmod)),w
  2529  02C7  0872               	bcf	status, 5	;RP0=0, select bank0
  2530  02C8  1283               	bcf	status, 6	;RP1=0, select bank0
  2531  02C9  1303               	movwf	(??_temporizar+3)+0
  2532  02CA  00C2               	movf	(temporizar@t),w
  2533  02CB  0843               	addlw	02h
  2534  02CC  3E02               	movwf	fsr0
  2535  02CD  0084               	movf	(??_temporizar+3)+0,w
  2536  02CE  0842               	bcf	status, 7	;select IRP bank0
  2537  02CF  1383               	movwf	indf
  2538  02D0  0080               	line	21
  2539                           	
  2540                           l2114:	
  2541  02D1                     ;tempo.c: 21:             if( t->min == 0 )
  2542                           	movf	(temporizar@t),w
  2543  02D1  0843               	addlw	02h
  2544  02D2  3E02               	movwf	fsr0
  2545  02D3  0084               	movf	(indf),w
  2546  02D4  0800               	btfss	status,2
  2547  02D5  1D03               	goto	u1731
  2548  02D6  2AD8               	goto	u1730
  2549  02D7  2AD9               u1731:
  2550  02D8                     	goto	l214
  2551  02D8  2B0E               u1730:
  2552  02D9                     	line	23
  2553                           	
  2554                           l2116:	
  2555  02D9                     ;tempo.c: 22:             {;tempo.c: 23:                 t->hor = ++t->hor % 24;
  2556                           	movlw	018h
  2557  02D9  3018               	movwf	(___awmod@divisor)
  2558  02DA  00F2               	movlw	0
  2559  02DB  3000               	movwf	((___awmod@divisor))+1
  2560  02DC  00F3               	movlw	low(01h)
  2561  02DD  3001               	movwf	(??_temporizar+0)+0
  2562  02DE  00BF               	movf	(temporizar@t),w
  2563  02DF  0843               	addlw	03h
  2564  02E0  3E03               	movwf	fsr0
  2565  02E1  0084               	movf	(??_temporizar+0)+0,w
  2566  02E2  083F               	addwf	indf,f
  2567  02E3  0780               	movf	(indf),w
  2568  02E4  0800               	movwf	(??_temporizar+1)+0
  2569  02E5  00C0               	clrf	(??_temporizar+1)+0+1
  2570  02E6  01C1               	movf	0+(??_temporizar+1)+0,w
  2571  02E7  0840               	movwf	(___awmod@dividend)
  2572  02E8  00F4               	movf	1+(??_temporizar+1)+0,w
  2573  02E9  0841               	movwf	(___awmod@dividend+1)
  2574  02EA  00F5               	fcall	___awmod
  2575  02EB  120A  118A  240D  120A  118A  	movf	(0+(?___awmod)),w
  2576  02F0  0872               	bcf	status, 5	;RP0=0, select bank0
  2577  02F1  1283               	bcf	status, 6	;RP1=0, select bank0
  2578  02F2  1303               	movwf	(??_temporizar+3)+0
  2579  02F3  00C2               	movf	(temporizar@t),w
  2580  02F4  0843               	addlw	03h
  2581  02F5  3E03               	movwf	fsr0
  2582  02F6  0084               	movf	(??_temporizar+3)+0,w
  2583  02F7  0842               	bcf	status, 7	;select IRP bank0
  2584  02F8  1383               	movwf	indf
  2585  02F9  0080               	line	24
  2586                           	
  2587                           l2118:	
  2588  02FA                     ;tempo.c: 24:                 if(t->hor == 0)
  2589                           	movf	(temporizar@t),w
  2590  02FA  0843               	addlw	03h
  2591  02FB  3E03               	movwf	fsr0
  2592  02FC  0084               	movf	(indf),w
  2593  02FD  0800               	btfss	status,2
  2594  02FE  1D03               	goto	u1741
  2595  02FF  2B01               	goto	u1740
  2596  0300  2B02               u1741:
  2597  0301                     	goto	l214
  2598  0301  2B0E               u1740:
  2599  0302                     	line	26
  2600                           	
  2601                           l2120:	
  2602  0302                     ;tempo.c: 25:                 {;tempo.c: 26:                     t->dia++;
  2603                           	movf	(temporizar@t),w
  2604  0302  0843               	addlw	04h
  2605  0303  3E04               	movwf	fsr0
  2606  0304  0084               	movlw	01h
  2607  0305  3001               	addwf	indf,f
  2608  0306  0780               	incf	fsr0,f
  2609  0307  0A84               	skipnc
  2610  0308  1803               	incf	indf,f
  2611  0309  0A80               	goto	l214
  2612  030A  2B0E               	line	27
  2613                           ;tempo.c: 27:                 }
  2614                           	
  2615                           l213:	
  2616  030B                     	goto	l214
  2617  030B  2B0E               	line	28
  2618                           ;tempo.c: 28:             }
  2619                           	
  2620                           l212:	
  2621  030C                     	goto	l214
  2622  030C  2B0E               	line	29
  2623                           ;tempo.c: 29:         }
  2624                           	
  2625                           l211:	
  2626  030D                     	goto	l214
  2627  030D  2B0E               	line	30
  2628                           ;tempo.c: 30:     }
  2629                           	
  2630                           l210:	
  2631  030E                     	line	31
  2632                           	
  2633                           l214:	
  2634  030E                     	return
  2635  030E  0008               	opt stack 0
  2636                           GLOBAL	__end_of_temporizar
  2637                           	__end_of_temporizar:
  2638  030F                     	signat	_temporizar,4217
  2639                           	global	_resetTemporizador
  2640                           
  2641 ;; *************** function _resetTemporizador *****************
  2642 ;; Defined at:
  2643 ;;		line 39 in file "tempo.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  t               1    wreg     PTR struct temporizadorT
  2646 ;;		 -> tempo(24), 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  t               1    2[COMMON] PTR struct temporizadorT
  2649 ;;		 -> tempo(24), 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2659 ;;      Params:         0       0       0       0       0
  2660 ;;      Locals:         1       0       0       0       0
  2661 ;;      Temps:          0       0       0       0       0
  2662 ;;      Totals:         1       0       0       0       0
  2663 ;;Total ram usage:        1 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    2
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_main
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2673                           	line	39
  2674                           global __ptext2
  2675                           __ptext2:	;psect for function _resetTemporizador
  2676  0563                     psect	text2
  2677                           	file	"tempo.c"
  2678                           	line	39
  2679                           	global	__size_of_resetTemporizador
  2680                           	__size_of_resetTemporizador	equ	__end_of_resetTemporizador-_resetTemporizador
  2681  0017                     	
  2682                           _resetTemporizador:	
  2683  0563                     ;incstack = 0
  2684                           	opt	stack 5
  2685                           ; Regs used in _resetTemporizador: [wreg-fsr0h+status,2+status,0]
  2686                           ;resetTemporizador@t stored from wreg
  2687                           	movwf	(resetTemporizador@t)
  2688  0563  00F2               	line	41
  2689                           	
  2690                           l1240:	
  2691  0564                     ;tempo.c: 39: void resetTemporizador( struct temporizadorT * t );tempo.c: 40: {;tempo.c:
                                  41:     t->hab = 0;
  2692                           	movf	(resetTemporizador@t),w
  2693  0564  0872               	movwf	fsr0
  2694  0565  0084               	bcf	status, 7	;select IRP bank0
  2695  0566  1383               	clrf	indf
  2696  0567  0180               	line	42
  2697                           ;tempo.c: 42:     t->seg = 0;
  2698                           	incf	(resetTemporizador@t),w
  2699  0568  0A72               	movwf	fsr0
  2700  0569  0084               	clrf	indf
  2701  056A  0180               	line	43
  2702                           	
  2703                           l1242:	
  2704  056B                     ;tempo.c: 43:     t->min = 0;
  2705                           	movf	(resetTemporizador@t),w
  2706  056B  0872               	addlw	02h
  2707  056C  3E02               	movwf	fsr0
  2708  056D  0084               	clrf	indf
  2709  056E  0180               	line	44
  2710                           	
  2711                           l1244:	
  2712  056F                     ;tempo.c: 44:     t->hor = 0;
  2713                           	movf	(resetTemporizador@t),w
  2714  056F  0872               	addlw	03h
  2715  0570  3E03               	movwf	fsr0
  2716  0571  0084               	clrf	indf
  2717  0572  0180               	line	45
  2718                           	
  2719                           l1246:	
  2720  0573                     ;tempo.c: 45:     t->dia = 0;
  2721                           	movf	(resetTemporizador@t),w
  2722  0573  0872               	addlw	04h
  2723  0574  3E04               	movwf	fsr0
  2724  0575  0084               	clrf	indf
  2725  0576  0180               	incf	fsr0,f
  2726  0577  0A84               	clrf	indf
  2727  0578  0180               	line	46
  2728                           	
  2729                           l220:	
  2730  0579                     	return
  2731  0579  0008               	opt stack 0
  2732                           GLOBAL	__end_of_resetTemporizador
  2733                           	__end_of_resetTemporizador:
  2734  057A                     	signat	_resetTemporizador,4217
  2735                           	global	_lcd_print
  2736                           
  2737 ;; *************** function _lcd_print *****************
  2738 ;; Defined at:
  2739 ;;		line 156 in file "lcd.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  lin             1    wreg     unsigned char 
  2742 ;;  col             1    0[BANK0 ] unsigned char 
  2743 ;;  str             1    1[BANK0 ] PTR const unsigned char 
  2744 ;;		 -> STR_2(17), STR_1(17), 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;  lin             1    3[BANK0 ] unsigned char 
  2747 ;;  pos             1    2[BANK0 ] unsigned char 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      void 
  2750 ;; Registers used:
  2751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2757 ;;      Params:         0       2       0       0       0
  2758 ;;      Locals:         0       2       0       0       0
  2759 ;;      Temps:          1       0       0       0       0
  2760 ;;      Totals:         1       4       0       0       0
  2761 ;;Total ram usage:        5 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; Hardware stack levels required when called:    4
  2764 ;; This function calls:
  2765 ;;		_lcd_dataReg
  2766 ;;		_lcd_lincol
  2767 ;; This function is called by:
  2768 ;;		_main
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2772                           	file	"lcd.c"
  2773                           	line	156
  2774                           global __ptext3
  2775                           __ptext3:	;psect for function _lcd_print
  2776  04AF                     psect	text3
  2777                           	file	"lcd.c"
  2778                           	line	156
  2779                           	global	__size_of_lcd_print
  2780                           	__size_of_lcd_print	equ	__end_of_lcd_print-_lcd_print
  2781  003B                     	
  2782                           _lcd_print:	
  2783  04AF                     ;incstack = 0
  2784                           	opt	stack 3
  2785                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2786                           ;lcd_print@lin stored from wreg
  2787                           	bcf	status, 5	;RP0=0, select bank0
  2788  04AF  1283               	bcf	status, 6	;RP1=0, select bank0
  2789  04B0  1303               	movwf	(lcd_print@lin)
  2790  04B1  00C2               	line	158
  2791                           	
  2792                           l2094:	
  2793  04B2                     ;lcd.c: 156: void lcd_print( unsigned char lin, unsigned char col, const char * str );lc
                                 d.c: 157: {;lcd.c: 158:     char pos = col;
  2794                           	movf	(lcd_print@col),w
  2795  04B2  083F               	movwf	(??_lcd_print+0)+0
  2796  04B3  00F8               	movf	(??_lcd_print+0)+0,w
  2797  04B4  0878               	movwf	(lcd_print@pos)
  2798  04B5  00C1               	line	159
  2799                           	
  2800                           l2096:	
  2801  04B6                     ;lcd.c: 159:     lcd_lincol( lin, col );
  2802                           	movf	(lcd_print@col),w
  2803  04B6  083F               	movwf	(??_lcd_print+0)+0
  2804  04B7  00F8               	movf	(??_lcd_print+0)+0,w
  2805  04B8  0878               	movwf	(lcd_lincol@col)
  2806  04B9  00F5               	movf	(lcd_print@lin),w
  2807  04BA  0842               	fcall	_lcd_lincol
  2808  04BB  120A  118A  25A5  120A  118A  	line	161
  2809                           ;lcd.c: 161:     while( *str )
  2810                           	goto	l2104
  2811  04C0  2CDA               	
  2812                           l188:	
  2813  04C1                     	line	163
  2814                           	
  2815                           l2098:	
  2816  04C1                     ;lcd.c: 162:     {;lcd.c: 163:         lcd_dataReg( *str );
  2817                           	bcf	status, 5	;RP0=0, select bank0
  2818  04C1  1283               	bcf	status, 6	;RP1=0, select bank0
  2819  04C2  1303               	movf	(lcd_print@str),w
  2820  04C3  0840               	movwf	fsr0
  2821  04C4  0084               	fcall	stringdir
  2822  04C5  120A  118A  254C  120A  118A  	fcall	_lcd_dataReg
  2823  04CA  120A  118A  24EA  120A  118A  	line	164
  2824                           	
  2825                           l2100:	
  2826  04CF                     ;lcd.c: 164:         ++str;
  2827                           	movlw	low(01h)
  2828  04CF  3001               	movwf	(??_lcd_print+0)+0
  2829  04D0  00F8               	movf	(??_lcd_print+0)+0,w
  2830  04D1  0878               	bcf	status, 5	;RP0=0, select bank0
  2831  04D2  1283               	bcf	status, 6	;RP1=0, select bank0
  2832  04D3  1303               	addwf	(lcd_print@str),f
  2833  04D4  07C0               	line	165
  2834                           	
  2835                           l2102:	
  2836  04D5                     ;lcd.c: 165:         ++pos;
  2837                           	movlw	low(01h)
  2838  04D5  3001               	movwf	(??_lcd_print+0)+0
  2839  04D6  00F8               	movf	(??_lcd_print+0)+0,w
  2840  04D7  0878               	addwf	(lcd_print@pos),f
  2841  04D8  07C1               	goto	l2104
  2842  04D9  2CDA               	line	166
  2843                           ;lcd.c: 166:     }
  2844                           	
  2845                           l187:	
  2846  04DA                     	line	161
  2847                           	
  2848                           l2104:	
  2849  04DA                     ;lcd.c: 161:     while( *str )
  2850                           	bcf	status, 5	;RP0=0, select bank0
  2851  04DA  1283               	bcf	status, 6	;RP1=0, select bank0
  2852  04DB  1303               	movf	(lcd_print@str),w
  2853  04DC  0840               	movwf	fsr0
  2854  04DD  0084               	fcall	stringdir
  2855  04DE  120A  118A  254C  120A  118A  	xorlw	0
  2856  04E3  3A00               	skipz
  2857  04E4  1D03               	goto	u1701
  2858  04E5  2CE7               	goto	u1700
  2859  04E6  2CE8               u1701:
  2860  04E7                     	goto	l2098
  2861  04E7  2CC1               u1700:
  2862  04E8                     	goto	l190
  2863  04E8  2CE9               	
  2864                           l189:	
  2865  04E9                     	line	167
  2866                           	
  2867                           l190:	
  2868  04E9                     	return
  2869  04E9  0008               	opt stack 0
  2870                           GLOBAL	__end_of_lcd_print
  2871                           	__end_of_lcd_print:
  2872  04EA                     	signat	_lcd_print,12409
  2873                           	global	_lcd_num
  2874                           
  2875 ;; *************** function _lcd_num *****************
  2876 ;; Defined at:
  2877 ;;		line 178 in file "lcd.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  lin             1    wreg     unsigned char 
  2880 ;;  col             1    4[BANK0 ] unsigned char 
  2881 ;;  num             2    5[BANK0 ] int 
  2882 ;;  tam             1    7[BANK0 ] unsigned char 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  lin             1   11[BANK0 ] unsigned char 
  2885 ;;  div             2   14[BANK0 ] int 
  2886 ;;  sinal           1   13[BANK0 ] unsigned char 
  2887 ;;  size            1   12[BANK0 ] unsigned char 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2897 ;;      Params:         0       4       0       0       0
  2898 ;;      Locals:         0       5       0       0       0
  2899 ;;      Temps:          0       3       0       0       0
  2900 ;;      Totals:         0      12       0       0       0
  2901 ;;Total ram usage:       12 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    4
  2904 ;; This function calls:
  2905 ;;		___awdiv
  2906 ;;		___awmod
  2907 ;;		_lcd_dataReg
  2908 ;;		_lcd_lincol
  2909 ;; This function is called by:
  2910 ;;		_main
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2914                           	line	178
  2915                           global __ptext4
  2916                           __ptext4:	;psect for function _lcd_num
  2917  0191                     psect	text4
  2918                           	file	"lcd.c"
  2919                           	line	178
  2920                           	global	__size_of_lcd_num
  2921                           	__size_of_lcd_num	equ	__end_of_lcd_num-_lcd_num
  2922  00EE                     	
  2923                           _lcd_num:	
  2924  0191                     ;incstack = 0
  2925                           	opt	stack 3
  2926                           ; Regs used in _lcd_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2927                           ;lcd_num@lin stored from wreg
  2928                           	bcf	status, 5	;RP0=0, select bank0
  2929  0191  1283               	bcf	status, 6	;RP1=0, select bank0
  2930  0192  1303               	movwf	(lcd_num@lin)
  2931  0193  00CA               	line	185
  2932                           	
  2933                           l2122:	
  2934  0194                     ;lcd.c: 178: void lcd_num( unsigned char lin, unsigned char col,;lcd.c: 179:            
                                          int num, unsigned char tam );lcd.c: 180: {;lcd.c: 181:     int div;;lcd.c: 182:
                                      unsigned char size;;lcd.c: 183:     char sinal;;lcd.c: 185:     sinal = num < 0;
  2935                           	btfsc	(lcd_num@num+1),7
  2936  0194  1BC5               	goto	u1751
  2937  0195  2997               	goto	u1750
  2938  0196  2999               u1751:
  2939  0197                     	movlw	1
  2940  0197  3001               	goto	u1760
  2941  0198  299A               u1750:
  2942  0199                     	movlw	0
  2943  0199  3000               u1760:
  2944  019A                     	movwf	(??_lcd_num+0)+0
  2945  019A  00C7               	movf	(??_lcd_num+0)+0,w
  2946  019B  0847               	movwf	(lcd_num@sinal)
  2947  019C  00CC               	line	186
  2948                           	
  2949                           l2124:	
  2950  019D                     ;lcd.c: 186:     if( sinal )
  2951                           	movf	((lcd_num@sinal)),w
  2952  019D  084C               	btfsc	status,2
  2953  019E  1903               	goto	u1771
  2954  019F  29A1               	goto	u1770
  2955  01A0  29A2               u1771:
  2956  01A1                     	goto	l2128
  2957  01A1  29A8               u1770:
  2958  01A2                     	line	187
  2959                           	
  2960                           l2126:	
  2961  01A2                     ;lcd.c: 187:         num = (~num) + 1;
  2962                           	comf	(lcd_num@num),f
  2963  01A2  09C4               	comf	(lcd_num@num+1),f
  2964  01A3  09C5               	incf	(lcd_num@num),f
  2965  01A4  0AC4               	skipnz
  2966  01A5  1903               	incf	(lcd_num@num+1),f
  2967  01A6  0AC5               	goto	l2128
  2968  01A7  29A8               	
  2969                           l193:	
  2970  01A8                     	line	189
  2971                           	
  2972                           l2128:	
  2973  01A8                     ;lcd.c: 189:     lcd_lincol(lin, col);
  2974                           	movf	(lcd_num@col),w
  2975  01A8  0843               	movwf	(??_lcd_num+0)+0
  2976  01A9  00C7               	movf	(??_lcd_num+0)+0,w
  2977  01AA  0847               	movwf	(lcd_lincol@col)
  2978  01AB  00F5               	movf	(lcd_num@lin),w
  2979  01AC  084A               	fcall	_lcd_lincol
  2980  01AD  120A  118A  25A5  120A  118A  	line	191
  2981                           	
  2982                           l2130:	
  2983  01B2                     ;lcd.c: 191:     div=10000;
  2984                           	movlw	010h
  2985  01B2  3010               	bcf	status, 5	;RP0=0, select bank0
  2986  01B3  1283               	bcf	status, 6	;RP1=0, select bank0
  2987  01B4  1303               	movwf	(lcd_num@div)
  2988  01B5  00CD               	movlw	027h
  2989  01B6  3027               	movwf	((lcd_num@div))+1
  2990  01B7  00CE               	line	192
  2991                           	
  2992                           l2132:	
  2993  01B8                     ;lcd.c: 192:     size = 5;
  2994                           	movlw	low(05h)
  2995  01B8  3005               	movwf	(??_lcd_num+0)+0
  2996  01B9  00C7               	movf	(??_lcd_num+0)+0,w
  2997  01BA  0847               	movwf	(lcd_num@size)
  2998  01BB  00CB               	line	193
  2999                           ;lcd.c: 193:     while( div >= 1 )
  3000                           	goto	l2140
  3001  01BC  29EC               	
  3002                           l195:	
  3003  01BD                     	line	195
  3004                           	
  3005                           l2134:	
  3006  01BD                     ;lcd.c: 194:     {;lcd.c: 195:         if( num/div == 0 )
  3007                           	bcf	status, 5	;RP0=0, select bank0
  3008  01BD  1283               	bcf	status, 6	;RP1=0, select bank0
  3009  01BE  1303               	movf	(lcd_num@div+1),w
  3010  01BF  084E               	movwf	(___awdiv@divisor+1)
  3011  01C0  00F3               	movf	(lcd_num@div),w
  3012  01C1  084D               	movwf	(___awdiv@divisor)
  3013  01C2  00F2               	movf	(lcd_num@num+1),w
  3014  01C3  0845               	movwf	(___awdiv@dividend+1)
  3015  01C4  00F5               	movf	(lcd_num@num),w
  3016  01C5  0844               	movwf	(___awdiv@dividend)
  3017  01C6  00F4               	fcall	___awdiv
  3018  01C7  120A  118A  239A  120A  118A  	movf	((0+(?___awdiv))),w
  3019  01CC  0872               iorwf	((1+(?___awdiv))),w
  3020  01CD  0473               	btfss	status,2
  3021  01CE  1D03               	goto	u1781
  3022  01CF  29D1               	goto	u1780
  3023  01D0  29D2               u1781:
  3024  01D1                     	goto	l2146
  3025  01D1  2A06               u1780:
  3026  01D2                     	line	196
  3027                           	
  3028                           l2136:	
  3029  01D2                     ;lcd.c: 196:             --size;
  3030                           	movlw	01h
  3031  01D2  3001               	bcf	status, 5	;RP0=0, select bank0
  3032  01D3  1283               	bcf	status, 6	;RP1=0, select bank0
  3033  01D4  1303               	subwf	(lcd_num@size),f
  3034  01D5  02CB               	goto	l2138
  3035  01D6  29D8               	line	197
  3036                           ;lcd.c: 197:         else
  3037                           	
  3038                           l196:	
  3039  01D7                     	line	198
  3040                           ;lcd.c: 198:             break;
  3041                           	goto	l2146
  3042  01D7  2A06               	
  3043                           l197:	
  3044  01D8                     	line	199
  3045                           	
  3046                           l2138:	
  3047  01D8                     ;lcd.c: 199:         div/=10;
  3048                           	movlw	0Ah
  3049  01D8  300A               	movwf	(___awdiv@divisor)
  3050  01D9  00F2               	movlw	0
  3051  01DA  3000               	movwf	((___awdiv@divisor))+1
  3052  01DB  00F3               	movf	(lcd_num@div+1),w
  3053  01DC  084E               	movwf	(___awdiv@dividend+1)
  3054  01DD  00F5               	movf	(lcd_num@div),w
  3055  01DE  084D               	movwf	(___awdiv@dividend)
  3056  01DF  00F4               	fcall	___awdiv
  3057  01E0  120A  118A  239A  120A  118A  	movf	(1+(?___awdiv)),w
  3058  01E5  0873               	bcf	status, 5	;RP0=0, select bank0
  3059  01E6  1283               	bcf	status, 6	;RP1=0, select bank0
  3060  01E7  1303               	movwf	(lcd_num@div+1)
  3061  01E8  00CE               	movf	(0+(?___awdiv)),w
  3062  01E9  0872               	movwf	(lcd_num@div)
  3063  01EA  00CD               	goto	l2140
  3064  01EB  29EC               	line	200
  3065                           ;lcd.c: 200:     }
  3066                           	
  3067                           l194:	
  3068  01EC                     	line	193
  3069                           	
  3070                           l2140:	
  3071  01EC                     ;lcd.c: 193:     while( div >= 1 )
  3072                           	movf	(lcd_num@div+1),w
  3073  01EC  084E               	xorlw	80h
  3074  01ED  3A80               	movwf	btemp+1
  3075  01EE  00FF               	movlw	(0)^80h
  3076  01EF  3080               	subwf	btemp+1,w
  3077  01F0  027F               	skipz
  3078  01F1  1D03               	goto	u1795
  3079  01F2  29F5               	movlw	01h
  3080  01F3  3001               	subwf	(lcd_num@div),w
  3081  01F4  024D               u1795:
  3082  01F5                     
  3083                           	skipnc
  3084  01F5  1803               	goto	u1791
  3085  01F6  29F8               	goto	u1790
  3086  01F7  29F9               u1791:
  3087  01F8                     	goto	l2134
  3088  01F8  29BD               u1790:
  3089  01F9                     	goto	l2146
  3090  01F9  2A06               	
  3091                           l198:	
  3092  01FA                     	line	202
  3093                           ;lcd.c: 202:     while( tam > (size+sinal) && tam > 1 )
  3094                           	goto	l2146
  3095  01FA  2A06               	
  3096                           l200:	
  3097  01FB                     	line	205
  3098                           	
  3099                           l2142:	
  3100  01FB                     ;lcd.c: 203:     {;lcd.c: 205:         lcd_dataReg('0');
  3101                           	movlw	low(030h)
  3102  01FB  3030               	fcall	_lcd_dataReg
  3103  01FC  120A  118A  24EA  120A  118A  	line	206
  3104                           	
  3105                           l2144:	
  3106  0201                     ;lcd.c: 206:         --tam;
  3107                           	movlw	01h
  3108  0201  3001               	bcf	status, 5	;RP0=0, select bank0
  3109  0202  1283               	bcf	status, 6	;RP1=0, select bank0
  3110  0203  1303               	subwf	(lcd_num@tam),f
  3111  0204  02C6               	goto	l2146
  3112  0205  2A06               	line	207
  3113                           ;lcd.c: 207:     }
  3114                           	
  3115                           l199:	
  3116  0206                     	line	202
  3117                           	
  3118                           l2146:	
  3119  0206                     ;lcd.c: 202:     while( tam > (size+sinal) && tam > 1 )
  3120                           	bcf	status, 5	;RP0=0, select bank0
  3121  0206  1283               	bcf	status, 6	;RP1=0, select bank0
  3122  0207  1303               	movf	(lcd_num@size),w
  3123  0208  084B               	addwf	(lcd_num@sinal),w
  3124  0209  074C               	movwf	(??_lcd_num+0)+0
  3125  020A  00C7               	clrf	(??_lcd_num+0)+0+1
  3126  020B  01C8               	rlf	1+(??_lcd_num+0)+0,f
  3127  020C  0DC8               	
  3128                           	movf	1+(??_lcd_num+0)+0,w
  3129  020D  0848               	xorlw	80h
  3130  020E  3A80               	movwf	(??_lcd_num+2)+0
  3131  020F  00C9               	movlw	80h
  3132  0210  3080               	subwf	(??_lcd_num+2)+0,w
  3133  0211  0249               	skipz
  3134  0212  1D03               	goto	u1805
  3135  0213  2A16               	movf	(lcd_num@tam),w
  3136  0214  0846               	subwf	0+(??_lcd_num+0)+0,w
  3137  0215  0247               u1805:
  3138  0216                     
  3139                           	skipnc
  3140  0216  1803               	goto	u1801
  3141  0217  2A19               	goto	u1800
  3142  0218  2A1A               u1801:
  3143  0219                     	goto	l2150
  3144  0219  2A24               u1800:
  3145  021A                     	
  3146                           l2148:	
  3147  021A                     	movlw	low(02h)
  3148  021A  3002               	bcf	status, 5	;RP0=0, select bank0
  3149  021B  1283               	bcf	status, 6	;RP1=0, select bank0
  3150  021C  1303               	subwf	(lcd_num@tam),w
  3151  021D  0246               	skipnc
  3152  021E  1803               	goto	u1811
  3153  021F  2A21               	goto	u1810
  3154  0220  2A22               u1811:
  3155  0221                     	goto	l2142
  3156  0221  29FB               u1810:
  3157  0222                     	goto	l2150
  3158  0222  2A24               	
  3159                           l202:	
  3160  0223                     	goto	l2150
  3161  0223  2A24               	
  3162                           l203:	
  3163  0224                     	line	209
  3164                           	
  3165                           l2150:	
  3166  0224                     ;lcd.c: 209:     if( sinal )
  3167                           	bcf	status, 5	;RP0=0, select bank0
  3168  0224  1283               	bcf	status, 6	;RP1=0, select bank0
  3169  0225  1303               	movf	((lcd_num@sinal)),w
  3170  0226  084C               	btfsc	status,2
  3171  0227  1903               	goto	u1821
  3172  0228  2A2A               	goto	u1820
  3173  0229  2A2B               u1821:
  3174  022A                     	goto	l205
  3175  022A  2A32               u1820:
  3176  022B                     	line	210
  3177                           	
  3178                           l2152:	
  3179  022B                     ;lcd.c: 210:         lcd_dataReg('-');
  3180                           	movlw	low(02Dh)
  3181  022B  302D               	fcall	_lcd_dataReg
  3182  022C  120A  118A  24EA  120A  118A  	goto	l205
  3183  0231  2A32               	
  3184                           l204:	
  3185  0232                     	line	212
  3186                           ;lcd.c: 212:     do
  3187                           	
  3188                           l205:	
  3189  0232                     	line	214
  3190                           ;lcd.c: 213:     {;lcd.c: 214:         lcd_dataReg( (unsigned char)(num / div) + '0' );

  3191                           	bcf	status, 5	;RP0=0, select bank0
  3192  0232  1283               	bcf	status, 6	;RP1=0, select bank0
  3193  0233  1303               	movf	(lcd_num@div+1),w
  3194  0234  084E               	movwf	(___awdiv@divisor+1)
  3195  0235  00F3               	movf	(lcd_num@div),w
  3196  0236  084D               	movwf	(___awdiv@divisor)
  3197  0237  00F2               	movf	(lcd_num@num+1),w
  3198  0238  0845               	movwf	(___awdiv@dividend+1)
  3199  0239  00F5               	movf	(lcd_num@num),w
  3200  023A  0844               	movwf	(___awdiv@dividend)
  3201  023B  00F4               	fcall	___awdiv
  3202  023C  120A  118A  239A  120A  118A  	movf	(0+(?___awdiv)),w
  3203  0241  0872               	addlw	030h
  3204  0242  3E30               	fcall	_lcd_dataReg
  3205  0243  120A  118A  24EA  120A  118A  	line	215
  3206                           ;lcd.c: 215:         num = num % div;
  3207                           	bcf	status, 5	;RP0=0, select bank0
  3208  0248  1283               	bcf	status, 6	;RP1=0, select bank0
  3209  0249  1303               	movf	(lcd_num@div+1),w
  3210  024A  084E               	movwf	(___awmod@divisor+1)
  3211  024B  00F3               	movf	(lcd_num@div),w
  3212  024C  084D               	movwf	(___awmod@divisor)
  3213  024D  00F2               	movf	(lcd_num@num+1),w
  3214  024E  0845               	movwf	(___awmod@dividend+1)
  3215  024F  00F5               	movf	(lcd_num@num),w
  3216  0250  0844               	movwf	(___awmod@dividend)
  3217  0251  00F4               	fcall	___awmod
  3218  0252  120A  118A  240D  120A  118A  	movf	(1+(?___awmod)),w
  3219  0257  0873               	bcf	status, 5	;RP0=0, select bank0
  3220  0258  1283               	bcf	status, 6	;RP1=0, select bank0
  3221  0259  1303               	movwf	(lcd_num@num+1)
  3222  025A  00C5               	movf	(0+(?___awmod)),w
  3223  025B  0872               	movwf	(lcd_num@num)
  3224  025C  00C4               	line	216
  3225                           ;lcd.c: 216:         div/=10;
  3226                           	movlw	0Ah
  3227  025D  300A               	movwf	(___awdiv@divisor)
  3228  025E  00F2               	movlw	0
  3229  025F  3000               	movwf	((___awdiv@divisor))+1
  3230  0260  00F3               	movf	(lcd_num@div+1),w
  3231  0261  084E               	movwf	(___awdiv@dividend+1)
  3232  0262  00F5               	movf	(lcd_num@div),w
  3233  0263  084D               	movwf	(___awdiv@dividend)
  3234  0264  00F4               	fcall	___awdiv
  3235  0265  120A  118A  239A  120A  118A  	movf	(1+(?___awdiv)),w
  3236  026A  0873               	bcf	status, 5	;RP0=0, select bank0
  3237  026B  1283               	bcf	status, 6	;RP1=0, select bank0
  3238  026C  1303               	movwf	(lcd_num@div+1)
  3239  026D  00CE               	movf	(0+(?___awdiv)),w
  3240  026E  0872               	movwf	(lcd_num@div)
  3241  026F  00CD               	line	217
  3242                           	
  3243                           l2154:	
  3244  0270                     ;lcd.c: 217:     }
  3245                           	movf	(lcd_num@div+1),w
  3246  0270  084E               	xorlw	80h
  3247  0271  3A80               	movwf	btemp+1
  3248  0272  00FF               	movlw	(0)^80h
  3249  0273  3080               	subwf	btemp+1,w
  3250  0274  027F               	skipz
  3251  0275  1D03               	goto	u1835
  3252  0276  2A79               	movlw	01h
  3253  0277  3001               	subwf	(lcd_num@div),w
  3254  0278  024D               u1835:
  3255  0279                     
  3256                           	skipnc
  3257  0279  1803               	goto	u1831
  3258  027A  2A7C               	goto	u1830
  3259  027B  2A7D               u1831:
  3260  027C                     	goto	l205
  3261  027C  2A32               u1830:
  3262  027D                     	goto	l207
  3263  027D  2A7E               	
  3264                           l206:	
  3265  027E                     	line	219
  3266                           	
  3267                           l207:	
  3268  027E                     	return
  3269  027E  0008               	opt stack 0
  3270                           GLOBAL	__end_of_lcd_num
  3271                           	__end_of_lcd_num:
  3272  027F                     	signat	_lcd_num,16505
  3273                           	global	_lcd_lincol
  3274                           
  3275 ;; *************** function _lcd_lincol *****************
  3276 ;; Defined at:
  3277 ;;		line 111 in file "lcd.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  lin             1    wreg     unsigned char 
  3280 ;;  col             1    5[COMMON] unsigned char 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  lin             1    7[COMMON] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      void 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0, pclath, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3292 ;;      Params:         1       0       0       0       0
  3293 ;;      Locals:         1       0       0       0       0
  3294 ;;      Temps:          1       0       0       0       0
  3295 ;;      Totals:         3       0       0       0       0
  3296 ;;Total ram usage:        3 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    3
  3299 ;; This function calls:
  3300 ;;		_lcd_instReg
  3301 ;; This function is called by:
  3302 ;;		_lcd_print
  3303 ;;		_lcd_num
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3307                           	line	111
  3308                           global __ptext5
  3309                           __ptext5:	;psect for function _lcd_lincol
  3310  05A5                     psect	text5
  3311                           	file	"lcd.c"
  3312                           	line	111
  3313                           	global	__size_of_lcd_lincol
  3314                           	__size_of_lcd_lincol	equ	__end_of_lcd_lincol-_lcd_lincol
  3315  0013                     	
  3316                           _lcd_lincol:	
  3317  05A5                     ;incstack = 0
  3318                           	opt	stack 3
  3319                           ; Regs used in _lcd_lincol: [wreg+status,2+status,0+pclath+cstack]
  3320                           ;lcd_lincol@lin stored from wreg
  3321                           	movwf	(lcd_lincol@lin)
  3322  05A5  00F7               	line	113
  3323                           	
  3324                           l1696:	
  3325  05A6                     ;lcd.c: 111: void lcd_lincol( unsigned char lin, unsigned char col);lcd.c: 112: {;lcd.c:
                                  113:     lcd_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  3326                           	movf	(lcd_lincol@lin),w
  3327  05A6  0877               	movwf	(??_lcd_lincol+0)+0
  3328  05A7  00F6               	movlw	06h
  3329  05A8  3006               u1025:
  3330  05A9                     	clrc
  3331  05A9  1003               	rlf	(??_lcd_lincol+0)+0,f
  3332  05AA  0DF6               	addlw	-1
  3333  05AB  3EFF               	skipz
  3334  05AC  1D03               	goto	u1025
  3335  05AD  2DA9               	movf	(lcd_lincol@col),w
  3336  05AE  0875               	addwf	0+(??_lcd_lincol+0)+0,w
  3337  05AF  0776               	andlw	07Fh
  3338  05B0  397F               	addlw	080h
  3339  05B1  3E80               	fcall	_lcd_instReg
  3340  05B2  120A  118A  230F  120A  118A  	line	114
  3341                           	
  3342                           l178:	
  3343  05B7                     	return
  3344  05B7  0008               	opt stack 0
  3345                           GLOBAL	__end_of_lcd_lincol
  3346                           	__end_of_lcd_lincol:
  3347  05B8                     	signat	_lcd_lincol,8313
  3348                           	global	_lcd_dataReg
  3349                           
  3350 ;; *************** function _lcd_dataReg *****************
  3351 ;; Defined at:
  3352 ;;		line 93 in file "lcd.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  d               1    wreg     unsigned char 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  d               1    4[COMMON] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3366 ;;      Params:         0       0       0       0       0
  3367 ;;      Locals:         1       0       0       0       0
  3368 ;;      Temps:          2       0       0       0       0
  3369 ;;      Totals:         3       0       0       0       0
  3370 ;;Total ram usage:        3 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; Hardware stack levels required when called:    2
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_lcd_print
  3377 ;;		_lcd_num
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3381                           	line	93
  3382                           global __ptext6
  3383                           __ptext6:	;psect for function _lcd_dataReg
  3384  04EA                     psect	text6
  3385                           	file	"lcd.c"
  3386                           	line	93
  3387                           	global	__size_of_lcd_dataReg
  3388                           	__size_of_lcd_dataReg	equ	__end_of_lcd_dataReg-_lcd_dataReg
  3389  0036                     	
  3390                           _lcd_dataReg:	
  3391  04EA                     ;incstack = 0
  3392                           	opt	stack 4
  3393                           ; Regs used in _lcd_dataReg: [wreg+status,2+status,0]
  3394                           ;lcd_dataReg@d stored from wreg
  3395                           	movwf	(lcd_dataReg@d)
  3396  04EA  00F4               	line	95
  3397                           	
  3398                           l1678:	
  3399  04EB                     ;lcd.c: 93: void lcd_dataReg( unsigned char d );lcd.c: 94: {;lcd.c: 95:     PORTDbits.RD
                                 2 = 1;
  3400                           	bcf	status, 5	;RP0=0, select bank0
  3401  04EB  1283               	bcf	status, 6	;RP1=0, select bank0
  3402  04EC  1303               	bsf	(8),2	;volatile
  3403  04ED  1508               	line	96
  3404                           	
  3405                           l1680:	
  3406  04EE                     ;lcd.c: 96:     PORTD = ((PORTD & 0x0F)|(d >> 4<<4));
  3407                           	movf	(lcd_dataReg@d),w
  3408  04EE  0874               	movwf	(??_lcd_dataReg+0)+0
  3409  04EF  00F2               	movlw	04h
  3410  04F0  3004               u995:
  3411  04F1                     	clrc
  3412  04F1  1003               	rrf	(??_lcd_dataReg+0)+0,f
  3413  04F2  0CF2               	addlw	-1
  3414  04F3  3EFF               	skipz
  3415  04F4  1D03               	goto	u995
  3416  04F5  2CF1               	movf	0+(??_lcd_dataReg+0)+0,w
  3417  04F6  0872               	movwf	(??_lcd_dataReg+1)+0
  3418  04F7  00F3               	movlw	04h
  3419  04F8  3004               u1005:
  3420  04F9                     	clrc
  3421  04F9  1003               	rlf	(??_lcd_dataReg+1)+0,f
  3422  04FA  0DF3               	addlw	-1
  3423  04FB  3EFF               	skipz
  3424  04FC  1D03               	goto	u1005
  3425  04FD  2CF9               	movf	(8),w	;volatile
  3426  04FE  0808               	andlw	0Fh
  3427  04FF  390F               	iorwf	0+(??_lcd_dataReg+1)+0,w
  3428  0500  0473               	movwf	(8)	;volatile
  3429  0501  0088               	line	97
  3430                           	
  3431                           l1682:	
  3432  0502                     ;lcd.c: 97:     PORTDbits.RD3 = 0;
  3433                           	bcf	(8),3	;volatile
  3434  0502  1188               	line	98
  3435                           	
  3436                           l1684:	
  3437  0503                     ;lcd.c: 98:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3438                           	opt asmopt_push
  3439                           opt asmopt_off
  3440                           	movlw	13
  3441  0503  300D               movwf	((??_lcd_dataReg+0)+0),f
  3442  0504  00F2               	u1857:
  3443  0505                     decfsz	(??_lcd_dataReg+0)+0,f
  3444  0505  0BF2               	goto	u1857
  3445  0506  2D05               opt asmopt_pop
  3446                           
  3447                           	line	99
  3448                           	
  3449                           l1686:	
  3450  0507                     ;lcd.c: 99:     PORTDbits.RD3 = 1;
  3451                           	bcf	status, 5	;RP0=0, select bank0
  3452  0507  1283               	bcf	status, 6	;RP1=0, select bank0
  3453  0508  1303               	bsf	(8),3	;volatile
  3454  0509  1588               	line	101
  3455                           	
  3456                           l1688:	
  3457  050A                     ;lcd.c: 101:     PORTDbits.RD2 = 1;
  3458                           	bsf	(8),2	;volatile
  3459  050A  1508               	line	102
  3460                           	
  3461                           l1690:	
  3462  050B                     ;lcd.c: 102:     PORTD = ((PORTD & 0x0F)|(d<<4));
  3463                           	movf	(lcd_dataReg@d),w
  3464  050B  0874               	movwf	(??_lcd_dataReg+0)+0
  3465  050C  00F2               	movlw	04h
  3466  050D  3004               u1015:
  3467  050E                     	clrc
  3468  050E  1003               	rlf	(??_lcd_dataReg+0)+0,f
  3469  050F  0DF2               	addlw	-1
  3470  0510  3EFF               	skipz
  3471  0511  1D03               	goto	u1015
  3472  0512  2D0E               	movf	(8),w	;volatile
  3473  0513  0808               	andlw	0Fh
  3474  0514  390F               	iorwf	0+(??_lcd_dataReg+0)+0,w
  3475  0515  0472               	movwf	(8)	;volatile
  3476  0516  0088               	line	103
  3477                           	
  3478                           l1692:	
  3479  0517                     ;lcd.c: 103:     PORTDbits.RD3 = 0;
  3480                           	bcf	(8),3	;volatile
  3481  0517  1188               	line	104
  3482                           ;lcd.c: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3483                           	opt asmopt_push
  3484                           opt asmopt_off
  3485                           	movlw	13
  3486  0518  300D               movwf	((??_lcd_dataReg+0)+0),f
  3487  0519  00F2               	u1867:
  3488  051A                     decfsz	(??_lcd_dataReg+0)+0,f
  3489  051A  0BF2               	goto	u1867
  3490  051B  2D1A               opt asmopt_pop
  3491                           
  3492                           	line	105
  3493                           	
  3494                           l1694:	
  3495  051C                     ;lcd.c: 105:     PORTDbits.RD3 = 1;
  3496                           	bcf	status, 5	;RP0=0, select bank0
  3497  051C  1283               	bcf	status, 6	;RP1=0, select bank0
  3498  051D  1303               	bsf	(8),3	;volatile
  3499  051E  1588               	line	106
  3500                           	
  3501                           l175:	
  3502  051F                     	return
  3503  051F  0008               	opt stack 0
  3504                           GLOBAL	__end_of_lcd_dataReg
  3505                           	__end_of_lcd_dataReg:
  3506  0520                     	signat	_lcd_dataReg,4217
  3507                           	global	___awmod
  3508                           
  3509 ;; *************** function ___awmod *****************
  3510 ;; Defined at:
  3511 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  divisor         2    2[COMMON] int 
  3514 ;;  dividend        2    4[COMMON] int 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  sign            1    8[COMMON] unsigned char 
  3517 ;;  counter         1    7[COMMON] unsigned char 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  2    2[COMMON] int 
  3520 ;; Registers used:
  3521 ;;		wreg, status,2, status,0
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3527 ;;      Params:         4       0       0       0       0
  3528 ;;      Locals:         2       0       0       0       0
  3529 ;;      Temps:          1       0       0       0       0
  3530 ;;      Totals:         7       0       0       0       0
  3531 ;;Total ram usage:        7 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:    2
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_lcd_num
  3538 ;;		_temporizar
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           psect	text7,local,class=CODE,delta=2,merge=1,group=1
  3542                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3543                           	line	5
  3544                           global __ptext7
  3545                           __ptext7:	;psect for function ___awmod
  3546  040D                     psect	text7
  3547                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3548                           	line	5
  3549                           	global	__size_of___awmod
  3550                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  3551  0063                     	
  3552                           ___awmod:	
  3553  040D                     ;incstack = 0
  3554                           	opt	stack 4
  3555                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3556                           	line	12
  3557                           	
  3558                           l2056:	
  3559  040D                     	clrf	(___awmod@sign)
  3560  040D  01F8               	line	13
  3561                           	
  3562                           l2058:	
  3563  040E                     	btfss	(___awmod@dividend+1),7
  3564  040E  1FF5               	goto	u1611
  3565  040F  2C11               	goto	u1610
  3566  0410  2C12               u1611:
  3567  0411                     	goto	l2064
  3568  0411  2C1A               u1610:
  3569  0412                     	line	14
  3570                           	
  3571                           l2060:	
  3572  0412                     	comf	(___awmod@dividend),f
  3573  0412  09F4               	comf	(___awmod@dividend+1),f
  3574  0413  09F5               	incf	(___awmod@dividend),f
  3575  0414  0AF4               	skipnz
  3576  0415  1903               	incf	(___awmod@dividend+1),f
  3577  0416  0AF5               	line	15
  3578                           	
  3579                           l2062:	
  3580  0417                     	clrf	(___awmod@sign)
  3581  0417  01F8               	incf	(___awmod@sign),f
  3582  0418  0AF8               	goto	l2064
  3583  0419  2C1A               	line	16
  3584                           	
  3585                           l553:	
  3586  041A                     	line	17
  3587                           	
  3588                           l2064:	
  3589  041A                     	btfss	(___awmod@divisor+1),7
  3590  041A  1FF3               	goto	u1621
  3591  041B  2C1D               	goto	u1620
  3592  041C  2C1E               u1621:
  3593  041D                     	goto	l2068
  3594  041D  2C24               u1620:
  3595  041E                     	line	18
  3596                           	
  3597                           l2066:	
  3598  041E                     	comf	(___awmod@divisor),f
  3599  041E  09F2               	comf	(___awmod@divisor+1),f
  3600  041F  09F3               	incf	(___awmod@divisor),f
  3601  0420  0AF2               	skipnz
  3602  0421  1903               	incf	(___awmod@divisor+1),f
  3603  0422  0AF3               	goto	l2068
  3604  0423  2C24               	
  3605                           l554:	
  3606  0424                     	line	19
  3607                           	
  3608                           l2068:	
  3609  0424                     	movf	((___awmod@divisor)),w
  3610  0424  0872               iorwf	((___awmod@divisor+1)),w
  3611  0425  0473               	btfsc	status,2
  3612  0426  1903               	goto	u1631
  3613  0427  2C29               	goto	u1630
  3614  0428  2C2A               u1631:
  3615  0429                     	goto	l2086
  3616  0429  2C5F               u1630:
  3617  042A                     	line	20
  3618                           	
  3619                           l2070:	
  3620  042A                     	clrf	(___awmod@counter)
  3621  042A  01F7               	incf	(___awmod@counter),f
  3622  042B  0AF7               	line	21
  3623                           	goto	l2076
  3624  042C  2C39               	
  3625                           l557:	
  3626  042D                     	line	22
  3627                           	
  3628                           l2072:	
  3629  042D                     	movlw	01h
  3630  042D  3001               	
  3631                           u1645:
  3632  042E                     	clrc
  3633  042E  1003               	rlf	(___awmod@divisor),f
  3634  042F  0DF2               	rlf	(___awmod@divisor+1),f
  3635  0430  0DF3               	addlw	-1
  3636  0431  3EFF               	skipz
  3637  0432  1D03               	goto	u1645
  3638  0433  2C2E               	line	23
  3639                           	
  3640                           l2074:	
  3641  0434                     	movlw	low(01h)
  3642  0434  3001               	movwf	(??___awmod+0)+0
  3643  0435  00F6               	movf	(??___awmod+0)+0,w
  3644  0436  0876               	addwf	(___awmod@counter),f
  3645  0437  07F7               	goto	l2076
  3646  0438  2C39               	line	24
  3647                           	
  3648                           l556:	
  3649  0439                     	line	21
  3650                           	
  3651                           l2076:	
  3652  0439                     	btfss	(___awmod@divisor+1),(15)&7
  3653  0439  1FF3               	goto	u1651
  3654  043A  2C3C               	goto	u1650
  3655  043B  2C3D               u1651:
  3656  043C                     	goto	l2072
  3657  043C  2C2D               u1650:
  3658  043D                     	goto	l2078
  3659  043D  2C3F               	
  3660                           l558:	
  3661  043E                     	goto	l2078
  3662  043E  2C3F               	line	25
  3663                           	
  3664                           l559:	
  3665  043F                     	line	26
  3666                           	
  3667                           l2078:	
  3668  043F                     	movf	(___awmod@divisor+1),w
  3669  043F  0873               	subwf	(___awmod@dividend+1),w
  3670  0440  0275               	skipz
  3671  0441  1D03               	goto	u1665
  3672  0442  2C45               	movf	(___awmod@divisor),w
  3673  0443  0872               	subwf	(___awmod@dividend),w
  3674  0444  0274               u1665:
  3675  0445                     	skipc
  3676  0445  1C03               	goto	u1661
  3677  0446  2C48               	goto	u1660
  3678  0447  2C49               u1661:
  3679  0448                     	goto	l2082
  3680  0448  2C50               u1660:
  3681  0449                     	line	27
  3682                           	
  3683                           l2080:	
  3684  0449                     	movf	(___awmod@divisor),w
  3685  0449  0872               	subwf	(___awmod@dividend),f
  3686  044A  02F4               	movf	(___awmod@divisor+1),w
  3687  044B  0873               	skipc
  3688  044C  1C03               	decf	(___awmod@dividend+1),f
  3689  044D  03F5               	subwf	(___awmod@dividend+1),f
  3690  044E  02F5               	goto	l2082
  3691  044F  2C50               	
  3692                           l560:	
  3693  0450                     	line	28
  3694                           	
  3695                           l2082:	
  3696  0450                     	movlw	01h
  3697  0450  3001               	
  3698                           u1675:
  3699  0451                     	clrc
  3700  0451  1003               	rrf	(___awmod@divisor+1),f
  3701  0452  0CF3               	rrf	(___awmod@divisor),f
  3702  0453  0CF2               	addlw	-1
  3703  0454  3EFF               	skipz
  3704  0455  1D03               	goto	u1675
  3705  0456  2C51               	line	29
  3706                           	
  3707                           l2084:	
  3708  0457                     	movlw	01h
  3709  0457  3001               	subwf	(___awmod@counter),f
  3710  0458  02F7               	btfss	status,2
  3711  0459  1D03               	goto	u1681
  3712  045A  2C5C               	goto	u1680
  3713  045B  2C5D               u1681:
  3714  045C                     	goto	l2078
  3715  045C  2C3F               u1680:
  3716  045D                     	goto	l2086
  3717  045D  2C5F               	
  3718                           l561:	
  3719  045E                     	goto	l2086
  3720  045E  2C5F               	line	30
  3721                           	
  3722                           l555:	
  3723  045F                     	line	31
  3724                           	
  3725                           l2086:	
  3726  045F                     	movf	((___awmod@sign)),w
  3727  045F  0878               	btfsc	status,2
  3728  0460  1903               	goto	u1691
  3729  0461  2C63               	goto	u1690
  3730  0462  2C64               u1691:
  3731  0463                     	goto	l2090
  3732  0463  2C6A               u1690:
  3733  0464                     	line	32
  3734                           	
  3735                           l2088:	
  3736  0464                     	comf	(___awmod@dividend),f
  3737  0464  09F4               	comf	(___awmod@dividend+1),f
  3738  0465  09F5               	incf	(___awmod@dividend),f
  3739  0466  0AF4               	skipnz
  3740  0467  1903               	incf	(___awmod@dividend+1),f
  3741  0468  0AF5               	goto	l2090
  3742  0469  2C6A               	
  3743                           l562:	
  3744  046A                     	line	33
  3745                           	
  3746                           l2090:	
  3747  046A                     	movf	(___awmod@dividend+1),w
  3748  046A  0875               	movwf	(?___awmod+1)
  3749  046B  00F3               	movf	(___awmod@dividend),w
  3750  046C  0874               	movwf	(?___awmod)
  3751  046D  00F2               	goto	l563
  3752  046E  2C6F               	
  3753                           l2092:	
  3754  046F                     	line	34
  3755                           	
  3756                           l563:	
  3757  046F                     	return
  3758  046F  0008               	opt stack 0
  3759                           GLOBAL	__end_of___awmod
  3760                           	__end_of___awmod:
  3761  0470                     	signat	___awmod,8314
  3762                           	global	___awdiv
  3763                           
  3764 ;; *************** function ___awdiv *****************
  3765 ;; Defined at:
  3766 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  divisor         2    2[COMMON] int 
  3769 ;;  dividend        2    4[COMMON] int 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  quotient        2    2[BANK0 ] int 
  3772 ;;  sign            1    1[BANK0 ] unsigned char 
  3773 ;;  counter         1    0[BANK0 ] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  2    2[COMMON] int 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3783 ;;      Params:         4       0       0       0       0
  3784 ;;      Locals:         0       4       0       0       0
  3785 ;;      Temps:          1       0       0       0       0
  3786 ;;      Totals:         5       4       0       0       0
  3787 ;;Total ram usage:        9 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    2
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_lcd_num
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           psect	text8,local,class=CODE,delta=2,merge=1,group=1
  3797                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  3798                           	line	5
  3799                           global __ptext8
  3800                           __ptext8:	;psect for function ___awdiv
  3801  039A                     psect	text8
  3802                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  3803                           	line	5
  3804                           	global	__size_of___awdiv
  3805                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  3806  0073                     	
  3807                           ___awdiv:	
  3808  039A                     ;incstack = 0
  3809                           	opt	stack 4
  3810                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3811                           	line	13
  3812                           	
  3813                           l2012:	
  3814  039A                     	bcf	status, 5	;RP0=0, select bank0
  3815  039A  1283               	bcf	status, 6	;RP1=0, select bank0
  3816  039B  1303               	clrf	(___awdiv@sign)
  3817  039C  01C0               	line	14
  3818                           	
  3819                           l2014:	
  3820  039D                     	btfss	(___awdiv@divisor+1),7
  3821  039D  1FF3               	goto	u1511
  3822  039E  2BA0               	goto	u1510
  3823  039F  2BA1               u1511:
  3824  03A0                     	goto	l2020
  3825  03A0  2BA9               u1510:
  3826  03A1                     	line	15
  3827                           	
  3828                           l2016:	
  3829  03A1                     	comf	(___awdiv@divisor),f
  3830  03A1  09F2               	comf	(___awdiv@divisor+1),f
  3831  03A2  09F3               	incf	(___awdiv@divisor),f
  3832  03A3  0AF2               	skipnz
  3833  03A4  1903               	incf	(___awdiv@divisor+1),f
  3834  03A5  0AF3               	line	16
  3835                           	
  3836                           l2018:	
  3837  03A6                     	clrf	(___awdiv@sign)
  3838  03A6  01C0               	incf	(___awdiv@sign),f
  3839  03A7  0AC0               	goto	l2020
  3840  03A8  2BA9               	line	17
  3841                           	
  3842                           l540:	
  3843  03A9                     	line	18
  3844                           	
  3845                           l2020:	
  3846  03A9                     	btfss	(___awdiv@dividend+1),7
  3847  03A9  1FF5               	goto	u1521
  3848  03AA  2BAC               	goto	u1520
  3849  03AB  2BAD               u1521:
  3850  03AC                     	goto	l2026
  3851  03AC  2BB7               u1520:
  3852  03AD                     	line	19
  3853                           	
  3854                           l2022:	
  3855  03AD                     	comf	(___awdiv@dividend),f
  3856  03AD  09F4               	comf	(___awdiv@dividend+1),f
  3857  03AE  09F5               	incf	(___awdiv@dividend),f
  3858  03AF  0AF4               	skipnz
  3859  03B0  1903               	incf	(___awdiv@dividend+1),f
  3860  03B1  0AF5               	line	20
  3861                           	
  3862                           l2024:	
  3863  03B2                     	movlw	low(01h)
  3864  03B2  3001               	movwf	(??___awdiv+0)+0
  3865  03B3  00F6               	movf	(??___awdiv+0)+0,w
  3866  03B4  0876               	xorwf	(___awdiv@sign),f
  3867  03B5  06C0               	goto	l2026
  3868  03B6  2BB7               	line	21
  3869                           	
  3870                           l541:	
  3871  03B7                     	line	22
  3872                           	
  3873                           l2026:	
  3874  03B7                     	clrf	(___awdiv@quotient)
  3875  03B7  01C1               	clrf	(___awdiv@quotient+1)
  3876  03B8  01C2               	line	23
  3877                           	
  3878                           l2028:	
  3879  03B9                     	movf	((___awdiv@divisor)),w
  3880  03B9  0872               iorwf	((___awdiv@divisor+1)),w
  3881  03BA  0473               	btfsc	status,2
  3882  03BB  1903               	goto	u1531
  3883  03BC  2BBE               	goto	u1530
  3884  03BD  2BBF               u1531:
  3885  03BE                     	goto	l2048
  3886  03BE  2BFC               u1530:
  3887  03BF                     	line	24
  3888                           	
  3889                           l2030:	
  3890  03BF                     	clrf	(___awdiv@counter)
  3891  03BF  01BF               	incf	(___awdiv@counter),f
  3892  03C0  0ABF               	line	25
  3893                           	goto	l2036
  3894  03C1  2BCE               	
  3895                           l544:	
  3896  03C2                     	line	26
  3897                           	
  3898                           l2032:	
  3899  03C2                     	movlw	01h
  3900  03C2  3001               	
  3901                           u1545:
  3902  03C3                     	clrc
  3903  03C3  1003               	rlf	(___awdiv@divisor),f
  3904  03C4  0DF2               	rlf	(___awdiv@divisor+1),f
  3905  03C5  0DF3               	addlw	-1
  3906  03C6  3EFF               	skipz
  3907  03C7  1D03               	goto	u1545
  3908  03C8  2BC3               	line	27
  3909                           	
  3910                           l2034:	
  3911  03C9                     	movlw	low(01h)
  3912  03C9  3001               	movwf	(??___awdiv+0)+0
  3913  03CA  00F6               	movf	(??___awdiv+0)+0,w
  3914  03CB  0876               	addwf	(___awdiv@counter),f
  3915  03CC  07BF               	goto	l2036
  3916  03CD  2BCE               	line	28
  3917                           	
  3918                           l543:	
  3919  03CE                     	line	25
  3920                           	
  3921                           l2036:	
  3922  03CE                     	btfss	(___awdiv@divisor+1),(15)&7
  3923  03CE  1FF3               	goto	u1551
  3924  03CF  2BD1               	goto	u1550
  3925  03D0  2BD2               u1551:
  3926  03D1                     	goto	l2032
  3927  03D1  2BC2               u1550:
  3928  03D2                     	goto	l2038
  3929  03D2  2BD4               	
  3930                           l545:	
  3931  03D3                     	goto	l2038
  3932  03D3  2BD4               	line	29
  3933                           	
  3934                           l546:	
  3935  03D4                     	line	30
  3936                           	
  3937                           l2038:	
  3938  03D4                     	movlw	01h
  3939  03D4  3001               	
  3940                           u1565:
  3941  03D5                     	clrc
  3942  03D5  1003               	rlf	(___awdiv@quotient),f
  3943  03D6  0DC1               	rlf	(___awdiv@quotient+1),f
  3944  03D7  0DC2               	addlw	-1
  3945  03D8  3EFF               	skipz
  3946  03D9  1D03               	goto	u1565
  3947  03DA  2BD5               	line	31
  3948                           	movf	(___awdiv@divisor+1),w
  3949  03DB  0873               	subwf	(___awdiv@dividend+1),w
  3950  03DC  0275               	skipz
  3951  03DD  1D03               	goto	u1575
  3952  03DE  2BE1               	movf	(___awdiv@divisor),w
  3953  03DF  0872               	subwf	(___awdiv@dividend),w
  3954  03E0  0274               u1575:
  3955  03E1                     	skipc
  3956  03E1  1C03               	goto	u1571
  3957  03E2  2BE4               	goto	u1570
  3958  03E3  2BE5               u1571:
  3959  03E4                     	goto	l2044
  3960  03E4  2BED               u1570:
  3961  03E5                     	line	32
  3962                           	
  3963                           l2040:	
  3964  03E5                     	movf	(___awdiv@divisor),w
  3965  03E5  0872               	subwf	(___awdiv@dividend),f
  3966  03E6  02F4               	movf	(___awdiv@divisor+1),w
  3967  03E7  0873               	skipc
  3968  03E8  1C03               	decf	(___awdiv@dividend+1),f
  3969  03E9  03F5               	subwf	(___awdiv@dividend+1),f
  3970  03EA  02F5               	line	33
  3971                           	
  3972                           l2042:	
  3973  03EB                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  3974  03EB  1441               	goto	l2044
  3975  03EC  2BED               	line	34
  3976                           	
  3977                           l547:	
  3978  03ED                     	line	35
  3979                           	
  3980                           l2044:	
  3981  03ED                     	movlw	01h
  3982  03ED  3001               	
  3983                           u1585:
  3984  03EE                     	clrc
  3985  03EE  1003               	rrf	(___awdiv@divisor+1),f
  3986  03EF  0CF3               	rrf	(___awdiv@divisor),f
  3987  03F0  0CF2               	addlw	-1
  3988  03F1  3EFF               	skipz
  3989  03F2  1D03               	goto	u1585
  3990  03F3  2BEE               	line	36
  3991                           	
  3992                           l2046:	
  3993  03F4                     	movlw	01h
  3994  03F4  3001               	subwf	(___awdiv@counter),f
  3995  03F5  02BF               	btfss	status,2
  3996  03F6  1D03               	goto	u1591
  3997  03F7  2BF9               	goto	u1590
  3998  03F8  2BFA               u1591:
  3999  03F9                     	goto	l2038
  4000  03F9  2BD4               u1590:
  4001  03FA                     	goto	l2048
  4002  03FA  2BFC               	
  4003                           l548:	
  4004  03FB                     	goto	l2048
  4005  03FB  2BFC               	line	37
  4006                           	
  4007                           l542:	
  4008  03FC                     	line	38
  4009                           	
  4010                           l2048:	
  4011  03FC                     	movf	((___awdiv@sign)),w
  4012  03FC  0840               	btfsc	status,2
  4013  03FD  1903               	goto	u1601
  4014  03FE  2C00               	goto	u1600
  4015  03FF  2C01               u1601:
  4016  0400                     	goto	l2052
  4017  0400  2C07               u1600:
  4018  0401                     	line	39
  4019                           	
  4020                           l2050:	
  4021  0401                     	comf	(___awdiv@quotient),f
  4022  0401  09C1               	comf	(___awdiv@quotient+1),f
  4023  0402  09C2               	incf	(___awdiv@quotient),f
  4024  0403  0AC1               	skipnz
  4025  0404  1903               	incf	(___awdiv@quotient+1),f
  4026  0405  0AC2               	goto	l2052
  4027  0406  2C07               	
  4028                           l549:	
  4029  0407                     	line	40
  4030                           	
  4031                           l2052:	
  4032  0407                     	movf	(___awdiv@quotient+1),w
  4033  0407  0842               	movwf	(?___awdiv+1)
  4034  0408  00F3               	movf	(___awdiv@quotient),w
  4035  0409  0841               	movwf	(?___awdiv)
  4036  040A  00F2               	goto	l550
  4037  040B  2C0C               	
  4038                           l2054:	
  4039  040C                     	line	41
  4040                           	
  4041                           l550:	
  4042  040C                     	return
  4043  040C  0008               	opt stack 0
  4044                           GLOBAL	__end_of___awdiv
  4045                           	__end_of___awdiv:
  4046  040D                     	signat	___awdiv,8314
  4047                           	global	_lcd_init
  4048                           
  4049 ;; *************** function _lcd_init *****************
  4050 ;; Defined at:
  4051 ;;		line 121 in file "lcd.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg, status,2, status,0, pclath, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4065 ;;      Params:         0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0
  4068 ;;      Totals:         0       0       0       0       0
  4069 ;;Total ram usage:        0 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    3
  4072 ;; This function calls:
  4073 ;;		_delay
  4074 ;;		_lcd_instReg
  4075 ;; This function is called by:
  4076 ;;		_main
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4080                           	file	"lcd.c"
  4081                           	line	121
  4082                           global __ptext9
  4083                           __ptext9:	;psect for function _lcd_init
  4084  0470                     psect	text9
  4085                           	file	"lcd.c"
  4086                           	line	121
  4087                           	global	__size_of_lcd_init
  4088                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  4089  003F                     	
  4090                           _lcd_init:	
  4091  0470                     ;incstack = 0
  4092                           	opt	stack 4
  4093                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4094                           	line	123
  4095                           	
  4096                           l1780:	
  4097  0470                     ;lcd.c: 123:     delay(100);
  4098                           	movlw	064h
  4099  0470  3064               	movwf	(delay@t)
  4100  0471  00F2               	movlw	0
  4101  0472  3000               	movwf	((delay@t))+1
  4102  0473  00F3               	fcall	_delay
  4103  0474  120A  118A  257A  120A  118A  	line	124
  4104                           	
  4105                           l1782:	
  4106  0479                     ;lcd.c: 124:     TRISDbits.TRISD2 = 0;
  4107                           	bsf	status, 5	;RP0=1, select bank1
  4108  0479  1683               	bcf	status, 6	;RP1=0, select bank1
  4109  047A  1303               	bcf	(136)^080h,2	;volatile
  4110  047B  1108               	line	125
  4111                           	
  4112                           l1784:	
  4113  047C                     ;lcd.c: 125:     TRISDbits.TRISD3 = 0;
  4114                           	bcf	(136)^080h,3	;volatile
  4115  047C  1188               	line	126
  4116                           	
  4117                           l1786:	
  4118  047D                     ;lcd.c: 126:     TRISDbits.TRISD4 = 0;
  4119                           	bcf	(136)^080h,4	;volatile
  4120  047D  1208               	line	127
  4121                           	
  4122                           l1788:	
  4123  047E                     ;lcd.c: 127:     TRISDbits.TRISD5 = 0;
  4124                           	bcf	(136)^080h,5	;volatile
  4125  047E  1288               	line	128
  4126                           	
  4127                           l1790:	
  4128  047F                     ;lcd.c: 128:     TRISDbits.TRISD6 = 0;
  4129                           	bcf	(136)^080h,6	;volatile
  4130  047F  1308               	line	129
  4131                           	
  4132                           l1792:	
  4133  0480                     ;lcd.c: 129:     TRISDbits.TRISD7 = 0;
  4134                           	bcf	(136)^080h,7	;volatile
  4135  0480  1388               	line	131
  4136                           ;lcd.c: 131:     delay(100);
  4137                           	movlw	064h
  4138  0481  3064               	movwf	(delay@t)
  4139  0482  00F2               	movlw	0
  4140  0483  3000               	movwf	((delay@t))+1
  4141  0484  00F3               	fcall	_delay
  4142  0485  120A  118A  257A  120A  118A  	line	132
  4143                           	
  4144                           l1794:	
  4145  048A                     ;lcd.c: 132:     PORTDbits.RD3 = 1;
  4146                           	bcf	status, 5	;RP0=0, select bank0
  4147  048A  1283               	bcf	status, 6	;RP1=0, select bank0
  4148  048B  1303               	bsf	(8),3	;volatile
  4149  048C  1588               	line	133
  4150                           ;lcd.c: 133:     lcd_instReg( 0x20|0x00|0x08 );
  4151                           	movlw	low(028h)
  4152  048D  3028               	fcall	_lcd_instReg
  4153  048E  120A  118A  230F  120A  118A  	line	134
  4154                           ;lcd.c: 134:     lcd_instReg( 0x08|0x04|0x00|0x00 );
  4155                           	movlw	low(0Ch)
  4156  0493  300C               	fcall	_lcd_instReg
  4157  0494  120A  118A  230F  120A  118A  	line	135
  4158                           ;lcd.c: 135:     lcd_instReg( 0x01 );
  4159                           	movlw	low(01h)
  4160  0499  3001               	fcall	_lcd_instReg
  4161  049A  120A  118A  230F  120A  118A  	line	136
  4162                           ;lcd.c: 136:     lcd_instReg( 0x02 );
  4163                           	movlw	low(02h)
  4164  049F  3002               	fcall	_lcd_instReg
  4165  04A0  120A  118A  230F  120A  118A  	line	137
  4166                           ;lcd.c: 137:     delay(100);
  4167                           	movlw	064h
  4168  04A5  3064               	movwf	(delay@t)
  4169  04A6  00F2               	movlw	0
  4170  04A7  3000               	movwf	((delay@t))+1
  4171  04A8  00F3               	fcall	_delay
  4172  04A9  120A  118A  257A  120A  118A  	line	138
  4173                           	
  4174                           l181:	
  4175  04AE                     	return
  4176  04AE  0008               	opt stack 0
  4177                           GLOBAL	__end_of_lcd_init
  4178                           	__end_of_lcd_init:
  4179  04AF                     	signat	_lcd_init,89
  4180                           	global	_lcd_instReg
  4181                           
  4182 ;; *************** function _lcd_instReg *****************
  4183 ;; Defined at:
  4184 ;;		line 58 in file "lcd.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  i               1    wreg     unsigned char 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  i               1    4[COMMON] unsigned char 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		wreg, status,2, status,0
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4198 ;;      Params:         0       0       0       0       0
  4199 ;;      Locals:         1       0       0       0       0
  4200 ;;      Temps:          2       0       0       0       0
  4201 ;;      Totals:         3       0       0       0       0
  4202 ;;Total ram usage:        3 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; Hardware stack levels required when called:    2
  4205 ;; This function calls:
  4206 ;;		Nothing
  4207 ;; This function is called by:
  4208 ;;		_lcd_lincol
  4209 ;;		_lcd_init
  4210 ;;		_lcd_clr
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  4214                           	line	58
  4215                           global __ptext10
  4216                           __ptext10:	;psect for function _lcd_instReg
  4217  030F                     psect	text10
  4218                           	file	"lcd.c"
  4219                           	line	58
  4220                           	global	__size_of_lcd_instReg
  4221                           	__size_of_lcd_instReg	equ	__end_of_lcd_instReg-_lcd_instReg
  4222  008B                     	
  4223                           _lcd_instReg:	
  4224  030F                     ;incstack = 0
  4225                           	opt	stack 3
  4226                           ; Regs used in _lcd_instReg: [wreg+status,2+status,0]
  4227                           ;lcd_instReg@i stored from wreg
  4228                           	movwf	(lcd_instReg@i)
  4229  030F  00F4               	line	60
  4230                           	
  4231                           l1630:	
  4232  0310                     ;lcd.c: 58: void lcd_instReg( unsigned char i );lcd.c: 59: {;lcd.c: 60:     PORTDbits.RD
                                 2 = 0;
  4233                           	bcf	status, 5	;RP0=0, select bank0
  4234  0310  1283               	bcf	status, 6	;RP1=0, select bank0
  4235  0311  1303               	bcf	(8),2	;volatile
  4236  0312  1108               	line	61
  4237                           	
  4238                           l1632:	
  4239  0313                     ;lcd.c: 61:     PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  4240                           	movf	(lcd_instReg@i),w
  4241  0313  0874               	movwf	(??_lcd_instReg+0)+0
  4242  0314  00F2               	movlw	04h
  4243  0315  3004               u885:
  4244  0316                     	clrc
  4245  0316  1003               	rrf	(??_lcd_instReg+0)+0,f
  4246  0317  0CF2               	addlw	-1
  4247  0318  3EFF               	skipz
  4248  0319  1D03               	goto	u885
  4249  031A  2B16               	movf	0+(??_lcd_instReg+0)+0,w
  4250  031B  0872               	movwf	(??_lcd_instReg+1)+0
  4251  031C  00F3               	movlw	04h
  4252  031D  3004               u895:
  4253  031E                     	clrc
  4254  031E  1003               	rlf	(??_lcd_instReg+1)+0,f
  4255  031F  0DF3               	addlw	-1
  4256  0320  3EFF               	skipz
  4257  0321  1D03               	goto	u895
  4258  0322  2B1E               	movf	(8),w	;volatile
  4259  0323  0808               	andlw	0Fh
  4260  0324  390F               	iorwf	0+(??_lcd_instReg+1)+0,w
  4261  0325  0473               	movwf	(8)	;volatile
  4262  0326  0088               	line	63
  4263                           	
  4264                           l1634:	
  4265  0327                     ;lcd.c: 63:     PORTDbits.RD3 = 0;
  4266                           	bcf	(8),3	;volatile
  4267  0327  1188               	line	64
  4268                           ;lcd.c: 64:     if( i == 0x01 || i == 0x02 )
  4269                           		decf	((lcd_instReg@i)),w
  4270  0328  0374               	btfsc	status,2
  4271  0329  1903               	goto	u901
  4272  032A  2B2C               	goto	u900
  4273  032B  2B2D               u901:
  4274  032C                     	goto	l1638
  4275  032C  2B34               u900:
  4276  032D                     	
  4277                           l1636:	
  4278  032D                     		movlw	2
  4279  032D  3002               	xorwf	((lcd_instReg@i)),w
  4280  032E  0674               	btfss	status,2
  4281  032F  1D03               	goto	u911
  4282  0330  2B32               	goto	u910
  4283  0331  2B33               u911:
  4284  0332                     	goto	l1640
  4285  0332  2B3E               u910:
  4286  0333                     	goto	l1638
  4287  0333  2B34               	
  4288                           l165:	
  4289  0334                     	line	65
  4290                           	
  4291                           l1638:	
  4292  0334                     ;lcd.c: 65:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4293                           	opt asmopt_push
  4294                           opt asmopt_off
  4295                           movlw	3
  4296  0334  3003               movwf	((??_lcd_instReg+0)+0+1),f
  4297  0335  00F3               	movlw	151
  4298  0336  3097               movwf	((??_lcd_instReg+0)+0),f
  4299  0337  00F2               	u1877:
  4300  0338                     decfsz	((??_lcd_instReg+0)+0),f
  4301  0338  0BF2               	goto	u1877
  4302  0339  2B38               	decfsz	((??_lcd_instReg+0)+0+1),f
  4303  033A  0BF3               	goto	u1877
  4304  033B  2B38               	nop2
  4305  033C  2B3D               opt asmopt_pop
  4306                           
  4307                           	goto	l1642
  4308  033D  2B43               	line	66
  4309                           ;lcd.c: 66:     else
  4310                           	
  4311                           l163:	
  4312  033E                     	line	67
  4313                           	
  4314                           l1640:	
  4315  033E                     ;lcd.c: 67:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  4316                           	opt asmopt_push
  4317                           opt asmopt_off
  4318                           	movlw	13
  4319  033E  300D               movwf	((??_lcd_instReg+0)+0),f
  4320  033F  00F2               	u1887:
  4321  0340                     decfsz	(??_lcd_instReg+0)+0,f
  4322  0340  0BF2               	goto	u1887
  4323  0341  2B40               opt asmopt_pop
  4324                           
  4325                           	goto	l1642
  4326  0342  2B43               	
  4327                           l166:	
  4328  0343                     	line	68
  4329                           	
  4330                           l1642:	
  4331  0343                     ;lcd.c: 68:     PORTDbits.RD3 = 1;
  4332                           	bcf	status, 5	;RP0=0, select bank0
  4333  0343  1283               	bcf	status, 6	;RP1=0, select bank0
  4334  0344  1303               	bsf	(8),3	;volatile
  4335  0345  1588               	line	71
  4336                           	
  4337                           l1644:	
  4338  0346                     ;lcd.c: 71:     if( (i & 0xF0) == (0x20 | 0x00) )
  4339                           	movlw	low(0F0h)
  4340  0346  30F0               	andwf	(lcd_instReg@i),w
  4341  0347  0574               	movwf	(??_lcd_instReg+0)+0
  4342  0348  00F2               		movlw	32
  4343  0349  3020               	xorwf	((??_lcd_instReg+0)+0),w
  4344  034A  0672               	btfss	status,2
  4345  034B  1D03               	goto	u921
  4346  034C  2B4E               	goto	u920
  4347  034D  2B4F               u921:
  4348  034E                     	goto	l1656
  4349  034E  2B6D               u920:
  4350  034F                     	line	73
  4351                           	
  4352                           l1646:	
  4353  034F                     ;lcd.c: 72:     {;lcd.c: 73:         PORTDbits.RD2 = 0;
  4354                           	bcf	(8),2	;volatile
  4355  034F  1108               	line	74
  4356                           	
  4357                           l1648:	
  4358  0350                     ;lcd.c: 74:         PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  4359                           	movf	(lcd_instReg@i),w
  4360  0350  0874               	movwf	(??_lcd_instReg+0)+0
  4361  0351  00F2               	movlw	04h
  4362  0352  3004               u935:
  4363  0353                     	clrc
  4364  0353  1003               	rrf	(??_lcd_instReg+0)+0,f
  4365  0354  0CF2               	addlw	-1
  4366  0355  3EFF               	skipz
  4367  0356  1D03               	goto	u935
  4368  0357  2B53               	movf	0+(??_lcd_instReg+0)+0,w
  4369  0358  0872               	movwf	(??_lcd_instReg+1)+0
  4370  0359  00F3               	movlw	04h
  4371  035A  3004               u945:
  4372  035B                     	clrc
  4373  035B  1003               	rlf	(??_lcd_instReg+1)+0,f
  4374  035C  0DF3               	addlw	-1
  4375  035D  3EFF               	skipz
  4376  035E  1D03               	goto	u945
  4377  035F  2B5B               	movf	(8),w	;volatile
  4378  0360  0808               	andlw	0Fh
  4379  0361  390F               	iorwf	0+(??_lcd_instReg+1)+0,w
  4380  0362  0473               	movwf	(8)	;volatile
  4381  0363  0088               	line	75
  4382                           	
  4383                           l1650:	
  4384  0364                     ;lcd.c: 75:         PORTDbits.RD3 = 0;
  4385                           	bcf	(8),3	;volatile
  4386  0364  1188               	line	76
  4387                           	
  4388                           l1652:	
  4389  0365                     ;lcd.c: 76:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  4390                           	opt asmopt_push
  4391                           opt asmopt_off
  4392                           	movlw	13
  4393  0365  300D               movwf	((??_lcd_instReg+0)+0),f
  4394  0366  00F2               	u1897:
  4395  0367                     decfsz	(??_lcd_instReg+0)+0,f
  4396  0367  0BF2               	goto	u1897
  4397  0368  2B67               opt asmopt_pop
  4398                           
  4399                           	line	77
  4400                           	
  4401                           l1654:	
  4402  0369                     ;lcd.c: 77:         PORTDbits.RD3 = 1;
  4403                           	bcf	status, 5	;RP0=0, select bank0
  4404  0369  1283               	bcf	status, 6	;RP1=0, select bank0
  4405  036A  1303               	bsf	(8),3	;volatile
  4406  036B  1588               	goto	l1656
  4407  036C  2B6D               	line	78
  4408                           ;lcd.c: 78:     }
  4409                           	
  4410                           l167:	
  4411  036D                     	line	80
  4412                           	
  4413                           l1656:	
  4414  036D                     ;lcd.c: 80:     PORTDbits.RD2 = 0;
  4415                           	bcf	(8),2	;volatile
  4416  036D  1108               	line	81
  4417                           	
  4418                           l1658:	
  4419  036E                     ;lcd.c: 81:     PORTD = ((PORTD & 0x0F)|(i<<4));
  4420                           	movf	(lcd_instReg@i),w
  4421  036E  0874               	movwf	(??_lcd_instReg+0)+0
  4422  036F  00F2               	movlw	04h
  4423  0370  3004               u955:
  4424  0371                     	clrc
  4425  0371  1003               	rlf	(??_lcd_instReg+0)+0,f
  4426  0372  0DF2               	addlw	-1
  4427  0373  3EFF               	skipz
  4428  0374  1D03               	goto	u955
  4429  0375  2B71               	movf	(8),w	;volatile
  4430  0376  0808               	andlw	0Fh
  4431  0377  390F               	iorwf	0+(??_lcd_instReg+0)+0,w
  4432  0378  0472               	movwf	(8)	;volatile
  4433  0379  0088               	line	82
  4434                           	
  4435                           l1660:	
  4436  037A                     ;lcd.c: 82:     PORTDbits.RD3 = 0;
  4437                           	bcf	(8),3	;volatile
  4438  037A  1188               	line	83
  4439                           	
  4440                           l1662:	
  4441  037B                     ;lcd.c: 83:     if( i == 0x01 || i == 0x02 )
  4442                           		decf	((lcd_instReg@i)),w
  4443  037B  0374               	btfsc	status,2
  4444  037C  1903               	goto	u961
  4445  037D  2B7F               	goto	u960
  4446  037E  2B80               u961:
  4447  037F                     	goto	l1666
  4448  037F  2B87               u960:
  4449  0380                     	
  4450                           l1664:	
  4451  0380                     		movlw	2
  4452  0380  3002               	xorwf	((lcd_instReg@i)),w
  4453  0381  0674               	btfss	status,2
  4454  0382  1D03               	goto	u971
  4455  0383  2B85               	goto	u970
  4456  0384  2B86               u971:
  4457  0385                     	goto	l1668
  4458  0385  2B91               u970:
  4459  0386                     	goto	l1666
  4460  0386  2B87               	
  4461                           l170:	
  4462  0387                     	line	84
  4463                           	
  4464                           l1666:	
  4465  0387                     ;lcd.c: 84:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4466                           	opt asmopt_push
  4467                           opt asmopt_off
  4468                           movlw	3
  4469  0387  3003               movwf	((??_lcd_instReg+0)+0+1),f
  4470  0388  00F3               	movlw	151
  4471  0389  3097               movwf	((??_lcd_instReg+0)+0),f
  4472  038A  00F2               	u1907:
  4473  038B                     decfsz	((??_lcd_instReg+0)+0),f
  4474  038B  0BF2               	goto	u1907
  4475  038C  2B8B               	decfsz	((??_lcd_instReg+0)+0+1),f
  4476  038D  0BF3               	goto	u1907
  4477  038E  2B8B               	nop2
  4478  038F  2B90               opt asmopt_pop
  4479                           
  4480                           	goto	l1670
  4481  0390  2B96               	line	85
  4482                           ;lcd.c: 85:     else
  4483                           	
  4484                           l168:	
  4485  0391                     	line	86
  4486                           	
  4487                           l1668:	
  4488  0391                     ;lcd.c: 86:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  4489                           	opt asmopt_push
  4490                           opt asmopt_off
  4491                           	movlw	13
  4492  0391  300D               movwf	((??_lcd_instReg+0)+0),f
  4493  0392  00F2               	u1917:
  4494  0393                     decfsz	(??_lcd_instReg+0)+0,f
  4495  0393  0BF2               	goto	u1917
  4496  0394  2B93               opt asmopt_pop
  4497                           
  4498                           	goto	l1670
  4499  0395  2B96               	
  4500                           l171:	
  4501  0396                     	line	87
  4502                           	
  4503                           l1670:	
  4504  0396                     ;lcd.c: 87:     PORTDbits.RD3 = 1;
  4505                           	bcf	status, 5	;RP0=0, select bank0
  4506  0396  1283               	bcf	status, 6	;RP1=0, select bank0
  4507  0397  1303               	bsf	(8),3	;volatile
  4508  0398  1588               	line	88
  4509                           	
  4510                           l172:	
  4511  0399                     	return
  4512  0399  0008               	opt stack 0
  4513                           GLOBAL	__end_of_lcd_instReg
  4514                           	__end_of_lcd_instReg:
  4515  039A                     	signat	_lcd_instReg,4217
  4516                           	global	_delay
  4517                           
  4518 ;; *************** function _delay *****************
  4519 ;; Defined at:
  4520 ;;		line 7 in file "delay.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  t               2    2[COMMON] unsigned int 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;		None
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      void 
  4527 ;; Registers used:
  4528 ;;		wreg, status,2, status,0
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4534 ;;      Params:         2       0       0       0       0
  4535 ;;      Locals:         0       0       0       0       0
  4536 ;;      Temps:          1       0       0       0       0
  4537 ;;      Totals:         3       0       0       0       0
  4538 ;;Total ram usage:        3 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    2
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_lcd_init
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4548                           	file	"delay.c"
  4549                           	line	7
  4550                           global __ptext11
  4551                           __ptext11:	;psect for function _delay
  4552  057A                     psect	text11
  4553                           	file	"delay.c"
  4554                           	line	7
  4555                           	global	__size_of_delay
  4556                           	__size_of_delay	equ	__end_of_delay-_delay
  4557  0017                     	
  4558                           _delay:	
  4559  057A                     ;incstack = 0
  4560                           	opt	stack 4
  4561                           ; Regs used in _delay: [wreg+status,2+status,0]
  4562                           	line	9
  4563                           	
  4564                           l1672:	
  4565  057A                     ;delay.c: 7: void delay( unsigned int t );delay.c: 8: {;delay.c: 9:     while( t )
  4566                           	goto	l1676
  4567  057A  2D89               	
  4568                           l148:	
  4569  057B                     	line	11
  4570                           	
  4571                           l1674:	
  4572  057B                     ;delay.c: 10:     {;delay.c: 11:         _delay((unsigned long)((1)*(4000000/4000.0)));

  4573                           	opt asmopt_push
  4574                           opt asmopt_off
  4575                           	movlw	199
  4576  057B  30C7               movwf	((??_delay+0)+0),f
  4577  057C  00F4               	u1927:
  4578  057D                     	nop2
  4579  057D  2D7E               decfsz	(??_delay+0)+0,f
  4580  057E  0BF4               	goto	u1927
  4581  057F  2D7D               	nop2
  4582  0580  2D81               	nop2
  4583  0581  2D82               opt asmopt_pop
  4584                           
  4585                           	line	12
  4586                           ;delay.c: 12:         --t;
  4587                           	movlw	01h
  4588  0582  3001               	subwf	(delay@t),f
  4589  0583  02F2               	movlw	0
  4590  0584  3000               	skipc
  4591  0585  1C03               	decf	(delay@t+1),f
  4592  0586  03F3               	subwf	(delay@t+1),f
  4593  0587  02F3               	goto	l1676
  4594  0588  2D89               	line	13
  4595                           ;delay.c: 13:     }
  4596                           	
  4597                           l147:	
  4598  0589                     	line	9
  4599                           	
  4600                           l1676:	
  4601  0589                     ;delay.c: 9:     while( t )
  4602                           	movf	((delay@t)),w
  4603  0589  0872               iorwf	((delay@t+1)),w
  4604  058A  0473               	btfss	status,2
  4605  058B  1D03               	goto	u981
  4606  058C  2D8E               	goto	u980
  4607  058D  2D8F               u981:
  4608  058E                     	goto	l1674
  4609  058E  2D7B               u980:
  4610  058F                     	goto	l150
  4611  058F  2D90               	
  4612                           l149:	
  4613  0590                     	line	14
  4614                           	
  4615                           l150:	
  4616  0590                     	return
  4617  0590  0008               	opt stack 0
  4618                           GLOBAL	__end_of_delay
  4619                           	__end_of_delay:
  4620  0591                     	signat	_delay,4217
  4621                           	global	_habTemporizador
  4622                           
  4623 ;; *************** function _habTemporizador *****************
  4624 ;; Defined at:
  4625 ;;		line 34 in file "tempo.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  t               1    wreg     PTR struct temporizadorT
  4628 ;;		 -> tempo(24), 
  4629 ;;  h               1    3[COMMON] unsigned char 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  t               1    5[COMMON] PTR struct temporizadorT
  4632 ;;		 -> tempo(24), 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg, fsr0l, fsr0h
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4642 ;;      Params:         1       0       0       0       0
  4643 ;;      Locals:         1       0       0       0       0
  4644 ;;      Temps:          1       0       0       0       0
  4645 ;;      Totals:         3       0       0       0       0
  4646 ;;Total ram usage:        3 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:    2
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_main
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  4656                           	file	"tempo.c"
  4657                           	line	34
  4658                           global __ptext12
  4659                           __ptext12:	;psect for function _habTemporizador
  4660  05F4                     psect	text12
  4661                           	file	"tempo.c"
  4662                           	line	34
  4663                           	global	__size_of_habTemporizador
  4664                           	__size_of_habTemporizador	equ	__end_of_habTemporizador-_habTemporizador
  4665  0009                     	
  4666                           _habTemporizador:	
  4667  05F4                     ;incstack = 0
  4668                           	opt	stack 5
  4669                           ; Regs used in _habTemporizador: [wregfsr0]
  4670                           ;habTemporizador@t stored from wreg
  4671                           	movwf	(habTemporizador@t)
  4672  05F4  00F5               	line	36
  4673                           	
  4674                           l1812:	
  4675  05F5                     ;tempo.c: 34: void habTemporizador( struct temporizadorT * t, unsigned char h );tempo.c:
                                  35: {;tempo.c: 36:     t->hab = h;
  4676                           	movf	(habTemporizador@h),w
  4677  05F5  0873               	movwf	(??_habTemporizador+0)+0
  4678  05F6  00F4               	movf	(habTemporizador@t),w
  4679  05F7  0875               	movwf	fsr0
  4680  05F8  0084               	movf	(??_habTemporizador+0)+0,w
  4681  05F9  0874               	bcf	status, 7	;select IRP bank0
  4682  05FA  1383               	movwf	indf
  4683  05FB  0080               	line	37
  4684                           	
  4685                           l217:	
  4686  05FC                     	return
  4687  05FC  0008               	opt stack 0
  4688                           GLOBAL	__end_of_habTemporizador
  4689                           	__end_of_habTemporizador:
  4690  05FD                     	signat	_habTemporizador,8313
  4691                           	global	_botao_init
  4692                           
  4693 ;; *************** function _botao_init *****************
  4694 ;; Defined at:
  4695 ;;		line 9 in file "botao.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;		None
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;		None
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		None
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4709 ;;      Params:         0       0       0       0       0
  4710 ;;      Locals:         0       0       0       0       0
  4711 ;;      Temps:          0       0       0       0       0
  4712 ;;      Totals:         0       0       0       0       0
  4713 ;;Total ram usage:        0 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:    2
  4716 ;; This function calls:
  4717 ;;		Nothing
  4718 ;; This function is called by:
  4719 ;;		_main
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4723                           	file	"botao.c"
  4724                           	line	9
  4725                           global __ptext13
  4726                           __ptext13:	;psect for function _botao_init
  4727  061E                     psect	text13
  4728                           	file	"botao.c"
  4729                           	line	9
  4730                           	global	__size_of_botao_init
  4731                           	__size_of_botao_init	equ	__end_of_botao_init-_botao_init
  4732  0007                     	
  4733                           _botao_init:	
  4734  061E                     ;incstack = 0
  4735                           	opt	stack 5
  4736                           ; Regs used in _botao_init: []
  4737                           	line	11
  4738                           	
  4739                           l1222:	
  4740  061E                     ;botao.c: 11:     TRISDbits.TRISD0 = 1;
  4741                           	bsf	status, 5	;RP0=1, select bank1
  4742  061E  1683               	bcf	status, 6	;RP1=0, select bank1
  4743  061F  1303               	bsf	(136)^080h,0	;volatile
  4744  0620  1408               	line	12
  4745                           ;botao.c: 12:     TRISDbits.TRISD1 = 1;
  4746                           	bsf	(136)^080h,1	;volatile
  4747  0621  1488               	line	13
  4748                           ;botao.c: 13:     TRISAbits.TRISA2 = 1;
  4749                           	bsf	(133)^080h,2	;volatile
  4750  0622  1505               	line	14
  4751                           ;botao.c: 14:     TRISAbits.TRISA3 = 1;
  4752                           	bsf	(133)^080h,3	;volatile
  4753  0623  1585               	line	15
  4754                           	
  4755                           l231:	
  4756  0624                     	return
  4757  0624  0008               	opt stack 0
  4758                           GLOBAL	__end_of_botao_init
  4759                           	__end_of_botao_init:
  4760  0625                     	signat	_botao_init,89
  4761                           	global	_b3
  4762                           
  4763 ;; *************** function _b3 *****************
  4764 ;; Defined at:
  4765 ;;		line 126 in file "botao.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;		None
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;		None
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      unsigned char 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4779 ;;      Params:         0       0       0       0       0
  4780 ;;      Locals:         0       0       0       0       0
  4781 ;;      Temps:          1       0       0       0       0
  4782 ;;      Totals:         1       0       0       0       0
  4783 ;;Total ram usage:        1 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:    2
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_main
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4793                           	line	126
  4794                           global __ptext14
  4795                           __ptext14:	;psect for function _b3
  4796  05FD                     psect	text14
  4797                           	file	"botao.c"
  4798                           	line	126
  4799                           	global	__size_of_b3
  4800                           	__size_of_b3	equ	__end_of_b3-_b3
  4801  0009                     	
  4802                           _b3:	
  4803  05FD                     ;incstack = 0
  4804                           	opt	stack 5
  4805                           ; Regs used in _b3: [wreg+status,2+status,0]
  4806                           	line	128
  4807                           	
  4808                           l1262:	
  4809  05FD                     ;botao.c: 128:     return( PORTAbits.RA3 );
  4810                           	bcf	status, 5	;RP0=0, select bank0
  4811  05FD  1283               	bcf	status, 6	;RP1=0, select bank0
  4812  05FE  1303               	rrf	(5),w	;volatile
  4813  05FF  0C05               	movwf	(??_b3+0)+0
  4814  0600  00F2               	rrf	(??_b3+0)+0,f
  4815  0601  0CF2               	rrf	(??_b3+0)+0,w
  4816  0602  0C72               	andlw	(1<<1)-1
  4817  0603  3901               	goto	l294
  4818  0604  2E05               	
  4819                           l1264:	
  4820  0605                     	line	129
  4821                           	
  4822                           l294:	
  4823  0605                     	return
  4824  0605  0008               	opt stack 0
  4825                           GLOBAL	__end_of_b3
  4826                           	__end_of_b3:
  4827  0606                     	signat	_b3,89
  4828                           	global	_b2
  4829                           
  4830 ;; *************** function _b2 *****************
  4831 ;; Defined at:
  4832 ;;		line 92 in file "botao.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      unsigned char 
  4839 ;; Registers used:
  4840 ;;		wreg, status,2, status,0
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4846 ;;      Params:         0       0       0       0       0
  4847 ;;      Locals:         0       0       0       0       0
  4848 ;;      Temps:          1       0       0       0       0
  4849 ;;      Totals:         1       0       0       0       0
  4850 ;;Total ram usage:        1 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:    2
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_main
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  4860                           	line	92
  4861                           global __ptext15
  4862                           __ptext15:	;psect for function _b2
  4863  060E                     psect	text15
  4864                           	file	"botao.c"
  4865                           	line	92
  4866                           	global	__size_of_b2
  4867                           	__size_of_b2	equ	__end_of_b2-_b2
  4868  0008                     	
  4869                           _b2:	
  4870  060E                     ;incstack = 0
  4871                           	opt	stack 5
  4872                           ; Regs used in _b2: [wreg+status,2+status,0]
  4873                           	line	94
  4874                           	
  4875                           l1258:	
  4876  060E                     ;botao.c: 94:     return( PORTAbits.RA2 );
  4877                           	bcf	status, 5	;RP0=0, select bank0
  4878  060E  1283               	bcf	status, 6	;RP1=0, select bank0
  4879  060F  1303               	rrf	(5),w	;volatile
  4880  0610  0C05               	movwf	(??_b2+0)+0
  4881  0611  00F2               	rrf	(??_b2+0)+0,w
  4882  0612  0C72               	andlw	(1<<1)-1
  4883  0613  3901               	goto	l274
  4884  0614  2E15               	
  4885                           l1260:	
  4886  0615                     	line	95
  4887                           	
  4888                           l274:	
  4889  0615                     	return
  4890  0615  0008               	opt stack 0
  4891                           GLOBAL	__end_of_b2
  4892                           	__end_of_b2:
  4893  0616                     	signat	_b2,89
  4894                           	global	_b1
  4895                           
  4896 ;; *************** function _b1 *****************
  4897 ;; Defined at:
  4898 ;;		line 58 in file "botao.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;		None
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;		None
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      unsigned char 
  4905 ;; Registers used:
  4906 ;;		wreg, status,2, status,0
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4912 ;;      Params:         0       0       0       0       0
  4913 ;;      Locals:         0       0       0       0       0
  4914 ;;      Temps:          0       0       0       0       0
  4915 ;;      Totals:         0       0       0       0       0
  4916 ;;Total ram usage:        0 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    2
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_main
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4926                           	line	58
  4927                           global __ptext16
  4928                           __ptext16:	;psect for function _b1
  4929  0625                     psect	text16
  4930                           	file	"botao.c"
  4931                           	line	58
  4932                           	global	__size_of_b1
  4933                           	__size_of_b1	equ	__end_of_b1-_b1
  4934  0006                     	
  4935                           _b1:	
  4936  0625                     ;incstack = 0
  4937                           	opt	stack 5
  4938                           ; Regs used in _b1: [wreg+status,2+status,0]
  4939                           	line	60
  4940                           	
  4941                           l1254:	
  4942  0625                     ;botao.c: 60:    return( PORTDbits.RD1 );
  4943                           	bcf	status, 5	;RP0=0, select bank0
  4944  0625  1283               	bcf	status, 6	;RP1=0, select bank0
  4945  0626  1303               	rrf	(8),w	;volatile
  4946  0627  0C08               	andlw	(1<<1)-1
  4947  0628  3901               	goto	l254
  4948  0629  2E2A               	
  4949                           l1256:	
  4950  062A                     	line	61
  4951                           	
  4952                           l254:	
  4953  062A                     	return
  4954  062A  0008               	opt stack 0
  4955                           GLOBAL	__end_of_b1
  4956                           	__end_of_b1:
  4957  062B                     	signat	_b1,89
  4958                           	global	_b0
  4959                           
  4960 ;; *************** function _b0 *****************
  4961 ;; Defined at:
  4962 ;;		line 20 in file "botao.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;		None
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      unsigned char 
  4969 ;; Registers used:
  4970 ;;		wreg, status,2, status,0
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4976 ;;      Params:         0       0       0       0       0
  4977 ;;      Locals:         0       0       0       0       0
  4978 ;;      Temps:          0       0       0       0       0
  4979 ;;      Totals:         0       0       0       0       0
  4980 ;;Total ram usage:        0 bytes
  4981 ;; Hardware stack levels used:    1
  4982 ;; Hardware stack levels required when called:    2
  4983 ;; This function calls:
  4984 ;;		Nothing
  4985 ;; This function is called by:
  4986 ;;		_main
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  4990                           	line	20
  4991                           global __ptext17
  4992                           __ptext17:	;psect for function _b0
  4993  062B                     psect	text17
  4994                           	file	"botao.c"
  4995                           	line	20
  4996                           	global	__size_of_b0
  4997                           	__size_of_b0	equ	__end_of_b0-_b0
  4998  0006                     	
  4999                           _b0:	
  5000  062B                     ;incstack = 0
  5001                           	opt	stack 5
  5002                           ; Regs used in _b0: [wreg+status,2+status,0]
  5003                           	line	22
  5004                           	
  5005                           l1248:	
  5006  062B                     ;botao.c: 22:     return( PORTDbits.RD0 );
  5007                           	bcf	status, 5	;RP0=0, select bank0
  5008  062B  1283               	bcf	status, 6	;RP1=0, select bank0
  5009  062C  1303               	movf	(8),w	;volatile
  5010  062D  0808               	andlw	(1<<1)-1
  5011  062E  3901               	goto	l234
  5012  062F  2E30               	
  5013                           l1250:	
  5014  0630                     	line	23
  5015                           	
  5016                           l234:	
  5017  0630                     	return
  5018  0630  0008               	opt stack 0
  5019                           GLOBAL	__end_of_b0
  5020                           	__end_of_b0:
  5021  0631                     	signat	_b0,89
  5022                           	global	_T0_status
  5023                           
  5024 ;; *************** function _T0_status *****************
  5025 ;; Defined at:
  5026 ;;		line 59 in file "timers.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;		None
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;		None
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  2    2[COMMON] unsigned int 
  5033 ;; Registers used:
  5034 ;;		wreg
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5040 ;;      Params:         2       0       0       0       0
  5041 ;;      Locals:         0       0       0       0       0
  5042 ;;      Temps:          0       0       0       0       0
  5043 ;;      Totals:         2       0       0       0       0
  5044 ;;Total ram usage:        2 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; Hardware stack levels required when called:    2
  5047 ;; This function calls:
  5048 ;;		Nothing
  5049 ;; This function is called by:
  5050 ;;		_main
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5054                           	file	"timers.c"
  5055                           	line	59
  5056                           global __ptext18
  5057                           __ptext18:	;psect for function _T0_status
  5058  0616                     psect	text18
  5059                           	file	"timers.c"
  5060                           	line	59
  5061                           	global	__size_of_T0_status
  5062                           	__size_of_T0_status	equ	__end_of_T0_status-_T0_status
  5063  0008                     	
  5064                           _T0_status:	
  5065  0616                     ;incstack = 0
  5066                           	opt	stack 5
  5067                           ; Regs used in _T0_status: [wreg]
  5068                           	line	61
  5069                           	
  5070                           l1814:	
  5071  0616                     ;timers.c: 61:     return( T0count );
  5072                           	bcf	status, 5	;RP0=0, select bank0
  5073  0616  1283               	bcf	status, 6	;RP1=0, select bank0
  5074  0617  1303               	movf	(_T0count+1),w
  5075  0618  0825               	movwf	(?_T0_status+1)
  5076  0619  00F3               	movf	(_T0count),w
  5077  061A  0824               	movwf	(?_T0_status)
  5078  061B  00F2               	goto	l86
  5079  061C  2E1D               	
  5080                           l1816:	
  5081  061D                     	line	62
  5082                           	
  5083                           l86:	
  5084  061D                     	return
  5085  061D  0008               	opt stack 0
  5086                           GLOBAL	__end_of_T0_status
  5087                           	__end_of_T0_status:
  5088  061E                     	signat	_T0_status,90
  5089                           	global	_T0_start
  5090                           
  5091 ;; *************** function _T0_start *****************
  5092 ;; Defined at:
  5093 ;;		line 42 in file "timers.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  c               2    2[COMMON] unsigned int 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;		None
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      void 
  5100 ;; Registers used:
  5101 ;;		wreg
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5107 ;;      Params:         2       0       0       0       0
  5108 ;;      Locals:         0       0       0       0       0
  5109 ;;      Temps:          0       0       0       0       0
  5110 ;;      Totals:         2       0       0       0       0
  5111 ;;Total ram usage:        2 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    2
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_main
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  5121                           	line	42
  5122                           global __ptext19
  5123                           __ptext19:	;psect for function _T0_start
  5124  05EA                     psect	text19
  5125                           	file	"timers.c"
  5126                           	line	42
  5127                           	global	__size_of_T0_start
  5128                           	__size_of_T0_start	equ	__end_of_T0_start-_T0_start
  5129  000A                     	
  5130                           _T0_start:	
  5131  05EA                     ;incstack = 0
  5132                           	opt	stack 5
  5133                           ; Regs used in _T0_start: [wreg]
  5134                           	line	44
  5135                           	
  5136                           l1808:	
  5137  05EA                     ;timers.c: 42: void T0_start( unsigned int c );timers.c: 43: {;timers.c: 44:     TMR0 = 
                                 (256-250);
  5138                           	movlw	low(06h)
  5139  05EA  3006               	bcf	status, 5	;RP0=0, select bank0
  5140  05EB  1283               	bcf	status, 6	;RP1=0, select bank0
  5141  05EC  1303               	movwf	(1)	;volatile
  5142  05ED  0081               	line	45
  5143                           ;timers.c: 45:     T0count = c;
  5144                           	movf	(T0_start@c+1),w
  5145  05EE  0873               	movwf	(_T0count+1)
  5146  05EF  00A5               	movf	(T0_start@c),w
  5147  05F0  0872               	movwf	(_T0count)
  5148  05F1  00A4               	line	46
  5149                           	
  5150                           l1810:	
  5151  05F2                     ;timers.c: 46:     INTCONbits.T0IE = 1;
  5152                           	bsf	(11),5	;volatile
  5153  05F2  168B               	line	47
  5154                           	
  5155                           l77:	
  5156  05F3                     	return
  5157  05F3  0008               	opt stack 0
  5158                           GLOBAL	__end_of_T0_start
  5159                           	__end_of_T0_start:
  5160  05F4                     	signat	_T0_start,4217
  5161                           	global	_T0_init
  5162                           
  5163 ;; *************** function _T0_init *****************
  5164 ;; Defined at:
  5165 ;;		line 21 in file "timers.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;		None
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  1    wreg      void 
  5172 ;; Registers used:
  5173 ;;		wreg, status,2, status,0
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5179 ;;      Params:         0       0       0       0       0
  5180 ;;      Locals:         0       0       0       0       0
  5181 ;;      Temps:          0       0       0       0       0
  5182 ;;      Totals:         0       0       0       0       0
  5183 ;;Total ram usage:        0 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:    2
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_main
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  5193                           	line	21
  5194                           global __ptext20
  5195                           __ptext20:	;psect for function _T0_init
  5196  05CA                     psect	text20
  5197                           	file	"timers.c"
  5198                           	line	21
  5199                           	global	__size_of_T0_init
  5200                           	__size_of_T0_init	equ	__end_of_T0_init-_T0_init
  5201  0010                     	
  5202                           _T0_init:	
  5203  05CA                     ;incstack = 0
  5204                           	opt	stack 5
  5205                           ; Regs used in _T0_init: [wreg+status,2+status,0]
  5206                           	line	23
  5207                           	
  5208                           l1210:	
  5209  05CA                     ;timers.c: 23:     INTCONbits.GIE = 0;
  5210                           	bcf	(11),7	;volatile
  5211  05CA  138B               	line	24
  5212                           ;timers.c: 24:     OPTION_REGbits.PSA = 0;
  5213                           	bsf	status, 5	;RP0=1, select bank1
  5214  05CB  1683               	bcf	status, 6	;RP1=0, select bank1
  5215  05CC  1303               	bcf	(129)^080h,3	;volatile
  5216  05CD  1181               	line	25
  5217                           	
  5218                           l1212:	
  5219  05CE                     ;timers.c: 25:     OPTION_REGbits.PS = 0x1;
  5220                           	movf	(129)^080h,w	;volatile
  5221  05CE  0801               	andlw	not (((1<<3)-1)<<0)
  5222  05CF  39F8               	iorlw	(01h & ((1<<3)-1))<<0
  5223  05D0  3801               	movwf	(129)^080h	;volatile
  5224  05D1  0081               	line	26
  5225                           	
  5226                           l1214:	
  5227  05D2                     ;timers.c: 26:     OPTION_REGbits.T0CS = 0;
  5228                           	bcf	(129)^080h,5	;volatile
  5229  05D2  1281               	line	27
  5230                           	
  5231                           l1216:	
  5232  05D3                     ;timers.c: 27:     TMR0 = (256-250);
  5233                           	movlw	low(06h)
  5234  05D3  3006               	bcf	status, 5	;RP0=0, select bank0
  5235  05D4  1283               	bcf	status, 6	;RP1=0, select bank0
  5236  05D5  1303               	movwf	(1)	;volatile
  5237  05D6  0081               	line	28
  5238                           	
  5239                           l1218:	
  5240  05D7                     ;timers.c: 28:     INTCONbits.T0IE = 0;
  5241                           	bcf	(11),5	;volatile
  5242  05D7  128B               	line	29
  5243                           	
  5244                           l1220:	
  5245  05D8                     ;timers.c: 29:     INTCONbits.GIE = 1;
  5246                           	bsf	(11),7	;volatile
  5247  05D8  178B               	line	30
  5248                           	
  5249                           l70:	
  5250  05D9                     	return
  5251  05D9  0008               	opt stack 0
  5252                           GLOBAL	__end_of_T0_init
  5253                           	__end_of_T0_init:
  5254  05DA                     	signat	_T0_init,89
  5255                           	global	_isr
  5256                           
  5257 ;; *************** function _isr *****************
  5258 ;; Defined at:
  5259 ;;		line 7 in file "interrupt.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;		None
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;		None
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      void 
  5266 ;; Registers used:
  5267 ;;		wreg, status,2, status,0, pclath, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5273 ;;      Params:         0       0       0       0       0
  5274 ;;      Locals:         0       0       0       0       0
  5275 ;;      Temps:          2       0       0       0       0
  5276 ;;      Totals:         2       0       0       0       0
  5277 ;;Total ram usage:        2 bytes
  5278 ;; Hardware stack levels used:    1
  5279 ;; Hardware stack levels required when called:    1
  5280 ;; This function calls:
  5281 ;;		_T0_int
  5282 ;;		_T1_int
  5283 ;;		_T2_int
  5284 ;; This function is called by:
  5285 ;;		Interrupt level 1
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  5289                           	file	"interrupt.c"
  5290                           	line	7
  5291                           global __ptext21
  5292                           __ptext21:	;psect for function _isr
  5293  0520                     psect	text21
  5294                           	file	"interrupt.c"
  5295                           	line	7
  5296                           	global	__size_of_isr
  5297                           	__size_of_isr	equ	__end_of_isr-_isr
  5298  002C                     	
  5299                           _isr:	
  5300  0520                     ;incstack = 0
  5301                           	opt	stack 3
  5302                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  5303                           psect	intentry,class=CODE,delta=2
  5304                           global __pintentry
  5305                           __pintentry:
  5306  0004                     global interrupt_function
  5307                           interrupt_function:
  5308  0004                     	global saved_w
  5309                           	saved_w	set	btemp+0
  5310  007E                     	movwf	saved_w
  5311  0004  00FE               	swapf	status,w
  5312  0005  0E03               	movwf	(??_isr+0)
  5313  0006  00F0               	movf	pclath,w
  5314  0007  080A               	movwf	(??_isr+1)
  5315  0008  00F1               	ljmp	_isr
  5316  0009  120A  118A  2D20   psect	text21
  5317                           	line	9
  5318                           	
  5319                           i1l1952:	
  5320  0520                     ;interrupt.c: 9:     if( INTCONbits.T0IF )
  5321                           	btfss	(11),2	;volatile
  5322  0520  1D0B               	goto	u140_21
  5323  0521  2D23               	goto	u140_20
  5324  0522  2D24               u140_21:
  5325  0523                     	goto	i1l1958
  5326  0523  2D2B               u140_20:
  5327  0524                     	line	11
  5328                           	
  5329                           i1l1954:	
  5330  0524                     ;interrupt.c: 10:     {;interrupt.c: 11:         INTCONbits.T0IF = 0;
  5331                           	bcf	(11),2	;volatile
  5332  0524  110B               	line	12
  5333                           	
  5334                           i1l1956:	
  5335  0525                     ;interrupt.c: 12:         T0_int();
  5336                           	fcall	_T0_int
  5337  0525  120A  118A  25B8  120A  118A  	goto	i1l1958
  5338  052A  2D2B               	line	13
  5339                           ;interrupt.c: 13:     }
  5340                           	
  5341                           i1l139:	
  5342  052B                     	line	14
  5343                           	
  5344                           i1l1958:	
  5345  052B                     ;interrupt.c: 14:     if( PIR1bits.TMR1IF )
  5346                           	bcf	status, 5	;RP0=0, select bank0
  5347  052B  1283               	bcf	status, 6	;RP1=0, select bank0
  5348  052C  1303               	btfss	(12),0	;volatile
  5349  052D  1C0C               	goto	u141_21
  5350  052E  2D30               	goto	u141_20
  5351  052F  2D31               u141_21:
  5352  0530                     	goto	i1l1964
  5353  0530  2D38               u141_20:
  5354  0531                     	line	16
  5355                           	
  5356                           i1l1960:	
  5357  0531                     ;interrupt.c: 15:     {;interrupt.c: 16:         PIR1bits.TMR1IF = 0;
  5358                           	bcf	(12),0	;volatile
  5359  0531  100C               	line	17
  5360                           	
  5361                           i1l1962:	
  5362  0532                     ;interrupt.c: 17:         T1_int();
  5363                           	fcall	_T1_int
  5364  0532  120A  118A  2591  120A  118A  	goto	i1l1964
  5365  0537  2D38               	line	18
  5366                           ;interrupt.c: 18:     }
  5367                           	
  5368                           i1l140:	
  5369  0538                     	line	19
  5370                           	
  5371                           i1l1964:	
  5372  0538                     ;interrupt.c: 19:     if( PIR1bits.TMR2IF )
  5373                           	bcf	status, 5	;RP0=0, select bank0
  5374  0538  1283               	bcf	status, 6	;RP1=0, select bank0
  5375  0539  1303               	btfss	(12),1	;volatile
  5376  053A  1C8C               	goto	u142_21
  5377  053B  2D3D               	goto	u142_20
  5378  053C  2D3E               u142_21:
  5379  053D                     	goto	i1l142
  5380  053D  2D45               u142_20:
  5381  053E                     	line	21
  5382                           	
  5383                           i1l1966:	
  5384  053E                     ;interrupt.c: 20:     {;interrupt.c: 21:         PIR1bits.TMR2IF = 0;
  5385                           	bcf	(12),1	;volatile
  5386  053E  108C               	line	22
  5387                           	
  5388                           i1l1968:	
  5389  053F                     ;interrupt.c: 22:         T2_int();
  5390                           	fcall	_T2_int
  5391  053F  120A  118A  25DA  120A  118A  	goto	i1l142
  5392  0544  2D45               	line	23
  5393                           ;interrupt.c: 23:     }
  5394                           	
  5395                           i1l141:	
  5396  0545                     	line	24
  5397                           	
  5398                           i1l142:	
  5399  0545                     	movf	(??_isr+1),w
  5400  0545  0871               	movwf	pclath
  5401  0546  008A               	swapf	(??_isr+0)^0FFFFFF80h,w
  5402  0547  0E70               	movwf	status
  5403  0548  0083               	swapf	saved_w,f
  5404  0549  0EFE               	swapf	saved_w,w
  5405  054A  0E7E               	retfie
  5406  054B  0009               	opt stack 0
  5407                           GLOBAL	__end_of_isr
  5408                           	__end_of_isr:
  5409  054C                     	signat	_isr,89
  5410                           	global	_T2_int
  5411                           
  5412 ;; *************** function _T2_int *****************
  5413 ;; Defined at:
  5414 ;;		line 132 in file "timers.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;		None
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;		None
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1    wreg      void 
  5421 ;; Registers used:
  5422 ;;		wreg, status,2, status,0
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5428 ;;      Params:         0       0       0       0       0
  5429 ;;      Locals:         0       0       0       0       0
  5430 ;;      Temps:          0       0       0       0       0
  5431 ;;      Totals:         0       0       0       0       0
  5432 ;;Total ram usage:        0 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_isr
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  5441                           	file	"timers.c"
  5442                           	line	132
  5443                           global __ptext22
  5444                           __ptext22:	;psect for function _T2_int
  5445  05DA                     psect	text22
  5446                           	file	"timers.c"
  5447                           	line	132
  5448                           	global	__size_of_T2_int
  5449                           	__size_of_T2_int	equ	__end_of_T2_int-_T2_int
  5450  0010                     	
  5451                           _T2_int:	
  5452  05DA                     ;incstack = 0
  5453                           	opt	stack 3
  5454                           ; Regs used in _T2_int: [wreg+status,2+status,0]
  5455                           	line	134
  5456                           	
  5457                           i1l1880:	
  5458  05DA                     ;timers.c: 134:     if( T2count )
  5459                           	bcf	status, 5	;RP0=0, select bank0
  5460  05DA  1283               	bcf	status, 6	;RP1=0, select bank0
  5461  05DB  1303               	movf	((_T2count)),w
  5462  05DC  0820               iorwf	((_T2count+1)),w
  5463  05DD  0421               	btfsc	status,2
  5464  05DE  1903               	goto	u138_21
  5465  05DF  2DE1               	goto	u138_20
  5466  05E0  2DE2               u138_21:
  5467  05E1                     	goto	i1l112
  5468  05E1  2DE9               u138_20:
  5469  05E2                     	line	136
  5470                           	
  5471                           i1l1882:	
  5472  05E2                     ;timers.c: 135:     {;timers.c: 136:         --T2count;
  5473                           	movlw	01h
  5474  05E2  3001               	subwf	(_T2count),f
  5475  05E3  02A0               	movlw	0
  5476  05E4  3000               	skipc
  5477  05E5  1C03               	decf	(_T2count+1),f
  5478  05E6  03A1               	subwf	(_T2count+1),f
  5479  05E7  02A1               	goto	i1l112
  5480  05E8  2DE9               	line	137
  5481                           ;timers.c: 137:     }
  5482                           	
  5483                           i1l111:	
  5484  05E9                     	line	138
  5485                           	
  5486                           i1l112:	
  5487  05E9                     	return
  5488  05E9  0008               	opt stack 0
  5489                           GLOBAL	__end_of_T2_int
  5490                           	__end_of_T2_int:
  5491  05EA                     	signat	_T2_int,89
  5492                           	global	_T1_int
  5493                           
  5494 ;; *************** function _T1_int *****************
  5495 ;; Defined at:
  5496 ;;		line 80 in file "timers.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;		None
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;		None
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		wreg, status,2, status,0
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5510 ;;      Params:         0       0       0       0       0
  5511 ;;      Locals:         0       0       0       0       0
  5512 ;;      Temps:          0       0       0       0       0
  5513 ;;      Totals:         0       0       0       0       0
  5514 ;;Total ram usage:        0 bytes
  5515 ;; Hardware stack levels used:    1
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_isr
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  5523                           	line	80
  5524                           global __ptext23
  5525                           __ptext23:	;psect for function _T1_int
  5526  0591                     psect	text23
  5527                           	file	"timers.c"
  5528                           	line	80
  5529                           	global	__size_of_T1_int
  5530                           	__size_of_T1_int	equ	__end_of_T1_int-_T1_int
  5531  0014                     	
  5532                           _T1_int:	
  5533  0591                     ;incstack = 0
  5534                           	opt	stack 3
  5535                           ; Regs used in _T1_int: [wreg+status,2+status,0]
  5536                           	line	82
  5537                           	
  5538                           i1l1874:	
  5539  0591                     ;timers.c: 82:     TMR1H = ((0xFFFF-1000+1) >> 8) & 0x00FF;
  5540                           	movlw	low(0FCh)
  5541  0591  30FC               	bcf	status, 5	;RP0=0, select bank0
  5542  0592  1283               	bcf	status, 6	;RP1=0, select bank0
  5543  0593  1303               	movwf	(15)	;volatile
  5544  0594  008F               	line	83
  5545                           ;timers.c: 83:     TMR1L = ((0xFFFF-1000+1) >> 0) & 0x00FF;
  5546                           	movlw	low(018h)
  5547  0595  3018               	movwf	(14)	;volatile
  5548  0596  008E               	line	84
  5549                           	
  5550                           i1l1876:	
  5551  0597                     ;timers.c: 84:     if( T1count )
  5552                           	movf	((_T1count)),w
  5553  0597  0822               iorwf	((_T1count+1)),w
  5554  0598  0423               	btfsc	status,2
  5555  0599  1903               	goto	u137_21
  5556  059A  2D9C               	goto	u137_20
  5557  059B  2D9D               u137_21:
  5558  059C                     	goto	i1l93
  5559  059C  2DA4               u137_20:
  5560  059D                     	line	86
  5561                           	
  5562                           i1l1878:	
  5563  059D                     ;timers.c: 85:     {;timers.c: 86:         --T1count;
  5564                           	movlw	01h
  5565  059D  3001               	subwf	(_T1count),f
  5566  059E  02A2               	movlw	0
  5567  059F  3000               	skipc
  5568  05A0  1C03               	decf	(_T1count+1),f
  5569  05A1  03A3               	subwf	(_T1count+1),f
  5570  05A2  02A3               	goto	i1l93
  5571  05A3  2DA4               	line	87
  5572                           ;timers.c: 87:     }
  5573                           	
  5574                           i1l92:	
  5575  05A4                     	line	88
  5576                           	
  5577                           i1l93:	
  5578  05A4                     	return
  5579  05A4  0008               	opt stack 0
  5580                           GLOBAL	__end_of_T1_int
  5581                           	__end_of_T1_int:
  5582  05A5                     	signat	_T1_int,89
  5583                           	global	_T0_int
  5584                           
  5585 ;; *************** function _T0_int *****************
  5586 ;; Defined at:
  5587 ;;		line 33 in file "timers.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;		None
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;		None
  5592 ;; Return value:  Size  Location     Type
  5593 ;;                  1    wreg      void 
  5594 ;; Registers used:
  5595 ;;		wreg, status,2, status,0
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5601 ;;      Params:         0       0       0       0       0
  5602 ;;      Locals:         0       0       0       0       0
  5603 ;;      Temps:          0       0       0       0       0
  5604 ;;      Totals:         0       0       0       0       0
  5605 ;;Total ram usage:        0 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; This function calls:
  5608 ;;		Nothing
  5609 ;; This function is called by:
  5610 ;;		_isr
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  5614                           	line	33
  5615                           global __ptext24
  5616                           __ptext24:	;psect for function _T0_int
  5617  05B8                     psect	text24
  5618                           	file	"timers.c"
  5619                           	line	33
  5620                           	global	__size_of_T0_int
  5621                           	__size_of_T0_int	equ	__end_of_T0_int-_T0_int
  5622  0012                     	
  5623                           _T0_int:	
  5624  05B8                     ;incstack = 0
  5625                           	opt	stack 3
  5626                           ; Regs used in _T0_int: [wreg+status,2+status,0]
  5627                           	line	35
  5628                           	
  5629                           i1l1868:	
  5630  05B8                     ;timers.c: 35:     TMR0 = (256-250);
  5631                           	movlw	low(06h)
  5632  05B8  3006               	bcf	status, 5	;RP0=0, select bank0
  5633  05B9  1283               	bcf	status, 6	;RP1=0, select bank0
  5634  05BA  1303               	movwf	(1)	;volatile
  5635  05BB  0081               	line	36
  5636                           	
  5637                           i1l1870:	
  5638  05BC                     ;timers.c: 36:     if( T0count )
  5639                           	movf	((_T0count)),w
  5640  05BC  0824               iorwf	((_T0count+1)),w
  5641  05BD  0425               	btfsc	status,2
  5642  05BE  1903               	goto	u136_21
  5643  05BF  2DC1               	goto	u136_20
  5644  05C0  2DC2               u136_21:
  5645  05C1                     	goto	i1l74
  5646  05C1  2DC9               u136_20:
  5647  05C2                     	line	38
  5648                           	
  5649                           i1l1872:	
  5650  05C2                     ;timers.c: 37:     {;timers.c: 38:         --T0count;
  5651                           	movlw	01h
  5652  05C2  3001               	subwf	(_T0count),f
  5653  05C3  02A4               	movlw	0
  5654  05C4  3000               	skipc
  5655  05C5  1C03               	decf	(_T0count+1),f
  5656  05C6  03A5               	subwf	(_T0count+1),f
  5657  05C7  02A5               	goto	i1l74
  5658  05C8  2DC9               	line	39
  5659                           ;timers.c: 39:     }
  5660                           	
  5661                           i1l73:	
  5662  05C9                     	line	40
  5663                           	
  5664                           i1l74:	
  5665  05C9                     	return
  5666  05C9  0008               	opt stack 0
  5667                           GLOBAL	__end_of_T0_int
  5668                           	__end_of_T0_int:
  5669  05CA                     	signat	_T0_int,89
  5670                           global	___latbits
  5671                           ___latbits	equ	2
  5672  0002                     	global	btemp
  5673                           	btemp set 07Eh
  5674  007E                     
  5675                           	DABS	1,126,2	;btemp
  5676                           	global	wtemp0
  5677                           	wtemp0 set btemp+0
  5678  007E                     	end


Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     20      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    resetTemporizador@t	PTR struct temporizadorT size(1) Largest target is 24
		 -> tempo(BANK0[24]), 

    habTemporizador@t	PTR struct temporizadorT size(1) Largest target is 24
		 -> tempo(BANK0[24]), 

    temporizar@t	PTR struct temporizadorT size(1) Largest target is 24
		 -> tempo(BANK0[24]), 

    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_lcd_print
    _temporizar->___awmod
    _lcd_print->_lcd_lincol
    _lcd_num->___awmod
    _lcd_lincol->_lcd_instReg
    _lcd_init->_delay
    _lcd_init->_lcd_instReg
    _habTemporizador->_b2
    _habTemporizador->_b3

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_num
    _lcd_num->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9395
                                             16 BANK0      4     4      0
                            _T0_init
                           _T0_start
                          _T0_status
                                 _b0
                                 _b1
                                 _b2
                                 _b3
                         _botao_init
                    _habTemporizador
                           _lcd_init
                            _lcd_num
                          _lcd_print
                  _resetTemporizador
                         _temporizar
 ---------------------------------------------------------------------------------
 (1) _temporizar                                           5     5      0    1638
                                              0 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _resetTemporizador                                    1     1      0     195
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     940
                                              8 COMMON     1     1      0
                                              0 BANK0      4     2      2
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (1) _lcd_num                                             12     8      4    5541
                                              4 BANK0     12     8      4
                            ___awdiv
                            ___awmod
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (2) _lcd_lincol                                           3     2      1     372
                                              5 COMMON     3     2      1
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (2) _lcd_dataReg                                          3     3      0      44
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1153
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     427
                              _delay
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (3) _lcd_instReg                                          3     3      0     176
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     251
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _habTemporizador                                      3     2      1     480
                                              3 COMMON     3     2      1
                                 _b0 (ARG)
                                 _b1 (ARG)
                                 _b2 (ARG)
                                 _b3 (ARG)
 ---------------------------------------------------------------------------------
 (1) _botao_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _b3                                                   1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _b2                                                   1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _b1                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _b0                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _T0_status                                            2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _T0_start                                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _T0_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
                             _T0_int
                             _T1_int
                             _T2_int
 ---------------------------------------------------------------------------------
 (5) _T2_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T1_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T0_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _T0_init
   _T0_start
   _T0_status
   _b0
   _b1
   _b2
   _b3
   _botao_init
   _habTemporizador
     _b0 (ARG)
     _b1 (ARG)
     _b2 (ARG)
     _b3 (ARG)
   _lcd_init
     _delay
     _lcd_instReg
   _lcd_num
     ___awdiv
     ___awmod
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _lcd_print
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _resetTemporizador
   _temporizar
     ___awmod

 _isr (ROOT)
   _T0_int
   _T1_int
   _T2_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      33       5       63.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3F      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Apr 18 10:47:04 2022

                         pc 0002                 __CFG_CP$OFF 0000                lcd_dataReg@d 0074  
                        l40 018E                          l41 018E                          l37 006D  
                        l70 05D9                          l38 018C                          l39 018D  
                        l77 05F3                          l86 061D                  _b0Anterior 007B  
                        _b0 062B                          _b1 0625                          _b2 060E  
                        _b3 05FD                ___awdiv@sign 0040                          fsr 0004  
                _b1Anterior 007A                         ?_b0 0070                         ?_b1 0070  
                       ?_b2 0070                         ?_b3 0070                  _b2Anterior 0079  
                       l200 01FB                         l202 0223                         l210 030E  
                       l203 0224                         l211 030D                         l204 0232  
                       l220 0579                         l212 030C                         l205 0232  
                       l213 030B                         l150 0590                         l206 027E  
                       l214 030E                         l231 0624                         l207 027E  
                       l217 05FC                         l234 0630                         l170 0387  
                       l147 0589                         l171 0396                         l163 033E  
                       l148 057B                         l172 0399                         l149 0590  
                       l165 0334                         l181 04AE                         l254 062A  
                       l166 0343                         l190 04E9                         l167 036D  
                       l175 051F                         l168 0391                         l193 01A8  
                       l274 0615                         l178 05B7                         l194 01EC  
                       l195 01BD                         l187 04DA                         l540 03A9  
                       l196 01D7                         l188 04C1                         l541 03B7  
                       l197 01D8                         l189 04E9                         l294 0605  
                       l550 040C                         l542 03FC                         l198 01FA  
                       l543 03CE                         l199 0206                         l544 03C2  
                       l560 0450                         l545 03D3                         l561 045E  
                       l553 041A                         l546 03D4                         l562 046A  
                       l554 0424                         l547 03ED                         l563 046F  
                       l555 045F                         l548 03FB                         l556 0439  
                       l549 0407                         l557 042D                         l558 043E  
                       l559 043F                         _PR2 0092                __CFG_CPD$OFF 0000  
                       u900 032D                         u901 032C                         u910 0333  
                       u911 0332                         u920 034F                         u921 034E  
                       u935 0353                         u960 0380                         u961 037F  
                       u945 035B                         u970 0386                         u971 0385  
                       u955 0371                         u980 058F                         u981 058E  
                       u885 0316                         u895 031E                         u995 04F1  
                _b3Anterior 0026                         _isr 0520                         fsr0 0004  
                       indf 0000                ___awmod@sign 0078                        ??_b0 0072  
                      ??_b1 0072                        ??_b2 0072                        ??_b3 0072  
              __CFG_LVP$OFF 0000                 lcd_num@size 004B                        l1210 05CA  
                      l1220 05D8                        l1212 05CE                        l2020 03A9  
                      l2012 039A                        l2100 04CF                        l1214 05D2  
                      l1222 061E                        l2030 03BF                        l2022 03AD  
                      l2014 039D                        l2102 04D5                        l2110 02A9  
                      l1216 05D3                        l2040 03E5                        l2032 03C2  
                      l2024 03B2                        l2016 03A1                        l2104 04DA  
                      l1240 0564                        l2120 0302                        l2112 02B0  
                      l2200 00ED                        l1218 05D7                        l1250 0630  
                      l2050 0401                        l2042 03EB                        l2034 03C9  
                      l2026 03B7                        l2018 03A6                        l2130 01B2  
                      l2122 0194                        l1242 056B                        l2114 02D1  
                      l2106 0282                        l2210 015D                        l2202 0104  
                      l1260 0615                        l2052 0407                        l2044 03ED  
                      l2036 03CE                        l2028 03B9                        l2060 0412  
                      l2140 01EC                        l2132 01B8                        l2124 019D  
                      l1244 056F                        l2116 02D9                        l2108 028A  
                      l2212 0174                        l2204 011B                        l1254 0625  
                      l1262 05FD                        l2054 040C                        l2046 03F4  
                      l2038 03D4                        l2070 042A                        l2062 0417  
                      l2150 0224                        l2142 01FB                        l2134 01BD  
                      l2126 01A2                        l1246 0573                        l2118 02FA  
                      l2206 0132                        l1248 062B                        l1256 062A  
                      l1264 0605                        l2048 03FC                        l2080 0449  
                      l2072 042D                        l2064 041A                        l2056 040D  
                      l2152 022B                        l2144 0201                        l2136 01D2  
                      l2128 01A8                        l2208 0146                        l2160 0027  
                      l1258 060E                        l2090 046A                        l2082 0450  
                      l2074 0434                        l2066 041E                        l2058 040E  
                      l2154 0270                        l2138 01D8                        l2146 0206  
                      l2170 0054                        l2162 002C                        l2092 046F  
                      l2084 0457                        l2076 0439                        l2068 0424  
                      l2148 021A                        l2180 007D                        l2172 005A  
                      l2164 0031                        l2156 001F                        l1630 0310  
                      l2078 043F                        l2086 045F                        l2094 04B2  
                      l2190 00C1                        l2182 008D                        l2174 0060  
                      l2166 003E                        l2158 0022                        l1640 033E  
                      l1632 0313                        l2088 0464                        l2096 04B6  
                      l2192 00C7                        l2184 009D                        l2176 0066  
                      l2168 004B                        l1810 05F2                        l1650 0364  
                      l1642 0343                        l1634 0327                        l2098 04C1  
                      l2194 00CD                        l2186 00AD                        l2178 006D  
                      l1812 05F5                        l1660 037A                        l1652 0365  
                      l1644 0346                        l1636 032D                        l2196 00D3  
                      l2188 00B8                        l1814 0616                        l1670 0396  
                      l1662 037B                        l1654 0369                        l1646 034F  
                      l1638 0334                        l2198 00D9                        l1808 05EA  
                      l1816 061D                        l1672 057A                        l1664 0380  
                      l1648 0350                        l1656 036D                        l1680 04EE  
                      l1674 057B                        l1666 0387                        l1658 036E  
                      l1690 050B                        l1682 0502                        l1676 0589  
                      l1668 0391                        l1780 0470                        l1692 0517  
                      l1684 0503                        l1790 047F                        l1782 0479  
                      l1694 051C                        l1686 0507                        l1678 04EB  
                      l1792 0480                        l1784 047C                        l1688 050A  
                      l1696 05A6                        l1794 048A                        l1786 047D  
                      l1788 047E                        ?_isr 0070                        STR_1 0552  
                      STR_2 0552                        u1005 04F9                        u1015 050E  
                      u1025 05A9                        u1510 03A1                        u1511 03A0  
                      u1600 0401                        u1520 03AD                        u1601 0400  
                      u1521 03AC                        u1530 03BF                        u1610 0412  
                      u1531 03BE                        u1611 0411                        u1620 041E  
                      u1700 04E8                        u1621 041D                        u1701 04E7  
                      u1550 03D2                        u1630 042A                        u1710 028A  
                      u1551 03D1                        u1631 0429                        u1711 0289  
                      u1800 021A                        u1720 02B0                        u1545 03C3  
                      u1801 0219                        u1721 02AF                        u1570 03E5  
                      u1650 043D                        u1810 0222                        u1730 02D9  
                      u1571 03E4                        u1651 043C                        u1811 0221  
                      u1731 02D8                        u1660 0449                        u1820 022B  
                      u1740 0302                        u1565 03D5                        u1661 0448  
                      u1645 042E                        u1821 022A                        u1805 0216  
                      u1741 0301                        u1590 03FA                        u1830 027D  
                      u1750 0199                        u1591 03F9                        u1575 03E1  
                      u1831 027C                        u1751 0197                        u1680 045D  
                      u1760 019A                        u1840 00B8                        u1585 03EE  
                      u1681 045C                        u1665 0445                        u1841 00B7  
                      u1690 0464                        u1770 01A2                        u1907 038B  
                      u1691 0463                        u1675 0451                        u1835 0279  
                      u1771 01A1                        u1780 01D2                        u1917 0393  
                      u1781 01D1                        u1790 01F9                        u1927 057D  
                      u1791 01F8                        u1857 0505                        u1867 051A  
                      u1795 01F5                        u1877 0338                        u1887 0340  
                      u1897 0367                        i1l73 05C9                        i1l74 05C9  
                      i1l92 05A4                        i1l93 05A4                        _TMR0 0001  
                      _TMR2 0011             __end_of_T0_init 05DA                __CFG_WRT$OFF 0000  
                      _main 001F                        btemp 007E                        start 000C  
             __CFG_IESO$OFF 0000                lcd_instReg@i 0074            ?_habTemporizador 0073  
                     ??_isr 0070                lcd_num@sinal 004C                       ?_main 0070  
           __end_of___awdiv 040D               __CFG_WDTE$OFF 0000             __end_of___awmod 0470  
                     _ANSEL 0188             ___awdiv@divisor 0072                       i1l111 05E9  
                     i1l112 05E9                       i1l140 0538                       i1l141 0545  
                     i1l142 0545                       i1l139 052B             ___awdiv@counter 003F  
                     _TMR1H 000F                       _TMR1L 000E                       _PORTD 0008  
              lcd_print@col 003F                lcd_print@lin 0042              __CFG_FCMEN$OFF 0000  
              lcd_print@pos 0041                lcd_print@str 0040          __size_of_T0_status 0008  
          __end_of_T0_start 05F4             __end_of_lcd_num 027F                       _delay 057A  
                     _tempo 0027              __CFG_BOREN$OFF 0000                       pclath 000A  
                     status 0003                       wtemp0 007E               lcd_lincol@col 0075  
             lcd_lincol@lin 0077              __CFG_MCLRE$OFF 0000             __initialization 000F  
              __end_of_main 0191           _resetTemporizador 0563                      ??_main 004F  
        ?_resetTemporizador 0070                   ??_T0_init 0072                      ?_delay 0072  
          ___awdiv@dividend 0074         ??_resetTemporizador 0072                      i1l1870 05BC  
                    i1l1872 05C2                      i1l1880 05DA                      i1l1960 0531  
                    i1l1952 0520                      i1l1874 0591                      i1l1882 05E2  
                    i1l1962 0532                      i1l1954 0524                      i1l1868 05B8  
                    i1l1876 0597                      i1l1964 0538                      i1l1956 0525  
                    i1l1878 059D                      i1l1966 053E                      i1l1958 052B  
                    i1l1968 053F                      u140_20 0524                      u140_21 0523  
                    u141_20 0531                      u141_21 0530                      u142_20 053E  
                    u142_21 053D                      u136_20 05C2                      u136_21 05C1  
                    u137_20 059D                      u137_21 059C                      u138_20 05E2  
                    u138_21 05E1                      _T0_int 05B8                      _T1_int 0591  
                    _T2_int 05DA              __CFG_PWRTE$OFF 0000        __size_of_lcd_dataReg 0036  
         __end_of_T0_status 061E            __end_of_lcd_init 04AF                   ??___awdiv 0076  
                 ??___awmod 0076        __size_of_lcd_instReg 008B   __end_of_resetTemporizador 057A  
                    delay@t 0072            ___awdiv@quotient 0041             ___awmod@divisor 0072  
           ___awmod@counter 0077                   ??_lcd_num 0047                      saved_w 007E  
        resetTemporizador@t 0072     __end_of__initialization 001B              __pcstackCOMMON 0070  
                 ?_T0_start 0072               __end_of_delay 0591                  __end_of_b0 0631  
                __end_of_b1 062B                  __end_of_b2 0616                  __end_of_b3 0606  
            _OPTION_REGbits 0081                     ??_delay 0074          __size_of_lcd_print 003B  
                __pbssBANK0 0020                     ?_T0_int 0070                     ?_T1_int 0070  
                   ?_T2_int 0070                  __pmaintext 001F                  ??_T0_start 0074  
                __pintentry 0004  __size_of_resetTemporizador 0017                   T0_start@c 0072  
                _lcd_lincol 05A5                  _botao_init 061E                     _T0_init 05CA  
                   _T0count 0024                     _T1count 0022                     _T2count 0020  
                 ?_lcd_init 0070                  __stringtab 054C             __size_of_T0_int 0012  
           __size_of_T1_int 0014             __size_of_T2_int 0010           __end_of_lcd_print 04EA  
                   ___awdiv 039A                     ___awmod 040D                     __ptext1 027F  
                   __ptext2 0563                     __ptext3 04AF                     __ptext4 0191  
                   __ptext5 05A5                     __ptext6 04EA                     __ptext7 040D  
                   __ptext8 039A                     __ptext9 0470                     _lcd_num 0191  
                 _T1CONbits 0010    __size_of_habTemporizador 0009                   _T2CONbits 0012  
              __size_of_isr 002C            ___awmod@dividend 0074            habTemporizador@h 0073  
          habTemporizador@t 0075                     clrloop0 0607                  ??_lcd_init 0075  
      end_of_initialization 001B                   _T0_status 0616                  _temporizar 027F  
                 _PORTAbits 0005                   _PORTDbits 0008                   _TRISAbits 0085  
               ?_lcd_lincol 0075                   _TRISDbits 0088                 ?_botao_init 0070  
               temporizar@t 0043               ??_lcd_dataReg 0072                  lcd_num@col 0043  
                lcd_num@div 004D                  lcd_num@lin 004A                  lcd_num@tam 0046  
                lcd_num@num 0044              __end_of_T0_int 05CA              __end_of_T1_int 05A5  
            __end_of_T2_int 05EA               ??_lcd_instReg 0072                  ?_T0_status 0072  
         __size_of_T0_start 000A         start_initialization 000F                 __end_of_isr 054C  
         ??_habTemporizador 0074                    ??_T0_int 0070                    ??_T1_int 0070  
                  ??_T2_int 0070    __CFG_FOSC$INTRC_NOCLKOUT 0000         __end_of_lcd_dataReg 0520  
       __size_of_lcd_lincol 0013         __size_of_botao_init 0007         __end_of_lcd_instReg 039A  
               ?_temporizar 0070                 __pbssCOMMON 0079                   ___latbits 0002  
             __pcstackBANK0 003F                    ?_T0_init 0070           __size_of_lcd_init 003F  
                  ?___awdiv 0072                    ?___awmod 0072                 ??_T0_status 0074  
                 __pstrings 054C                   _lcd_print 04AF                    ?_lcd_num 0043  
            __size_of_delay 0017                 __size_of_b0 0006                 __size_of_b1 0006  
               __size_of_b2 0008                 __size_of_b3 0009           interrupt_function 0004  
               _lcd_dataReg 04EA         __size_of_temporizar 0090                   clear_ram0 0606  
                  _PIE1bits 008C                    _PIR1bits 000C                 _lcd_instReg 030F  
                  _T0_start 05EA                  ?_lcd_print 003F                 __stringbase 0551  
              ??_lcd_lincol 0076                ??_botao_init 0072            __size_of_T0_init 0010  
        __end_of_lcd_lincol 05B8          __end_of_botao_init 0625            __size_of___awdiv 0073  
          __size_of___awmod 0063          __end_of__stringtab 0552             _habTemporizador 05F4  
          __size_of_lcd_num 00EE                    __ptext10 030F                    __ptext11 057A  
                  __ptext20 05CA                    __ptext12 05F4                    __ptext21 0520  
                  __ptext13 061E                    __ptext22 05DA                    __ptext14 05FD  
                  __ptext23 0591                    __ptext15 060E                    __ptext24 05B8  
                  __ptext16 0625                    __ptext17 062B                    __ptext18 0616  
                  __ptext19 05EA           __CFG_BOR4V$BOR40V 0000                    _lcd_init 0470  
             __size_of_main 0172                ??_temporizar 003F                 ??_lcd_print 0078  
                _INTCONbits 000B                    intlevel1 0000          __end_of_temporizar 030F  
                 stringcode 054C     __end_of_habTemporizador 05FD                    stringdir 054C  
                  stringtab 054C                ?_lcd_dataReg 0070                ?_lcd_instReg 0070  
