

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon May 09 10:34:36 2022

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1180                           INDF equ 00h ;# 
  1181  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1182                           TMR0 equ 01h ;# 
  1183  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1184                           PCL equ 02h ;# 
  1185  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1186                           STATUS equ 03h ;# 
  1187  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1188                           FSR equ 04h ;# 
  1189  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1190                           PORTA equ 05h ;# 
  1191  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1192                           PORTB equ 06h ;# 
  1193  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1194                           PORTC equ 07h ;# 
  1195  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1196                           PORTD equ 08h ;# 
  1197  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1198                           PORTE equ 09h ;# 
  1199  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1200                           PCLATH equ 0Ah ;# 
  1201  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1202                           INTCON equ 0Bh ;# 
  1203  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1204                           PIR1 equ 0Ch ;# 
  1205  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1206                           PIR2 equ 0Dh ;# 
  1207  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1208                           TMR1 equ 0Eh ;# 
  1209  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1210                           TMR1L equ 0Eh ;# 
  1211  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1212                           TMR1H equ 0Fh ;# 
  1213  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1214                           T1CON equ 010h ;# 
  1215  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1216                           TMR2 equ 011h ;# 
  1217  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1218                           T2CON equ 012h ;# 
  1219  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1220                           SSPBUF equ 013h ;# 
  1221  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1222                           SSPCON equ 014h ;# 
  1223  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1224                           CCPR1 equ 015h ;# 
  1225  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1226                           CCPR1L equ 015h ;# 
  1227  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1228                           CCPR1H equ 016h ;# 
  1229  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1230                           CCP1CON equ 017h ;# 
  1231  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1232                           RCSTA equ 018h ;# 
  1233  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1234                           TXREG equ 019h ;# 
  1235  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1236                           RCREG equ 01Ah ;# 
  1237  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1238                           CCPR2 equ 01Bh ;# 
  1239  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1240                           CCPR2L equ 01Bh ;# 
  1241  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1242                           CCPR2H equ 01Ch ;# 
  1243  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1244                           CCP2CON equ 01Dh ;# 
  1245  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1246                           ADRESH equ 01Eh ;# 
  1247  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1248                           ADCON0 equ 01Fh ;# 
  1249  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1250                           OPTION_REG equ 081h ;# 
  1251  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1252                           TRISA equ 085h ;# 
  1253  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1254                           TRISB equ 086h ;# 
  1255  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1256                           TRISC equ 087h ;# 
  1257  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1258                           TRISD equ 088h ;# 
  1259  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1260                           TRISE equ 089h ;# 
  1261  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1262                           PIE1 equ 08Ch ;# 
  1263  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1264                           PIE2 equ 08Dh ;# 
  1265  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1266                           PCON equ 08Eh ;# 
  1267  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1268                           OSCCON equ 08Fh ;# 
  1269  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1270                           OSCTUNE equ 090h ;# 
  1271  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1272                           SSPCON2 equ 091h ;# 
  1273  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1274                           PR2 equ 092h ;# 
  1275  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1276                           SSPADD equ 093h ;# 
  1277  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1278                           SSPMSK equ 093h ;# 
  1279  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1280                           MSK equ 093h ;# 
  1281  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1282                           SSPSTAT equ 094h ;# 
  1283  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1284                           WPUB equ 095h ;# 
  1285  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1286                           IOCB equ 096h ;# 
  1287  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1288                           VRCON equ 097h ;# 
  1289  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1290                           TXSTA equ 098h ;# 
  1291  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1292                           SPBRG equ 099h ;# 
  1293  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1294                           SPBRGH equ 09Ah ;# 
  1295  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1296                           PWM1CON equ 09Bh ;# 
  1297  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1298                           ECCPAS equ 09Ch ;# 
  1299  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1300                           PSTRCON equ 09Dh ;# 
  1301  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1302                           ADRESL equ 09Eh ;# 
  1303  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1304                           ADCON1 equ 09Fh ;# 
  1305  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1306                           WDTCON equ 0105h ;# 
  1307  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1308                           CM1CON0 equ 0107h ;# 
  1309  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1310                           CM2CON0 equ 0108h ;# 
  1311  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1312                           CM2CON1 equ 0109h ;# 
  1313  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1314                           EEDATA equ 010Ch ;# 
  1315  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1316                           EEDAT equ 010Ch ;# 
  1317  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1318                           EEADR equ 010Dh ;# 
  1319  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1320                           EEDATH equ 010Eh ;# 
  1321  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1322                           EEADRH equ 010Fh ;# 
  1323  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1324                           SRCON equ 0185h ;# 
  1325  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1326                           BAUDCTL equ 0187h ;# 
  1327  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1328                           ANSEL equ 0188h ;# 
  1329  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1330                           ANSELH equ 0189h ;# 
  1331  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1332                           EECON1 equ 018Ch ;# 
  1333  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1334                           EECON2 equ 018Dh ;# 
  1335  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1336                           INDF equ 00h ;# 
  1337  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1338                           TMR0 equ 01h ;# 
  1339  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1340                           PCL equ 02h ;# 
  1341  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1342                           STATUS equ 03h ;# 
  1343  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1344                           FSR equ 04h ;# 
  1345  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1346                           PORTA equ 05h ;# 
  1347  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1348                           PORTB equ 06h ;# 
  1349  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1350                           PORTC equ 07h ;# 
  1351  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1352                           PORTD equ 08h ;# 
  1353  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1354                           PORTE equ 09h ;# 
  1355  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1356                           PCLATH equ 0Ah ;# 
  1357  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1358                           INTCON equ 0Bh ;# 
  1359  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1360                           PIR1 equ 0Ch ;# 
  1361  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1362                           PIR2 equ 0Dh ;# 
  1363  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1364                           TMR1 equ 0Eh ;# 
  1365  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1366                           TMR1L equ 0Eh ;# 
  1367  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1368                           TMR1H equ 0Fh ;# 
  1369  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1370                           T1CON equ 010h ;# 
  1371  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1372                           TMR2 equ 011h ;# 
  1373  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1374                           T2CON equ 012h ;# 
  1375  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1376                           SSPBUF equ 013h ;# 
  1377  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1378                           SSPCON equ 014h ;# 
  1379  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1380                           CCPR1 equ 015h ;# 
  1381  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1382                           CCPR1L equ 015h ;# 
  1383  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1384                           CCPR1H equ 016h ;# 
  1385  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1386                           CCP1CON equ 017h ;# 
  1387  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1388                           RCSTA equ 018h ;# 
  1389  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1390                           TXREG equ 019h ;# 
  1391  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1392                           RCREG equ 01Ah ;# 
  1393  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1394                           CCPR2 equ 01Bh ;# 
  1395  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1396                           CCPR2L equ 01Bh ;# 
  1397  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1398                           CCPR2H equ 01Ch ;# 
  1399  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1400                           CCP2CON equ 01Dh ;# 
  1401  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1402                           ADRESH equ 01Eh ;# 
  1403  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1404                           ADCON0 equ 01Fh ;# 
  1405  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1406                           OPTION_REG equ 081h ;# 
  1407  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1408                           TRISA equ 085h ;# 
  1409  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1410                           TRISB equ 086h ;# 
  1411  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1412                           TRISC equ 087h ;# 
  1413  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1414                           TRISD equ 088h ;# 
  1415  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1416                           TRISE equ 089h ;# 
  1417  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1418                           PIE1 equ 08Ch ;# 
  1419  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1420                           PIE2 equ 08Dh ;# 
  1421  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1422                           PCON equ 08Eh ;# 
  1423  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1424                           OSCCON equ 08Fh ;# 
  1425  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1426                           OSCTUNE equ 090h ;# 
  1427  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1428                           SSPCON2 equ 091h ;# 
  1429  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1430                           PR2 equ 092h ;# 
  1431  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1432                           SSPADD equ 093h ;# 
  1433  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1434                           SSPMSK equ 093h ;# 
  1435  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1436                           MSK equ 093h ;# 
  1437  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1438                           SSPSTAT equ 094h ;# 
  1439  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1440                           WPUB equ 095h ;# 
  1441  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1442                           IOCB equ 096h ;# 
  1443  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1444                           VRCON equ 097h ;# 
  1445  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1446                           TXSTA equ 098h ;# 
  1447  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1448                           SPBRG equ 099h ;# 
  1449  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1450                           SPBRGH equ 09Ah ;# 
  1451  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1452                           PWM1CON equ 09Bh ;# 
  1453  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1454                           ECCPAS equ 09Ch ;# 
  1455  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1456                           PSTRCON equ 09Dh ;# 
  1457  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1458                           ADRESL equ 09Eh ;# 
  1459  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1460                           ADCON1 equ 09Fh ;# 
  1461  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1462                           WDTCON equ 0105h ;# 
  1463  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1464                           CM1CON0 equ 0107h ;# 
  1465  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1466                           CM2CON0 equ 0108h ;# 
  1467  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1468                           CM2CON1 equ 0109h ;# 
  1469  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1470                           EEDATA equ 010Ch ;# 
  1471  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1472                           EEDAT equ 010Ch ;# 
  1473  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1474                           EEADR equ 010Dh ;# 
  1475  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1476                           EEDATH equ 010Eh ;# 
  1477  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1478                           EEADRH equ 010Fh ;# 
  1479  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1480                           SRCON equ 0185h ;# 
  1481  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1482                           BAUDCTL equ 0187h ;# 
  1483  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1484                           ANSEL equ 0188h ;# 
  1485  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1486                           ANSELH equ 0189h ;# 
  1487  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1488                           EECON1 equ 018Ch ;# 
  1489  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1490                           EECON2 equ 018Dh ;# 
  1491  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1492                           INDF equ 00h ;# 
  1493  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1494                           TMR0 equ 01h ;# 
  1495  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1496                           PCL equ 02h ;# 
  1497  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1498                           STATUS equ 03h ;# 
  1499  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1500                           FSR equ 04h ;# 
  1501  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1502                           PORTA equ 05h ;# 
  1503  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1504                           PORTB equ 06h ;# 
  1505  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1506                           PORTC equ 07h ;# 
  1507  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1508                           PORTD equ 08h ;# 
  1509  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1510                           PORTE equ 09h ;# 
  1511  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1512                           PCLATH equ 0Ah ;# 
  1513  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1514                           INTCON equ 0Bh ;# 
  1515  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1516                           PIR1 equ 0Ch ;# 
  1517  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1518                           PIR2 equ 0Dh ;# 
  1519  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1520                           TMR1 equ 0Eh ;# 
  1521  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1522                           TMR1L equ 0Eh ;# 
  1523  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1524                           TMR1H equ 0Fh ;# 
  1525  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1526                           T1CON equ 010h ;# 
  1527  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1528                           TMR2 equ 011h ;# 
  1529  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1530                           T2CON equ 012h ;# 
  1531  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1532                           SSPBUF equ 013h ;# 
  1533  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1534                           SSPCON equ 014h ;# 
  1535  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1536                           CCPR1 equ 015h ;# 
  1537  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1538                           CCPR1L equ 015h ;# 
  1539  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1540                           CCPR1H equ 016h ;# 
  1541  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1542                           CCP1CON equ 017h ;# 
  1543  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1544                           RCSTA equ 018h ;# 
  1545  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1546                           TXREG equ 019h ;# 
  1547  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1548                           RCREG equ 01Ah ;# 
  1549  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1550                           CCPR2 equ 01Bh ;# 
  1551  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1552                           CCPR2L equ 01Bh ;# 
  1553  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1554                           CCPR2H equ 01Ch ;# 
  1555  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1556                           CCP2CON equ 01Dh ;# 
  1557  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1558                           ADRESH equ 01Eh ;# 
  1559  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1560                           ADCON0 equ 01Fh ;# 
  1561  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1562                           OPTION_REG equ 081h ;# 
  1563  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1564                           TRISA equ 085h ;# 
  1565  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1566                           TRISB equ 086h ;# 
  1567  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1568                           TRISC equ 087h ;# 
  1569  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1570                           TRISD equ 088h ;# 
  1571  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1572                           TRISE equ 089h ;# 
  1573  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1574                           PIE1 equ 08Ch ;# 
  1575  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1576                           PIE2 equ 08Dh ;# 
  1577  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1578                           PCON equ 08Eh ;# 
  1579  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1580                           OSCCON equ 08Fh ;# 
  1581  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1582                           OSCTUNE equ 090h ;# 
  1583  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1584                           SSPCON2 equ 091h ;# 
  1585  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1586                           PR2 equ 092h ;# 
  1587  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1588                           SSPADD equ 093h ;# 
  1589  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1590                           SSPMSK equ 093h ;# 
  1591  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1592                           MSK equ 093h ;# 
  1593  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1594                           SSPSTAT equ 094h ;# 
  1595  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1596                           WPUB equ 095h ;# 
  1597  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1598                           IOCB equ 096h ;# 
  1599  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1600                           VRCON equ 097h ;# 
  1601  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1602                           TXSTA equ 098h ;# 
  1603  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1604                           SPBRG equ 099h ;# 
  1605  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1606                           SPBRGH equ 09Ah ;# 
  1607  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1608                           PWM1CON equ 09Bh ;# 
  1609  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1610                           ECCPAS equ 09Ch ;# 
  1611  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1612                           PSTRCON equ 09Dh ;# 
  1613  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1614                           ADRESL equ 09Eh ;# 
  1615  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1616                           ADCON1 equ 09Fh ;# 
  1617  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1618                           WDTCON equ 0105h ;# 
  1619  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1620                           CM1CON0 equ 0107h ;# 
  1621  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1622                           CM2CON0 equ 0108h ;# 
  1623  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1624                           CM2CON1 equ 0109h ;# 
  1625  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1626                           EEDATA equ 010Ch ;# 
  1627  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1628                           EEDAT equ 010Ch ;# 
  1629  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1630                           EEADR equ 010Dh ;# 
  1631  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1632                           EEDATH equ 010Eh ;# 
  1633  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1634                           EEADRH equ 010Fh ;# 
  1635  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1636                           SRCON equ 0185h ;# 
  1637  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1638                           BAUDCTL equ 0187h ;# 
  1639  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1640                           ANSEL equ 0188h ;# 
  1641  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1642                           ANSELH equ 0189h ;# 
  1643  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1644                           EECON1 equ 018Ch ;# 
  1645  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1646                           EECON2 equ 018Dh ;# 
  1647  018D                     	FNCALL	_main,_EEPROM_read
  1648                           	FNCALL	_main,_EEPROM_write
  1649                           	FNCALL	_main,_T0_init
  1650                           	FNCALL	_main,_T0_start
  1651                           	FNCALL	_main,_T0_status
  1652                           	FNCALL	_main,_b0
  1653                           	FNCALL	_main,_b1
  1654                           	FNCALL	_main,_b2
  1655                           	FNCALL	_main,_b3
  1656                           	FNCALL	_main,_botao_init
  1657                           	FNCALL	_main,_habTemporizador
  1658                           	FNCALL	_main,_lcd_init
  1659                           	FNCALL	_main,_lcd_num
  1660                           	FNCALL	_main,_lcd_print
  1661                           	FNCALL	_main,_resetTemporizador
  1662                           	FNCALL	_main,_temporizar
  1663                           	FNCALL	_temporizar,___awmod
  1664                           	FNCALL	_lcd_print,_lcd_dataReg
  1665                           	FNCALL	_lcd_print,_lcd_lincol
  1666                           	FNCALL	_lcd_num,___awdiv
  1667                           	FNCALL	_lcd_num,___awmod
  1668                           	FNCALL	_lcd_num,_lcd_dataReg
  1669                           	FNCALL	_lcd_num,_lcd_lincol
  1670                           	FNCALL	_lcd_lincol,_lcd_instReg
  1671                           	FNCALL	_lcd_init,_delay
  1672                           	FNCALL	_lcd_init,_lcd_instReg
  1673                           	FNROOT	_main
  1674                           	FNCALL	_isr,_T0_int
  1675                           	FNCALL	_isr,_T1_int
  1676                           	FNCALL	_isr,_T2_int
  1677                           	FNCALL	intlevel1,_isr
  1678                           	global	intlevel1
  1679                           	FNROOT	intlevel1
  1680                           	global	_b1Anterior
  1681                           	global	_b0Anterior
  1682                           psect	idataCOMMON,class=CODE,space=0,delta=2,noexec
  1683                           global __pidataCOMMON
  1684                           __pidataCOMMON:
  1685  067D                     	file	"botao.c"
  1686                           	line	63
  1687                           
  1688                           ;initializer for _b1Anterior
  1689                           	retlw	01h
  1690  067D  3401               	line	25
  1691                           
  1692                           ;initializer for _b0Anterior
  1693                           	retlw	01h
  1694  067E  3401               	global	_tecladoMatriz
  1695                           psect	strings,class=STRING,delta=2,noexec
  1696                           global __pstrings
  1697                           __pstrings:
  1698  0555                     stringtab:
  1699  0555                     	global    __stringtab
  1700                           __stringtab:
  1701  0555                     ;	String table - string pointers are 1 byte each
  1702                           stringcode:stringdir:
  1703  0555                     movlw high(stringdir)
      + 0555                     stringdir:	
  1704  0555  3005               movwf pclath
  1705  0556  008A               movf fsr,w
  1706  0557  0804               incf fsr
  1707  0558  0A84               	addwf pc
  1708  0559  0782               	global __stringbase
  1709                           __stringbase:
  1710  055A                     	retlw	0
  1711  055A  3400               psect	strings
  1712                           	global    __end_of__stringtab
  1713                           __end_of__stringtab:
  1714  055B                     	file	"teclado.c"
  1715                           	line	20
  1716                           _tecladoMatriz:
  1717  055B                     	retlw	031h
  1718  055B  3431               	retlw	032h
  1719  055C  3432               	retlw	033h
  1720  055D  3433               	retlw	041h
  1721  055E  3441               	retlw	034h
  1722  055F  3434               	retlw	035h
  1723  0560  3435               	retlw	036h
  1724  0561  3436               	retlw	042h
  1725  0562  3442               	retlw	037h
  1726  0563  3437               	retlw	038h
  1727  0564  3438               	retlw	039h
  1728  0565  3439               	retlw	043h
  1729  0566  3443               	retlw	05Eh
  1730  0567  345E               	retlw	076h
  1731  0568  3476               	retlw	03Ch
  1732  0569  343C               	retlw	03Eh
  1733  056A  343E               	global __end_of_tecladoMatriz
  1734                           __end_of_tecladoMatriz:
  1735  056B                     	global	_tecladoMatriz
  1736                           	global	_b2Anterior
  1737                           	global	_T2count
  1738                           	global	_T1count
  1739                           	global	_T0count
  1740                           	global	_b3Anterior
  1741                           	global	_tempo
  1742                           	global	_PORTB
  1743                           _PORTB	set	0x6
  1744  0006                     	global	_PORTAbits
  1745                           _PORTAbits	set	0x5
  1746  0005                     	global	_PORTD
  1747                           _PORTD	set	0x8
  1748  0008                     	global	_PORTDbits
  1749                           _PORTDbits	set	0x8
  1750  0008                     	global	_PIR1bits
  1751                           _PIR1bits	set	0xC
  1752  000C                     	global	_T2CONbits
  1753                           _T2CONbits	set	0x12
  1754  0012                     	global	_TMR2
  1755                           _TMR2	set	0x11
  1756  0011                     	global	_TMR1L
  1757                           _TMR1L	set	0xE
  1758  000E                     	global	_TMR1H
  1759                           _TMR1H	set	0xF
  1760  000F                     	global	_T1CONbits
  1761                           _T1CONbits	set	0x10
  1762  0010                     	global	_TMR0
  1763                           _TMR0	set	0x1
  1764  0001                     	global	_INTCONbits
  1765                           _INTCONbits	set	0xB
  1766  000B                     	global	_WPUB
  1767                           _WPUB	set	0x95
  1768  0095                     	global	_TRISB
  1769                           _TRISB	set	0x86
  1770  0086                     	global	_TRISAbits
  1771                           _TRISAbits	set	0x85
  1772  0085                     	global	_TRISDbits
  1773                           _TRISDbits	set	0x88
  1774  0088                     	global	_PR2
  1775                           _PR2	set	0x92
  1776  0092                     	global	_PIE1bits
  1777                           _PIE1bits	set	0x8C
  1778  008C                     	global	_OPTION_REGbits
  1779                           _OPTION_REGbits	set	0x81
  1780  0081                     	global	_EEDAT
  1781                           _EEDAT	set	0x10C
  1782  010C                     	global	_EEADR
  1783                           _EEADR	set	0x10D
  1784  010D                     	global	_EEADRH
  1785                           _EEADRH	set	0x10F
  1786  010F                     	global	_EECON2
  1787                           _EECON2	set	0x18D
  1788  018D                     	global	_EECON1bits
  1789                           _EECON1bits	set	0x18C
  1790  018C                     	global	_ANSELH
  1791                           _ANSELH	set	0x189
  1792  0189                     	global	_ANSEL
  1793                           _ANSEL	set	0x188
  1794  0188                     	
  1795                           STR_1:	
  1796  056B                     	retlw	48	;'0'
  1797  056B  3430               	retlw	48	;'0'
  1798  056C  3430               	retlw	58	;':'
  1799  056D  343A               	retlw	48	;'0'
  1800  056E  3430               	retlw	48	;'0'
  1801  056F  3430               	retlw	32	;' '
  1802  0570  3420               	retlw	32	;' '
  1803  0571  3420               	retlw	32	;' '
  1804  0572  3420               	retlw	32	;' '
  1805  0573  3420               	retlw	32	;' '
  1806  0574  3420               	retlw	32	;' '
  1807  0575  3420               	retlw	48	;'0'
  1808  0576  3430               	retlw	48	;'0'
  1809  0577  3430               	retlw	58	;':'
  1810  0578  343A               	retlw	48	;'0'
  1811  0579  3430               	retlw	48	;'0'
  1812  057A  3430               	retlw	0
  1813  057B  3400               psect	strings
  1814                           STR_2	equ	STR_1+0
  1815  056B                     ; #config settings
  1816                           global __CFG_FOSC$INTRC_NOCLKOUT
  1817                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1818  0000                     global __CFG_WDTE$OFF
  1819                           __CFG_WDTE$OFF equ 0x0
  1820  0000                     global __CFG_PWRTE$OFF
  1821                           __CFG_PWRTE$OFF equ 0x0
  1822  0000                     global __CFG_MCLRE$OFF
  1823                           __CFG_MCLRE$OFF equ 0x0
  1824  0000                     global __CFG_CP$OFF
  1825                           __CFG_CP$OFF equ 0x0
  1826  0000                     global __CFG_CPD$OFF
  1827                           __CFG_CPD$OFF equ 0x0
  1828  0000                     global __CFG_BOREN$OFF
  1829                           __CFG_BOREN$OFF equ 0x0
  1830  0000                     global __CFG_IESO$OFF
  1831                           __CFG_IESO$OFF equ 0x0
  1832  0000                     global __CFG_FCMEN$OFF
  1833                           __CFG_FCMEN$OFF equ 0x0
  1834  0000                     global __CFG_LVP$OFF
  1835                           __CFG_LVP$OFF equ 0x0
  1836  0000                     global __CFG_BOR4V$BOR40V
  1837                           __CFG_BOR4V$BOR40V equ 0x0
  1838  0000                     global __CFG_WRT$OFF
  1839                           __CFG_WRT$OFF equ 0x0
  1840  0000                     	file	"C:\Users\211934~1.CFP\AppData\Local\Temp\sa1c."
  1841                           	line	#
  1842                           psect cinit,class=CODE,delta=2
  1843                           global start_initialization
  1844                           start_initialization:
  1845  000F                     
  1846                           global __initialization
  1847                           __initialization:
  1848  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1849                           global __pbssCOMMON
  1850                           __pbssCOMMON:
  1851  007B                     _b2Anterior:
  1852  007B                            ds      1
  1853  007B                     
  1854                           psect	dataCOMMON,class=COMMON,space=1,noexec
  1855                           global __pdataCOMMON
  1856                           __pdataCOMMON:
  1857  0079                     	file	"botao.c"
  1858                           	line	63
  1859                           _b1Anterior:
  1860  0079                            ds      1
  1861  0079                     
  1862                           psect	dataCOMMON
  1863                           	file	"botao.c"
  1864                           	line	25
  1865                           _b0Anterior:
  1866  007A                            ds      1
  1867  007A                     
  1868                           psect	bssBANK0,class=BANK0,space=1,noexec
  1869                           global __pbssBANK0
  1870                           __pbssBANK0:
  1871  0020                     _T2count:
  1872  0020                            ds      2
  1873  0020                     
  1874                           _T1count:
  1875  0022                            ds      2
  1876  0022                     
  1877                           _T0count:
  1878  0024                            ds      2
  1879  0024                     
  1880                           _b3Anterior:
  1881  0026                            ds      1
  1882  0026                     
  1883                           _tempo:
  1884  0027                            ds      24
  1885  0027                     
  1886                           	file	"C:\Users\211934~1.CFP\AppData\Local\Temp\sa1c."
  1887                           	line	#
  1888                           ; Initialize objects allocated to COMMON
  1889                           	global __pidataCOMMON
  1890                           psect cinit,class=CODE,delta=2,merge=1
  1891                           	fcall	__pidataCOMMON+0		;fetch initializer
  1892  000F  120A  118A  267D  120A  118A  	movwf	__pdataCOMMON+0&07fh		
  1893  0014  00F9               	fcall	__pidataCOMMON+1		;fetch initializer
  1894  0015  120A  118A  267E  120A  118A  	movwf	__pdataCOMMON+1&07fh		
  1895  001A  00FA               	line	#
  1896                           psect clrtext,class=CODE,delta=2
  1897                           global clear_ram0
  1898                           ;	Called with FSR containing the base address, and
  1899                           ;	W with the last address+1
  1900                           clear_ram0:
  1901  0666                     	clrwdt			;clear the watchdog before getting into this loop
  1902  0666  0064               clrloop0:
  1903  0667                     	clrf	indf		;clear RAM location pointed to by FSR
  1904  0667  0180               	incf	fsr,f		;increment pointer
  1905  0668  0A84               	xorwf	fsr,w		;XOR with final address
  1906  0669  0604               	btfsc	status,2	;have we reached the end yet?
  1907  066A  1903               	retlw	0		;all done for this memory range, return
  1908  066B  3400               	xorwf	fsr,w		;XOR again to restore value
  1909  066C  0604               	goto	clrloop0		;do the next byte
  1910  066D  2E67               
  1911                           ; Clear objects allocated to BANK0
  1912                           psect cinit,class=CODE,delta=2,merge=1
  1913                           	bcf	status, 7	;select IRP bank0
  1914  001B  1383               	movlw	low(__pbssBANK0)
  1915  001C  3020               	movwf	fsr
  1916  001D  0084               	movlw	low((__pbssBANK0)+01Fh)
  1917  001E  303F               	fcall	clear_ram0
  1918  001F  120A  118A  2666  120A  118A  ; Clear objects allocated to COMMON
  1919                           psect cinit,class=CODE,delta=2,merge=1
  1920                           	clrf	((__pbssCOMMON)+0)&07Fh
  1921  0024  01FB               psect cinit,class=CODE,delta=2,merge=1
  1922                           global end_of_initialization,__end_of__initialization
  1923                           
  1924                           ;End of C runtime variable initialization code
  1925                           
  1926                           end_of_initialization:
  1927  0025                     __end_of__initialization:
  1928  0025                     clrf status
  1929  0025  0183               ljmp _main	;jump to C main() function
  1930  0026  120A  118A  2829   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1931                           global __pcstackCOMMON
  1932                           __pcstackCOMMON:
  1933  0070                     ?_lcd_init:	; 1 bytes @ 0x0
  1934  0070                     ?_T0_init:	; 1 bytes @ 0x0
  1935  0070                     ?_botao_init:	; 1 bytes @ 0x0
  1936  0070                     ?_resetTemporizador:	; 1 bytes @ 0x0
  1937  0070                     ?_EEPROM_read:	; 1 bytes @ 0x0
  1938  0070                     ?_b0:	; 1 bytes @ 0x0
  1939  0070                     ?_b1:	; 1 bytes @ 0x0
  1940  0070                     ?_b2:	; 1 bytes @ 0x0
  1941  0070                     ?_b3:	; 1 bytes @ 0x0
  1942  0070                     ?_temporizar:	; 1 bytes @ 0x0
  1943  0070                     ?_main:	; 1 bytes @ 0x0
  1944  0070                     ?_T0_int:	; 1 bytes @ 0x0
  1945  0070                     ??_T0_int:	; 1 bytes @ 0x0
  1946  0070                     ?_T1_int:	; 1 bytes @ 0x0
  1947  0070                     ??_T1_int:	; 1 bytes @ 0x0
  1948  0070                     ?_T2_int:	; 1 bytes @ 0x0
  1949  0070                     ??_T2_int:	; 1 bytes @ 0x0
  1950  0070                     ?_isr:	; 1 bytes @ 0x0
  1951  0070                     ??_isr:	; 1 bytes @ 0x0
  1952  0070                     ?_lcd_instReg:	; 1 bytes @ 0x0
  1953  0070                     ?_lcd_dataReg:	; 1 bytes @ 0x0
  1954  0070                     	ds	2
  1955  0070                     ??_T0_init:	; 1 bytes @ 0x2
  1956  0072                     ??_botao_init:	; 1 bytes @ 0x2
  1957  0072                     ?_T0_start:	; 1 bytes @ 0x2
  1958  0072                     ??_resetTemporizador:	; 1 bytes @ 0x2
  1959  0072                     ??_EEPROM_read:	; 1 bytes @ 0x2
  1960  0072                     ?_habTemporizador:	; 1 bytes @ 0x2
  1961  0072                     ??_b0:	; 1 bytes @ 0x2
  1962  0072                     ??_b1:	; 1 bytes @ 0x2
  1963  0072                     ??_b2:	; 1 bytes @ 0x2
  1964  0072                     ??_b3:	; 1 bytes @ 0x2
  1965  0072                     ?_EEPROM_write:	; 1 bytes @ 0x2
  1966  0072                     ?_delay:	; 1 bytes @ 0x2
  1967  0072                     ??_lcd_instReg:	; 1 bytes @ 0x2
  1968  0072                     ??_lcd_dataReg:	; 1 bytes @ 0x2
  1969  0072                     	global	?_T0_status
  1970                           ?_T0_status:	; 2 bytes @ 0x2
  1971  0072                     	global	?___awdiv
  1972                           ?___awdiv:	; 2 bytes @ 0x2
  1973  0072                     	global	?___awmod
  1974                           ?___awmod:	; 2 bytes @ 0x2
  1975  0072                     	global	habTemporizador@h
  1976                           habTemporizador@h:	; 1 bytes @ 0x2
  1977  0072                     	global	resetTemporizador@t
  1978                           resetTemporizador@t:	; 1 bytes @ 0x2
  1979  0072                     	global	EEPROM_read@addr
  1980                           EEPROM_read@addr:	; 1 bytes @ 0x2
  1981  0072                     	global	EEPROM_write@data
  1982                           EEPROM_write@data:	; 1 bytes @ 0x2
  1983  0072                     	global	T0_start@c
  1984                           T0_start@c:	; 2 bytes @ 0x2
  1985  0072                     	global	delay@t
  1986                           delay@t:	; 2 bytes @ 0x2
  1987  0072                     	global	___awdiv@divisor
  1988                           ___awdiv@divisor:	; 2 bytes @ 0x2
  1989  0072                     	global	___awmod@divisor
  1990                           ___awmod@divisor:	; 2 bytes @ 0x2
  1991  0072                     	ds	1
  1992  0072                     ??_habTemporizador:	; 1 bytes @ 0x3
  1993  0073                     ??_EEPROM_write:	; 1 bytes @ 0x3
  1994  0073                     	global	EEPROM_write@addr
  1995                           EEPROM_write@addr:	; 1 bytes @ 0x3
  1996  0073                     	ds	1
  1997  0073                     ??_T0_start:	; 1 bytes @ 0x4
  1998  0074                     ??_T0_status:	; 1 bytes @ 0x4
  1999  0074                     ??_delay:	; 1 bytes @ 0x4
  2000  0074                     	global	lcd_instReg@i
  2001                           lcd_instReg@i:	; 1 bytes @ 0x4
  2002  0074                     	global	lcd_dataReg@d
  2003                           lcd_dataReg@d:	; 1 bytes @ 0x4
  2004  0074                     	global	habTemporizador@t
  2005                           habTemporizador@t:	; 1 bytes @ 0x4
  2006  0074                     	global	___awdiv@dividend
  2007                           ___awdiv@dividend:	; 2 bytes @ 0x4
  2008  0074                     	global	___awmod@dividend
  2009                           ___awmod@dividend:	; 2 bytes @ 0x4
  2010  0074                     	ds	1
  2011  0074                     ??_lcd_init:	; 1 bytes @ 0x5
  2012  0075                     ?_lcd_lincol:	; 1 bytes @ 0x5
  2013  0075                     	global	lcd_lincol@col
  2014                           lcd_lincol@col:	; 1 bytes @ 0x5
  2015  0075                     	ds	1
  2016  0075                     ??_lcd_lincol:	; 1 bytes @ 0x6
  2017  0076                     ??___awdiv:	; 1 bytes @ 0x6
  2018  0076                     ??___awmod:	; 1 bytes @ 0x6
  2019  0076                     	ds	1
  2020  0076                     	global	lcd_lincol@lin
  2021                           lcd_lincol@lin:	; 1 bytes @ 0x7
  2022  0077                     	global	___awmod@counter
  2023                           ___awmod@counter:	; 1 bytes @ 0x7
  2024  0077                     	ds	1
  2025  0077                     ??_lcd_print:	; 1 bytes @ 0x8
  2026  0078                     	global	___awmod@sign
  2027                           ___awmod@sign:	; 1 bytes @ 0x8
  2028  0078                     	ds	1
  2029  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2030                           global __pcstackBANK0
  2031                           __pcstackBANK0:
  2032  003F                     ?_lcd_print:	; 1 bytes @ 0x0
  2033  003F                     ??_temporizar:	; 1 bytes @ 0x0
  2034  003F                     	global	lcd_print@col
  2035                           lcd_print@col:	; 1 bytes @ 0x0
  2036  003F                     	global	___awdiv@counter
  2037                           ___awdiv@counter:	; 1 bytes @ 0x0
  2038  003F                     	ds	1
  2039  003F                     	global	lcd_print@str
  2040                           lcd_print@str:	; 1 bytes @ 0x1
  2041  0040                     	global	___awdiv@sign
  2042                           ___awdiv@sign:	; 1 bytes @ 0x1
  2043  0040                     	ds	1
  2044  0040                     	global	lcd_print@pos
  2045                           lcd_print@pos:	; 1 bytes @ 0x2
  2046  0041                     	global	___awdiv@quotient
  2047                           ___awdiv@quotient:	; 2 bytes @ 0x2
  2048  0041                     	ds	1
  2049  0041                     	global	lcd_print@lin
  2050                           lcd_print@lin:	; 1 bytes @ 0x3
  2051  0042                     	ds	1
  2052  0042                     ?_lcd_num:	; 1 bytes @ 0x4
  2053  0043                     	global	lcd_num@col
  2054                           lcd_num@col:	; 1 bytes @ 0x4
  2055  0043                     	global	temporizar@t
  2056                           temporizar@t:	; 1 bytes @ 0x4
  2057  0043                     	ds	1
  2058  0043                     	global	lcd_num@num
  2059                           lcd_num@num:	; 2 bytes @ 0x5
  2060  0044                     	ds	2
  2061  0044                     	global	lcd_num@tam
  2062                           lcd_num@tam:	; 1 bytes @ 0x7
  2063  0046                     	ds	1
  2064  0046                     ??_lcd_num:	; 1 bytes @ 0x8
  2065  0047                     	ds	3
  2066  0047                     	global	lcd_num@lin
  2067                           lcd_num@lin:	; 1 bytes @ 0xB
  2068  004A                     	ds	1
  2069  004A                     	global	lcd_num@size
  2070                           lcd_num@size:	; 1 bytes @ 0xC
  2071  004B                     	ds	1
  2072  004B                     	global	lcd_num@sinal
  2073                           lcd_num@sinal:	; 1 bytes @ 0xD
  2074  004C                     	ds	1
  2075  004C                     	global	lcd_num@div
  2076                           lcd_num@div:	; 2 bytes @ 0xE
  2077  004D                     	ds	2
  2078  004D                     ??_main:	; 1 bytes @ 0x10
  2079  004F                     	ds	4
  2080  004F                     ;!
  2081                           ;!Data Sizes:
  2082                           ;!    Strings     17
  2083                           ;!    Constant    16
  2084                           ;!    Data        2
  2085                           ;!    BSS         32
  2086                           ;!    Persistent  0
  2087                           ;!    Stack       0
  2088                           ;!
  2089                           ;!Auto Spaces:
  2090                           ;!    Space          Size  Autos    Used
  2091                           ;!    COMMON           14      9      12
  2092                           ;!    BANK0            80     20      51
  2093                           ;!    BANK1            80      0       0
  2094                           ;!    BANK3            96      0       0
  2095                           ;!    BANK2            96      0       0
  2096                           
  2097                           ;!
  2098                           ;!Pointer List with Targets:
  2099                           ;!
  2100                           ;!    resetTemporizador@t	PTR struct temporizadorT size(1) Largest target is 24
  2101                           ;!		 -> tempo(BANK0[24]), 
  2102                           ;!
  2103                           ;!    habTemporizador@t	PTR struct temporizadorT size(1) Largest target is 24
  2104                           ;!		 -> tempo(BANK0[24]), 
  2105                           ;!
  2106                           ;!    temporizar@t	PTR struct temporizadorT size(1) Largest target is 24
  2107                           ;!		 -> tempo(BANK0[24]), 
  2108                           ;!
  2109                           ;!    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
  2110                           ;!		 -> STR_2(CODE[17]), STR_1(CODE[17]), 
  2111                           ;!
  2112                           
  2113                           
  2114                           ;!
  2115                           ;!Critical Paths under _main in COMMON
  2116                           ;!
  2117                           ;!    _main->_lcd_print
  2118                           ;!    _temporizar->___awmod
  2119                           ;!    _lcd_print->_lcd_lincol
  2120                           ;!    _lcd_num->___awmod
  2121                           ;!    _lcd_lincol->_lcd_instReg
  2122                           ;!    _lcd_init->_delay
  2123                           ;!    _lcd_init->_lcd_instReg
  2124                           ;!
  2125                           ;!Critical Paths under _isr in COMMON
  2126                           ;!
  2127                           ;!    None.
  2128                           ;!
  2129                           ;!Critical Paths under _main in BANK0
  2130                           ;!
  2131                           ;!    _main->_lcd_num
  2132                           ;!    _lcd_num->___awdiv
  2133                           ;!
  2134                           ;!Critical Paths under _isr in BANK0
  2135                           ;!
  2136                           ;!    None.
  2137                           ;!
  2138                           ;!Critical Paths under _main in BANK1
  2139                           ;!
  2140                           ;!    None.
  2141                           ;!
  2142                           ;!Critical Paths under _isr in BANK1
  2143                           ;!
  2144                           ;!    None.
  2145                           ;!
  2146                           ;!Critical Paths under _main in BANK3
  2147                           ;!
  2148                           ;!    None.
  2149                           ;!
  2150                           ;!Critical Paths under _isr in BANK3
  2151                           ;!
  2152                           ;!    None.
  2153                           ;!
  2154                           ;!Critical Paths under _main in BANK2
  2155                           ;!
  2156                           ;!    None.
  2157                           ;!
  2158                           ;!Critical Paths under _isr in BANK2
  2159                           ;!
  2160                           ;!    None.
  2161                           
  2162 ;;
  2163 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2164 ;;
  2165                           
  2166                           ;!
  2167                           ;!Call Graph Tables:
  2168                           ;!
  2169                           ;! ---------------------------------------------------------------------------------
  2170                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2171                           ;! ---------------------------------------------------------------------------------
  2172                           ;! (0) _main                                                 4     4      0    9530
  2173                           ;!                                             16 BANK0      4     4      0
  2174                           ;!                        _EEPROM_read
  2175                           ;!                       _EEPROM_write
  2176                           ;!                            _T0_init
  2177                           ;!                           _T0_start
  2178                           ;!                          _T0_status
  2179                           ;!                                 _b0
  2180                           ;!                                 _b1
  2181                           ;!                                 _b2
  2182                           ;!                                 _b3
  2183                           ;!                         _botao_init
  2184                           ;!                    _habTemporizador
  2185                           ;!                           _lcd_init
  2186                           ;!                            _lcd_num
  2187                           ;!                          _lcd_print
  2188                           ;!                  _resetTemporizador
  2189                           ;!                         _temporizar
  2190                           ;! ---------------------------------------------------------------------------------
  2191                           ;! (1) _temporizar                                           5     5      0    1638
  2192                           ;!                                              0 BANK0      5     5      0
  2193                           ;!                            ___awmod
  2194                           ;! ---------------------------------------------------------------------------------
  2195                           ;! (1) _resetTemporizador                                    1     1      0     195
  2196                           ;!                                              2 COMMON     1     1      0
  2197                           ;! ---------------------------------------------------------------------------------
  2198                           ;! (1) _lcd_print                                            5     3      2     940
  2199                           ;!                                              8 COMMON     1     1      0
  2200                           ;!                                              0 BANK0      4     2      2
  2201                           ;!                        _lcd_dataReg
  2202                           ;!                         _lcd_lincol
  2203                           ;! ---------------------------------------------------------------------------------
  2204                           ;! (1) _lcd_num                                             12     8      4    5541
  2205                           ;!                                              4 BANK0     12     8      4
  2206                           ;!                            ___awdiv
  2207                           ;!                            ___awmod
  2208                           ;!                        _lcd_dataReg
  2209                           ;!                         _lcd_lincol
  2210                           ;! ---------------------------------------------------------------------------------
  2211                           ;! (2) _lcd_lincol                                           3     2      1     372
  2212                           ;!                                              5 COMMON     3     2      1
  2213                           ;!                        _lcd_instReg
  2214                           ;! ---------------------------------------------------------------------------------
  2215                           ;! (2) _lcd_dataReg                                          3     3      0      44
  2216                           ;!                                              2 COMMON     3     3      0
  2217                           ;! ---------------------------------------------------------------------------------
  2218                           ;! (2) ___awmod                                              7     3      4    1153
  2219                           ;!                                              2 COMMON     7     3      4
  2220                           ;! ---------------------------------------------------------------------------------
  2221                           ;! (2) ___awdiv                                              9     5      4    1165
  2222                           ;!                                              2 COMMON     5     1      4
  2223                           ;!                                              0 BANK0      4     4      0
  2224                           ;! ---------------------------------------------------------------------------------
  2225                           ;! (1) _lcd_init                                             0     0      0     427
  2226                           ;!                              _delay
  2227                           ;!                        _lcd_instReg
  2228                           ;! ---------------------------------------------------------------------------------
  2229                           ;! (3) _lcd_instReg                                          3     3      0     176
  2230                           ;!                                              2 COMMON     3     3      0
  2231                           ;! ---------------------------------------------------------------------------------
  2232                           ;! (2) _delay                                                3     1      2     251
  2233                           ;!                                              2 COMMON     3     1      2
  2234                           ;! ---------------------------------------------------------------------------------
  2235                           ;! (1) _habTemporizador                                      3     2      1     480
  2236                           ;!                                              2 COMMON     3     2      1
  2237                           ;!                                 _b0 (ARG)
  2238                           ;!                                 _b1 (ARG)
  2239                           ;!                                 _b2 (ARG)
  2240                           ;!                                 _b3 (ARG)
  2241                           ;! ---------------------------------------------------------------------------------
  2242                           ;! (1) _botao_init                                           0     0      0       0
  2243                           ;! ---------------------------------------------------------------------------------
  2244                           ;! (1) _b3                                                   0     0      0       0
  2245                           ;! ---------------------------------------------------------------------------------
  2246                           ;! (1) _b2                                                   0     0      0       0
  2247                           ;! ---------------------------------------------------------------------------------
  2248                           ;! (1) _b1                                                   0     0      0       0
  2249                           ;! ---------------------------------------------------------------------------------
  2250                           ;! (1) _b0                                                   0     0      0       0
  2251                           ;! ---------------------------------------------------------------------------------
  2252                           ;! (1) _T0_status                                            2     0      2       0
  2253                           ;!                                              2 COMMON     2     0      2
  2254                           ;! ---------------------------------------------------------------------------------
  2255                           ;! (1) _T0_start                                             2     0      2     174
  2256                           ;!                                              2 COMMON     2     0      2
  2257                           ;! ---------------------------------------------------------------------------------
  2258                           ;! (1) _T0_init                                              0     0      0       0
  2259                           ;! ---------------------------------------------------------------------------------
  2260                           ;! (1) _EEPROM_write                                         2     1      1     120
  2261                           ;!                                              2 COMMON     2     1      1
  2262                           ;! ---------------------------------------------------------------------------------
  2263                           ;! (1) _EEPROM_read                                          1     1      0      15
  2264                           ;!                                              2 COMMON     1     1      0
  2265                           ;! ---------------------------------------------------------------------------------
  2266                           ;! Estimated maximum stack depth 3
  2267                           ;! ---------------------------------------------------------------------------------
  2268                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2269                           ;! ---------------------------------------------------------------------------------
  2270                           ;! (4) _isr                                                  2     2      0       0
  2271                           ;!                                              0 COMMON     2     2      0
  2272                           ;!                             _T0_int
  2273                           ;!                             _T1_int
  2274                           ;!                             _T2_int
  2275                           ;! ---------------------------------------------------------------------------------
  2276                           ;! (5) _T2_int                                               0     0      0       0
  2277                           ;! ---------------------------------------------------------------------------------
  2278                           ;! (5) _T1_int                                               0     0      0       0
  2279                           ;! ---------------------------------------------------------------------------------
  2280                           ;! (5) _T0_int                                               0     0      0       0
  2281                           ;! ---------------------------------------------------------------------------------
  2282                           ;! Estimated maximum stack depth 5
  2283                           ;! ---------------------------------------------------------------------------------
  2284                           ;!
  2285                           ;! Call Graph Graphs:
  2286                           ;!
  2287                           ;! _main (ROOT)
  2288                           ;!   _EEPROM_read
  2289                           ;!   _EEPROM_write
  2290                           ;!   _T0_init
  2291                           ;!   _T0_start
  2292                           ;!   _T0_status
  2293                           ;!   _b0
  2294                           ;!   _b1
  2295                           ;!   _b2
  2296                           ;!   _b3
  2297                           ;!   _botao_init
  2298                           ;!   _habTemporizador
  2299                           ;!     _b0 (ARG)
  2300                           ;!     _b1 (ARG)
  2301                           ;!     _b2 (ARG)
  2302                           ;!     _b3 (ARG)
  2303                           ;!   _lcd_init
  2304                           ;!     _delay
  2305                           ;!     _lcd_instReg
  2306                           ;!   _lcd_num
  2307                           ;!     ___awdiv
  2308                           ;!     ___awmod
  2309                           ;!     _lcd_dataReg
  2310                           ;!     _lcd_lincol
  2311                           ;!       _lcd_instReg
  2312                           ;!   _lcd_print
  2313                           ;!     _lcd_dataReg
  2314                           ;!     _lcd_lincol
  2315                           ;!       _lcd_instReg
  2316                           ;!   _resetTemporizador
  2317                           ;!   _temporizar
  2318                           ;!     ___awmod
  2319                           ;!
  2320                           ;! _isr (ROOT)
  2321                           ;!   _T0_int
  2322                           ;!   _T1_int
  2323                           ;!   _T2_int
  2324                           ;!
  2325                           
  2326                           ;! Address spaces:
  2327                           
  2328                           ;!Name               Size   Autos  Total    Cost      Usage
  2329                           ;!BANK3               60      0       0       9        0.0%
  2330                           ;!BITBANK3            60      0       0       8        0.0%
  2331                           ;!SFR3                 0      0       0       4        0.0%
  2332                           ;!BITSFR3              0      0       0       4        0.0%
  2333                           ;!BANK2               60      0       0      11        0.0%
  2334                           ;!BITBANK2            60      0       0      10        0.0%
  2335                           ;!SFR2                 0      0       0       5        0.0%
  2336                           ;!BITSFR2              0      0       0       5        0.0%
  2337                           ;!BANK1               50      0       0       7        0.0%
  2338                           ;!BITBANK1            50      0       0       6        0.0%
  2339                           ;!SFR1                 0      0       0       2        0.0%
  2340                           ;!BITSFR1              0      0       0       2        0.0%
  2341                           ;!BANK0               50     14      33       5       63.8%
  2342                           ;!BITBANK0            50      0       0       4        0.0%
  2343                           ;!SFR0                 0      0       0       1        0.0%
  2344                           ;!BITSFR0              0      0       0       1        0.0%
  2345                           ;!COMMON               E      9       C       1       85.7%
  2346                           ;!BITCOMMON            E      0       0       0        0.0%
  2347                           ;!CODE                 0      0       0       0        0.0%
  2348                           ;!DATA                 0      0      3F      12        0.0%
  2349                           ;!ABS                  0      0      3F       3        0.0%
  2350                           ;!NULL                 0      0       0       0        0.0%
  2351                           ;!STACK                0      0       0       2        0.0%
  2352                           ;!EEDATA             100      0       0       0        0.0%
  2353                           
  2354                           	global	_main
  2355                           
  2356 ;; *************** function _main *****************
  2357 ;; Defined at:
  2358 ;;		line 20 in file "main.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;		None
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;		None
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : B00/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2372 ;;      Params:         0       0       0       0       0
  2373 ;;      Locals:         0       0       0       0       0
  2374 ;;      Temps:          0       4       0       0       0
  2375 ;;      Totals:         0       4       0       0       0
  2376 ;;Total ram usage:        4 bytes
  2377 ;; Hardware stack levels required when called:    5
  2378 ;; This function calls:
  2379 ;;		_EEPROM_read
  2380 ;;		_EEPROM_write
  2381 ;;		_T0_init
  2382 ;;		_T0_start
  2383 ;;		_T0_status
  2384 ;;		_b0
  2385 ;;		_b1
  2386 ;;		_b2
  2387 ;;		_b3
  2388 ;;		_botao_init
  2389 ;;		_habTemporizador
  2390 ;;		_lcd_init
  2391 ;;		_lcd_num
  2392 ;;		_lcd_print
  2393 ;;		_resetTemporizador
  2394 ;;		_temporizar
  2395 ;; This function is called by:
  2396 ;;		Startup code after reset
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2400                           	file	"main.c"
  2401                           	line	20
  2402                           global __pmaintext
  2403                           __pmaintext:	;psect for function _main
  2404  0029                     psect	maintext
  2405                           	file	"main.c"
  2406                           	line	20
  2407                           	global	__size_of_main
  2408                           	__size_of_main	equ	__end_of_main-_main
  2409  018A                     	
  2410                           _main:	
  2411  0029                     ;incstack = 0
  2412                           	opt	stack 3
  2413                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2414                           	line	25
  2415                           	
  2416                           l2306:	
  2417  0029                     ;main.c: 25:     ANSEL = 1;
  2418                           	movlw	low(01h)
  2419  0029  3001               	bsf	status, 5	;RP0=1, select bank3
  2420  002A  1683               	bsf	status, 6	;RP1=1, select bank3
  2421  002B  1703               	movwf	(392)^0180h	;volatile
  2422  002C  0088               	line	26
  2423                           	
  2424                           l2308:	
  2425  002D                     ;main.c: 26:     lcd_init();
  2426                           	fcall	_lcd_init
  2427  002D  120A  118A  2483  120A  118A  	line	27
  2428                           	
  2429                           l2310:	
  2430  0032                     ;main.c: 27:     T0_init();
  2431                           	fcall	_T0_init
  2432  0032  120A  118A  25FC  120A  118A  	line	28
  2433                           	
  2434                           l2312:	
  2435  0037                     ;main.c: 28:     botao_init();
  2436                           	fcall	_botao_init
  2437  0037  120A  118A  2676  120A  118A  	line	31
  2438                           	
  2439                           l2314:	
  2440  003C                     ;main.c: 31:     lcd_print(0,0,"00:00      00:00");
  2441                           	bcf	status, 5	;RP0=0, select bank0
  2442  003C  1283               	bcf	status, 6	;RP1=0, select bank0
  2443  003D  1303               	clrf	(lcd_print@col)
  2444  003E  01BF               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2445  003F  3011               	movwf	(??_main+0)+0
  2446  0040  00CF               	movf	(??_main+0)+0,w
  2447  0041  084F               	movwf	(lcd_print@str)
  2448  0042  00C0               	movlw	low(0)
  2449  0043  3000               	fcall	_lcd_print
  2450  0044  120A  118A  24C2  120A  118A  	line	32
  2451                           	
  2452                           l2316:	
  2453  0049                     ;main.c: 32:     lcd_print(1,0,"00:00      00:00");
  2454                           	bcf	status, 5	;RP0=0, select bank0
  2455  0049  1283               	bcf	status, 6	;RP1=0, select bank0
  2456  004A  1303               	clrf	(lcd_print@col)
  2457  004B  01BF               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  2458  004C  3011               	movwf	(??_main+0)+0
  2459  004D  00CF               	movf	(??_main+0)+0,w
  2460  004E  084F               	movwf	(lcd_print@str)
  2461  004F  00C0               	movlw	low(01h)
  2462  0050  3001               	fcall	_lcd_print
  2463  0051  120A  118A  24C2  120A  118A  	line	34
  2464                           ;main.c: 34:     T0_start(1000);
  2465                           	movlw	0E8h
  2466  0056  30E8               	movwf	(T0_start@c)
  2467  0057  00F2               	movlw	03h
  2468  0058  3003               	movwf	((T0_start@c))+1
  2469  0059  00F3               	fcall	_T0_start
  2470  005A  120A  118A  2653  120A  118A  	line	35
  2471                           	
  2472                           l2318:	
  2473  005F                     ;main.c: 35:     resetTemporizador( &tempo[0] );
  2474                           	movlw	(low(_tempo|((0x0)<<8)))&0ffh
  2475  005F  3027               	fcall	_resetTemporizador
  2476  0060  120A  118A  2595  120A  118A  	line	36
  2477                           	
  2478                           l2320:	
  2479  0065                     ;main.c: 36:     resetTemporizador( &tempo[1] );
  2480                           	movlw	(low(_tempo|((0x0)<<8)+06h))&0ffh
  2481  0065  302D               	fcall	_resetTemporizador
  2482  0066  120A  118A  2595  120A  118A  	line	37
  2483                           	
  2484                           l2322:	
  2485  006B                     ;main.c: 37:     resetTemporizador( &tempo[2] );
  2486                           	movlw	(low(_tempo|((0x0)<<8)+0Ch))&0ffh
  2487  006B  3033               	fcall	_resetTemporizador
  2488  006C  120A  118A  2595  120A  118A  	line	38
  2489                           	
  2490                           l2324:	
  2491  0071                     ;main.c: 38:     resetTemporizador( &tempo[3] );
  2492                           	movlw	(low(_tempo|((0x0)<<8)+012h))&0ffh
  2493  0071  3039               	fcall	_resetTemporizador
  2494  0072  120A  118A  2595  120A  118A  	line	41
  2495                           	
  2496                           l2326:	
  2497  0077                     ;main.c: 41:     tempo[0].min = EEPROM_read( 0 );
  2498                           	movlw	low(0)
  2499  0077  3000               	fcall	_EEPROM_read
  2500  0078  120A  118A  261C  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2501  007D  1283               	bcf	status, 6	;RP1=0, select bank0
  2502  007E  1303               	movwf	(??_main+0)+0
  2503  007F  00CF               	movf	(??_main+0)+0,w
  2504  0080  084F               	movwf	0+(_tempo)+02h
  2505  0081  00A9               	goto	l2328
  2506  0082  2883               	line	52
  2507                           ;main.c: 52:     while( 1 )
  2508                           	
  2509                           l41:	
  2510  0083                     	line	54
  2511                           	
  2512                           l2328:	
  2513  0083                     ;main.c: 53:     {;main.c: 54:         habTemporizador( &tempo[0], b0() );
  2514                           	fcall	_b0
  2515  0083  120A  118A  2649  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2516  0088  1283               	bcf	status, 6	;RP1=0, select bank0
  2517  0089  1303               	movwf	(??_main+0)+0
  2518  008A  00CF               	movf	(??_main+0)+0,w
  2519  008B  084F               	movwf	(habTemporizador@h)
  2520  008C  00F2               	movlw	(low(_tempo|((0x0)<<8)))&0ffh
  2521  008D  3027               	fcall	_habTemporizador
  2522  008E  120A  118A  265D  120A  118A  	line	55
  2523                           	
  2524                           l2330:	
  2525  0093                     ;main.c: 55:         habTemporizador( &tempo[1], b1() );
  2526                           	fcall	_b1
  2527  0093  120A  118A  263F  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2528  0098  1283               	bcf	status, 6	;RP1=0, select bank0
  2529  0099  1303               	movwf	(??_main+0)+0
  2530  009A  00CF               	movf	(??_main+0)+0,w
  2531  009B  084F               	movwf	(habTemporizador@h)
  2532  009C  00F2               	movlw	(low(_tempo|((0x0)<<8)+06h))&0ffh
  2533  009D  302D               	fcall	_habTemporizador
  2534  009E  120A  118A  265D  120A  118A  	line	56
  2535                           	
  2536                           l2332:	
  2537  00A3                     ;main.c: 56:         habTemporizador( &tempo[2], b2() );
  2538                           	fcall	_b2
  2539  00A3  120A  118A  2635  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2540  00A8  1283               	bcf	status, 6	;RP1=0, select bank0
  2541  00A9  1303               	movwf	(??_main+0)+0
  2542  00AA  00CF               	movf	(??_main+0)+0,w
  2543  00AB  084F               	movwf	(habTemporizador@h)
  2544  00AC  00F2               	movlw	(low(_tempo|((0x0)<<8)+0Ch))&0ffh
  2545  00AD  3033               	fcall	_habTemporizador
  2546  00AE  120A  118A  265D  120A  118A  	line	57
  2547                           	
  2548                           l2334:	
  2549  00B3                     ;main.c: 57:         habTemporizador( &tempo[3], b3() );
  2550                           	fcall	_b3
  2551  00B3  120A  118A  262B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2552  00B8  1283               	bcf	status, 6	;RP1=0, select bank0
  2553  00B9  1303               	movwf	(??_main+0)+0
  2554  00BA  00CF               	movf	(??_main+0)+0,w
  2555  00BB  084F               	movwf	(habTemporizador@h)
  2556  00BC  00F2               	movlw	(low(_tempo|((0x0)<<8)+012h))&0ffh
  2557  00BD  3039               	fcall	_habTemporizador
  2558  00BE  120A  118A  265D  120A  118A  	line	59
  2559                           	
  2560                           l2336:	
  2561  00C3                     ;main.c: 59:         if( T0_status() == 0 )
  2562                           	fcall	_T0_status
  2563  00C3  120A  118A  266E  120A  118A  	movf	((0+(?_T0_status))),w
  2564  00C8  0872               iorwf	((1+(?_T0_status))),w
  2565  00C9  0473               	btfss	status,2
  2566  00CA  1D03               	goto	u1871
  2567  00CB  28CD               	goto	u1870
  2568  00CC  28CE               u1871:
  2569  00CD                     	goto	l2328
  2570  00CD  2883               u1870:
  2571  00CE                     	line	61
  2572                           	
  2573                           l2338:	
  2574  00CE                     ;main.c: 60:         {;main.c: 61:             T0_start(1000);
  2575                           	movlw	0E8h
  2576  00CE  30E8               	movwf	(T0_start@c)
  2577  00CF  00F2               	movlw	03h
  2578  00D0  3003               	movwf	((T0_start@c))+1
  2579  00D1  00F3               	fcall	_T0_start
  2580  00D2  120A  118A  2653  120A  118A  	line	63
  2581                           	
  2582                           l2340:	
  2583  00D7                     ;main.c: 63:             temporizar( &tempo[0] );
  2584                           	movlw	(low(_tempo|((0x0)<<8)))&0ffh
  2585  00D7  3027               	fcall	_temporizar
  2586  00D8  120A  118A  22A1  120A  118A  	line	64
  2587                           	
  2588                           l2342:	
  2589  00DD                     ;main.c: 64:             temporizar( &tempo[1] );
  2590                           	movlw	(low(_tempo|((0x0)<<8)+06h))&0ffh
  2591  00DD  302D               	fcall	_temporizar
  2592  00DE  120A  118A  22A1  120A  118A  	line	65
  2593                           	
  2594                           l2344:	
  2595  00E3                     ;main.c: 65:             temporizar( &tempo[2] );
  2596                           	movlw	(low(_tempo|((0x0)<<8)+0Ch))&0ffh
  2597  00E3  3033               	fcall	_temporizar
  2598  00E4  120A  118A  22A1  120A  118A  	line	66
  2599                           	
  2600                           l2346:	
  2601  00E9                     ;main.c: 66:             temporizar( &tempo[3] );
  2602                           	movlw	(low(_tempo|((0x0)<<8)+012h))&0ffh
  2603  00E9  3039               	fcall	_temporizar
  2604  00EA  120A  118A  22A1  120A  118A  	line	68
  2605                           	
  2606                           l2348:	
  2607  00EF                     ;main.c: 68:             lcd_num(0, 0, tempo[0].hor, 2);
  2608                           	bcf	status, 5	;RP0=0, select bank0
  2609  00EF  1283               	bcf	status, 6	;RP1=0, select bank0
  2610  00F0  1303               	clrf	(lcd_num@col)
  2611  00F1  01C3               	movf	0+(_tempo)+03h,w
  2612  00F2  082A               	movwf	(??_main+0)+0
  2613  00F3  00CF               	clrf	(??_main+0)+0+1
  2614  00F4  01D0               	movf	0+(??_main+0)+0,w
  2615  00F5  084F               	movwf	(lcd_num@num)
  2616  00F6  00C4               	movf	1+(??_main+0)+0,w
  2617  00F7  0850               	movwf	(lcd_num@num+1)
  2618  00F8  00C5               	movlw	low(02h)
  2619  00F9  3002               	movwf	(??_main+2)+0
  2620  00FA  00D1               	movf	(??_main+2)+0,w
  2621  00FB  0851               	movwf	(lcd_num@tam)
  2622  00FC  00C6               	movlw	low(0)
  2623  00FD  3000               	fcall	_lcd_num
  2624  00FE  120A  118A  21B3  120A  118A  	line	69
  2625                           	
  2626                           l2350:	
  2627  0103                     ;main.c: 69:             lcd_num(0, 3, tempo[0].min, 2);
  2628                           	movlw	low(03h)
  2629  0103  3003               	bcf	status, 5	;RP0=0, select bank0
  2630  0104  1283               	bcf	status, 6	;RP1=0, select bank0
  2631  0105  1303               	movwf	(??_main+0)+0
  2632  0106  00CF               	movf	(??_main+0)+0,w
  2633  0107  084F               	movwf	(lcd_num@col)
  2634  0108  00C3               	movf	0+(_tempo)+02h,w
  2635  0109  0829               	movwf	(??_main+1)+0
  2636  010A  00D0               	clrf	(??_main+1)+0+1
  2637  010B  01D1               	movf	0+(??_main+1)+0,w
  2638  010C  0850               	movwf	(lcd_num@num)
  2639  010D  00C4               	movf	1+(??_main+1)+0,w
  2640  010E  0851               	movwf	(lcd_num@num+1)
  2641  010F  00C5               	movlw	low(02h)
  2642  0110  3002               	movwf	(??_main+3)+0
  2643  0111  00D2               	movf	(??_main+3)+0,w
  2644  0112  0852               	movwf	(lcd_num@tam)
  2645  0113  00C6               	movlw	low(0)
  2646  0114  3000               	fcall	_lcd_num
  2647  0115  120A  118A  21B3  120A  118A  	line	70
  2648                           ;main.c: 70:             EEPROM_write(0, tempo[0].min );
  2649                           	bcf	status, 5	;RP0=0, select bank0
  2650  011A  1283               	bcf	status, 6	;RP1=0, select bank0
  2651  011B  1303               	movf	0+(_tempo)+02h,w
  2652  011C  0829               	movwf	(??_main+0)+0
  2653  011D  00CF               	movf	(??_main+0)+0,w
  2654  011E  084F               	movwf	(EEPROM_write@data)
  2655  011F  00F2               	movlw	low(0)
  2656  0120  3000               	fcall	_EEPROM_write
  2657  0121  120A  118A  257C  120A  118A  	line	72
  2658                           	
  2659                           l2352:	
  2660  0126                     ;main.c: 72:             lcd_num(0, 11, tempo[1].min, 2);
  2661                           	movlw	low(0Bh)
  2662  0126  300B               	bcf	status, 5	;RP0=0, select bank0
  2663  0127  1283               	bcf	status, 6	;RP1=0, select bank0
  2664  0128  1303               	movwf	(??_main+0)+0
  2665  0129  00CF               	movf	(??_main+0)+0,w
  2666  012A  084F               	movwf	(lcd_num@col)
  2667  012B  00C3               	movf	0+(_tempo)+08h,w
  2668  012C  082F               	movwf	(??_main+1)+0
  2669  012D  00D0               	clrf	(??_main+1)+0+1
  2670  012E  01D1               	movf	0+(??_main+1)+0,w
  2671  012F  0850               	movwf	(lcd_num@num)
  2672  0130  00C4               	movf	1+(??_main+1)+0,w
  2673  0131  0851               	movwf	(lcd_num@num+1)
  2674  0132  00C5               	movlw	low(02h)
  2675  0133  3002               	movwf	(??_main+3)+0
  2676  0134  00D2               	movf	(??_main+3)+0,w
  2677  0135  0852               	movwf	(lcd_num@tam)
  2678  0136  00C6               	movlw	low(0)
  2679  0137  3000               	fcall	_lcd_num
  2680  0138  120A  118A  21B3  120A  118A  	line	73
  2681                           	
  2682                           l2354:	
  2683  013D                     ;main.c: 73:             lcd_num(0, 14, tempo[1].seg, 2);
  2684                           	movlw	low(0Eh)
  2685  013D  300E               	bcf	status, 5	;RP0=0, select bank0
  2686  013E  1283               	bcf	status, 6	;RP1=0, select bank0
  2687  013F  1303               	movwf	(??_main+0)+0
  2688  0140  00CF               	movf	(??_main+0)+0,w
  2689  0141  084F               	movwf	(lcd_num@col)
  2690  0142  00C3               	movf	0+(_tempo)+07h,w
  2691  0143  082E               	movwf	(??_main+1)+0
  2692  0144  00D0               	clrf	(??_main+1)+0+1
  2693  0145  01D1               	movf	0+(??_main+1)+0,w
  2694  0146  0850               	movwf	(lcd_num@num)
  2695  0147  00C4               	movf	1+(??_main+1)+0,w
  2696  0148  0851               	movwf	(lcd_num@num+1)
  2697  0149  00C5               	movlw	low(02h)
  2698  014A  3002               	movwf	(??_main+3)+0
  2699  014B  00D2               	movf	(??_main+3)+0,w
  2700  014C  0852               	movwf	(lcd_num@tam)
  2701  014D  00C6               	movlw	low(0)
  2702  014E  3000               	fcall	_lcd_num
  2703  014F  120A  118A  21B3  120A  118A  	line	75
  2704                           	
  2705                           l2356:	
  2706  0154                     ;main.c: 75:             lcd_num(1, 0, tempo[2].min, 2);
  2707                           	bcf	status, 5	;RP0=0, select bank0
  2708  0154  1283               	bcf	status, 6	;RP1=0, select bank0
  2709  0155  1303               	clrf	(lcd_num@col)
  2710  0156  01C3               	movf	0+(_tempo)+0Eh,w
  2711  0157  0835               	movwf	(??_main+0)+0
  2712  0158  00CF               	clrf	(??_main+0)+0+1
  2713  0159  01D0               	movf	0+(??_main+0)+0,w
  2714  015A  084F               	movwf	(lcd_num@num)
  2715  015B  00C4               	movf	1+(??_main+0)+0,w
  2716  015C  0850               	movwf	(lcd_num@num+1)
  2717  015D  00C5               	movlw	low(02h)
  2718  015E  3002               	movwf	(??_main+2)+0
  2719  015F  00D1               	movf	(??_main+2)+0,w
  2720  0160  0851               	movwf	(lcd_num@tam)
  2721  0161  00C6               	movlw	low(01h)
  2722  0162  3001               	fcall	_lcd_num
  2723  0163  120A  118A  21B3  120A  118A  	line	76
  2724                           	
  2725                           l2358:	
  2726  0168                     ;main.c: 76:             lcd_num(1, 3, tempo[2].seg, 2);
  2727                           	movlw	low(03h)
  2728  0168  3003               	bcf	status, 5	;RP0=0, select bank0
  2729  0169  1283               	bcf	status, 6	;RP1=0, select bank0
  2730  016A  1303               	movwf	(??_main+0)+0
  2731  016B  00CF               	movf	(??_main+0)+0,w
  2732  016C  084F               	movwf	(lcd_num@col)
  2733  016D  00C3               	movf	0+(_tempo)+0Dh,w
  2734  016E  0834               	movwf	(??_main+1)+0
  2735  016F  00D0               	clrf	(??_main+1)+0+1
  2736  0170  01D1               	movf	0+(??_main+1)+0,w
  2737  0171  0850               	movwf	(lcd_num@num)
  2738  0172  00C4               	movf	1+(??_main+1)+0,w
  2739  0173  0851               	movwf	(lcd_num@num+1)
  2740  0174  00C5               	movlw	low(02h)
  2741  0175  3002               	movwf	(??_main+3)+0
  2742  0176  00D2               	movf	(??_main+3)+0,w
  2743  0177  0852               	movwf	(lcd_num@tam)
  2744  0178  00C6               	movlw	low(01h)
  2745  0179  3001               	fcall	_lcd_num
  2746  017A  120A  118A  21B3  120A  118A  	line	78
  2747                           	
  2748                           l2360:	
  2749  017F                     ;main.c: 78:             lcd_num(1, 11, tempo[3].min, 2);
  2750                           	movlw	low(0Bh)
  2751  017F  300B               	bcf	status, 5	;RP0=0, select bank0
  2752  0180  1283               	bcf	status, 6	;RP1=0, select bank0
  2753  0181  1303               	movwf	(??_main+0)+0
  2754  0182  00CF               	movf	(??_main+0)+0,w
  2755  0183  084F               	movwf	(lcd_num@col)
  2756  0184  00C3               	movf	0+(_tempo)+014h,w
  2757  0185  083B               	movwf	(??_main+1)+0
  2758  0186  00D0               	clrf	(??_main+1)+0+1
  2759  0187  01D1               	movf	0+(??_main+1)+0,w
  2760  0188  0850               	movwf	(lcd_num@num)
  2761  0189  00C4               	movf	1+(??_main+1)+0,w
  2762  018A  0851               	movwf	(lcd_num@num+1)
  2763  018B  00C5               	movlw	low(02h)
  2764  018C  3002               	movwf	(??_main+3)+0
  2765  018D  00D2               	movf	(??_main+3)+0,w
  2766  018E  0852               	movwf	(lcd_num@tam)
  2767  018F  00C6               	movlw	low(01h)
  2768  0190  3001               	fcall	_lcd_num
  2769  0191  120A  118A  21B3  120A  118A  	line	79
  2770                           	
  2771                           l2362:	
  2772  0196                     ;main.c: 79:             lcd_num(1, 14, tempo[3].seg, 2);
  2773                           	movlw	low(0Eh)
  2774  0196  300E               	bcf	status, 5	;RP0=0, select bank0
  2775  0197  1283               	bcf	status, 6	;RP1=0, select bank0
  2776  0198  1303               	movwf	(??_main+0)+0
  2777  0199  00CF               	movf	(??_main+0)+0,w
  2778  019A  084F               	movwf	(lcd_num@col)
  2779  019B  00C3               	movf	0+(_tempo)+013h,w
  2780  019C  083A               	movwf	(??_main+1)+0
  2781  019D  00D0               	clrf	(??_main+1)+0+1
  2782  019E  01D1               	movf	0+(??_main+1)+0,w
  2783  019F  0850               	movwf	(lcd_num@num)
  2784  01A0  00C4               	movf	1+(??_main+1)+0,w
  2785  01A1  0851               	movwf	(lcd_num@num+1)
  2786  01A2  00C5               	movlw	low(02h)
  2787  01A3  3002               	movwf	(??_main+3)+0
  2788  01A4  00D2               	movf	(??_main+3)+0,w
  2789  01A5  0852               	movwf	(lcd_num@tam)
  2790  01A6  00C6               	movlw	low(01h)
  2791  01A7  3001               	fcall	_lcd_num
  2792  01A8  120A  118A  21B3  120A  118A  	goto	l2328
  2793  01AD  2883               	line	81
  2794                           ;main.c: 81:         }
  2795                           	
  2796                           l42:	
  2797  01AE                     	goto	l2328
  2798  01AE  2883               	line	82
  2799                           ;main.c: 82:     }
  2800                           	
  2801                           l43:	
  2802  01AF                     	goto	l2328
  2803  01AF  2883               	
  2804                           l44:	
  2805  01B0                     	line	83
  2806                           	
  2807                           l45:	
  2808  01B0                     	global	start
  2809                           	ljmp	start
  2810  01B0  120A  118A  280C   	opt stack 0
  2811                           GLOBAL	__end_of_main
  2812                           	__end_of_main:
  2813  01B3                     	signat	_main,89
  2814                           	global	_temporizar
  2815                           
  2816 ;; *************** function _temporizar *****************
  2817 ;; Defined at:
  2818 ;;		line 14 in file "tempo.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  t               1    wreg     PTR struct temporizadorT
  2821 ;;		 -> tempo(24), 
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;  t               1    4[BANK0 ] PTR struct temporizadorT
  2824 ;;		 -> tempo(24), 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2834 ;;      Params:         0       0       0       0       0
  2835 ;;      Locals:         0       1       0       0       0
  2836 ;;      Temps:          0       4       0       0       0
  2837 ;;      Totals:         0       5       0       0       0
  2838 ;;Total ram usage:        5 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    3
  2841 ;; This function calls:
  2842 ;;		___awmod
  2843 ;; This function is called by:
  2844 ;;		_main
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2848                           	file	"tempo.c"
  2849                           	line	14
  2850                           global __ptext1
  2851                           __ptext1:	;psect for function _temporizar
  2852  02A1                     psect	text1
  2853                           	file	"tempo.c"
  2854                           	line	14
  2855                           	global	__size_of_temporizar
  2856                           	__size_of_temporizar	equ	__end_of_temporizar-_temporizar
  2857  0090                     	
  2858                           _temporizar:	
  2859  02A1                     ;incstack = 0
  2860                           	opt	stack 4
  2861                           ; Regs used in _temporizar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2862                           ;temporizar@t stored from wreg
  2863                           	bcf	status, 5	;RP0=0, select bank0
  2864  02A1  1283               	bcf	status, 6	;RP1=0, select bank0
  2865  02A2  1303               	movwf	(temporizar@t)
  2866  02A3  00C3               	line	16
  2867                           	
  2868                           l2256:	
  2869  02A4                     ;tempo.c: 14: void temporizar( struct temporizadorT * t );tempo.c: 15: {;tempo.c: 16:   
                                   if( t->hab )
  2870                           	movf	(temporizar@t),w
  2871  02A4  0843               	movwf	fsr0
  2872  02A5  0084               	bcf	status, 7	;select IRP bank0
  2873  02A6  1383               	movf	(indf),w
  2874  02A7  0800               	btfsc	status,2
  2875  02A8  1903               	goto	u1741
  2876  02A9  2AAB               	goto	u1740
  2877  02AA  2AAC               u1741:
  2878  02AB                     	goto	l218
  2879  02AB  2B30               u1740:
  2880  02AC                     	line	18
  2881                           	
  2882                           l2258:	
  2883  02AC                     ;tempo.c: 17:     {;tempo.c: 18:         t->seg = ++t->seg % 60;
  2884                           	movlw	03Ch
  2885  02AC  303C               	movwf	(___awmod@divisor)
  2886  02AD  00F2               	movlw	0
  2887  02AE  3000               	movwf	((___awmod@divisor))+1
  2888  02AF  00F3               	movlw	low(01h)
  2889  02B0  3001               	movwf	(??_temporizar+0)+0
  2890  02B1  00BF               	incf	(temporizar@t),w
  2891  02B2  0A43               	movwf	fsr0
  2892  02B3  0084               	movf	(??_temporizar+0)+0,w
  2893  02B4  083F               	addwf	indf,f
  2894  02B5  0780               	movf	(indf),w
  2895  02B6  0800               	movwf	(??_temporizar+1)+0
  2896  02B7  00C0               	clrf	(??_temporizar+1)+0+1
  2897  02B8  01C1               	movf	0+(??_temporizar+1)+0,w
  2898  02B9  0840               	movwf	(___awmod@dividend)
  2899  02BA  00F4               	movf	1+(??_temporizar+1)+0,w
  2900  02BB  0841               	movwf	(___awmod@dividend+1)
  2901  02BC  00F5               	fcall	___awmod
  2902  02BD  120A  118A  2420  120A  118A  	movf	(0+(?___awmod)),w
  2903  02C2  0872               	bcf	status, 5	;RP0=0, select bank0
  2904  02C3  1283               	bcf	status, 6	;RP1=0, select bank0
  2905  02C4  1303               	movwf	(??_temporizar+3)+0
  2906  02C5  00C2               	incf	(temporizar@t),w
  2907  02C6  0A43               	movwf	fsr0
  2908  02C7  0084               	movf	(??_temporizar+3)+0,w
  2909  02C8  0842               	bcf	status, 7	;select IRP bank0
  2910  02C9  1383               	movwf	indf
  2911  02CA  0080               	line	19
  2912                           	
  2913                           l2260:	
  2914  02CB                     ;tempo.c: 19:         if( t->seg == 0 )
  2915                           	incf	(temporizar@t),w
  2916  02CB  0A43               	movwf	fsr0
  2917  02CC  0084               	movf	(indf),w
  2918  02CD  0800               	btfss	status,2
  2919  02CE  1D03               	goto	u1751
  2920  02CF  2AD1               	goto	u1750
  2921  02D0  2AD2               u1751:
  2922  02D1                     	goto	l218
  2923  02D1  2B30               u1750:
  2924  02D2                     	line	21
  2925                           	
  2926                           l2262:	
  2927  02D2                     ;tempo.c: 20:         {;tempo.c: 21:             t->min = ++t->min % 60;
  2928                           	movlw	03Ch
  2929  02D2  303C               	movwf	(___awmod@divisor)
  2930  02D3  00F2               	movlw	0
  2931  02D4  3000               	movwf	((___awmod@divisor))+1
  2932  02D5  00F3               	movlw	low(01h)
  2933  02D6  3001               	movwf	(??_temporizar+0)+0
  2934  02D7  00BF               	movf	(temporizar@t),w
  2935  02D8  0843               	addlw	02h
  2936  02D9  3E02               	movwf	fsr0
  2937  02DA  0084               	movf	(??_temporizar+0)+0,w
  2938  02DB  083F               	addwf	indf,f
  2939  02DC  0780               	movf	(indf),w
  2940  02DD  0800               	movwf	(??_temporizar+1)+0
  2941  02DE  00C0               	clrf	(??_temporizar+1)+0+1
  2942  02DF  01C1               	movf	0+(??_temporizar+1)+0,w
  2943  02E0  0840               	movwf	(___awmod@dividend)
  2944  02E1  00F4               	movf	1+(??_temporizar+1)+0,w
  2945  02E2  0841               	movwf	(___awmod@dividend+1)
  2946  02E3  00F5               	fcall	___awmod
  2947  02E4  120A  118A  2420  120A  118A  	movf	(0+(?___awmod)),w
  2948  02E9  0872               	bcf	status, 5	;RP0=0, select bank0
  2949  02EA  1283               	bcf	status, 6	;RP1=0, select bank0
  2950  02EB  1303               	movwf	(??_temporizar+3)+0
  2951  02EC  00C2               	movf	(temporizar@t),w
  2952  02ED  0843               	addlw	02h
  2953  02EE  3E02               	movwf	fsr0
  2954  02EF  0084               	movf	(??_temporizar+3)+0,w
  2955  02F0  0842               	bcf	status, 7	;select IRP bank0
  2956  02F1  1383               	movwf	indf
  2957  02F2  0080               	line	22
  2958                           	
  2959                           l2264:	
  2960  02F3                     ;tempo.c: 22:             if( t->min == 0 )
  2961                           	movf	(temporizar@t),w
  2962  02F3  0843               	addlw	02h
  2963  02F4  3E02               	movwf	fsr0
  2964  02F5  0084               	movf	(indf),w
  2965  02F6  0800               	btfss	status,2
  2966  02F7  1D03               	goto	u1761
  2967  02F8  2AFA               	goto	u1760
  2968  02F9  2AFB               u1761:
  2969  02FA                     	goto	l218
  2970  02FA  2B30               u1760:
  2971  02FB                     	line	24
  2972                           	
  2973                           l2266:	
  2974  02FB                     ;tempo.c: 23:             {;tempo.c: 24:                 t->hor = ++t->hor % 24;
  2975                           	movlw	018h
  2976  02FB  3018               	movwf	(___awmod@divisor)
  2977  02FC  00F2               	movlw	0
  2978  02FD  3000               	movwf	((___awmod@divisor))+1
  2979  02FE  00F3               	movlw	low(01h)
  2980  02FF  3001               	movwf	(??_temporizar+0)+0
  2981  0300  00BF               	movf	(temporizar@t),w
  2982  0301  0843               	addlw	03h
  2983  0302  3E03               	movwf	fsr0
  2984  0303  0084               	movf	(??_temporizar+0)+0,w
  2985  0304  083F               	addwf	indf,f
  2986  0305  0780               	movf	(indf),w
  2987  0306  0800               	movwf	(??_temporizar+1)+0
  2988  0307  00C0               	clrf	(??_temporizar+1)+0+1
  2989  0308  01C1               	movf	0+(??_temporizar+1)+0,w
  2990  0309  0840               	movwf	(___awmod@dividend)
  2991  030A  00F4               	movf	1+(??_temporizar+1)+0,w
  2992  030B  0841               	movwf	(___awmod@dividend+1)
  2993  030C  00F5               	fcall	___awmod
  2994  030D  120A  118A  2420  120A  118A  	movf	(0+(?___awmod)),w
  2995  0312  0872               	bcf	status, 5	;RP0=0, select bank0
  2996  0313  1283               	bcf	status, 6	;RP1=0, select bank0
  2997  0314  1303               	movwf	(??_temporizar+3)+0
  2998  0315  00C2               	movf	(temporizar@t),w
  2999  0316  0843               	addlw	03h
  3000  0317  3E03               	movwf	fsr0
  3001  0318  0084               	movf	(??_temporizar+3)+0,w
  3002  0319  0842               	bcf	status, 7	;select IRP bank0
  3003  031A  1383               	movwf	indf
  3004  031B  0080               	line	26
  3005                           	
  3006                           l2268:	
  3007  031C                     ;tempo.c: 26:                 if(t->hor == 0)
  3008                           	movf	(temporizar@t),w
  3009  031C  0843               	addlw	03h
  3010  031D  3E03               	movwf	fsr0
  3011  031E  0084               	movf	(indf),w
  3012  031F  0800               	btfss	status,2
  3013  0320  1D03               	goto	u1771
  3014  0321  2B23               	goto	u1770
  3015  0322  2B24               u1771:
  3016  0323                     	goto	l218
  3017  0323  2B30               u1770:
  3018  0324                     	line	28
  3019                           	
  3020                           l2270:	
  3021  0324                     ;tempo.c: 27:                 {;tempo.c: 28:                     t->dia++;
  3022                           	movf	(temporizar@t),w
  3023  0324  0843               	addlw	04h
  3024  0325  3E04               	movwf	fsr0
  3025  0326  0084               	movlw	01h
  3026  0327  3001               	addwf	indf,f
  3027  0328  0780               	incf	fsr0,f
  3028  0329  0A84               	skipnc
  3029  032A  1803               	incf	indf,f
  3030  032B  0A80               	goto	l218
  3031  032C  2B30               	line	29
  3032                           ;tempo.c: 29:                 }
  3033                           	
  3034                           l217:	
  3035  032D                     	goto	l218
  3036  032D  2B30               	line	30
  3037                           ;tempo.c: 30:             }
  3038                           	
  3039                           l216:	
  3040  032E                     	goto	l218
  3041  032E  2B30               	line	31
  3042                           ;tempo.c: 31:         }
  3043                           	
  3044                           l215:	
  3045  032F                     	goto	l218
  3046  032F  2B30               	line	32
  3047                           ;tempo.c: 32:     }
  3048                           	
  3049                           l214:	
  3050  0330                     	line	33
  3051                           	
  3052                           l218:	
  3053  0330                     	return
  3054  0330  0008               	opt stack 0
  3055                           GLOBAL	__end_of_temporizar
  3056                           	__end_of_temporizar:
  3057  0331                     	signat	_temporizar,4217
  3058                           	global	_resetTemporizador
  3059                           
  3060 ;; *************** function _resetTemporizador *****************
  3061 ;; Defined at:
  3062 ;;		line 41 in file "tempo.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  t               1    wreg     PTR struct temporizadorT
  3065 ;;		 -> tempo(24), 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  t               1    2[COMMON] PTR struct temporizadorT
  3068 ;;		 -> tempo(24), 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3078 ;;      Params:         0       0       0       0       0
  3079 ;;      Locals:         1       0       0       0       0
  3080 ;;      Temps:          0       0       0       0       0
  3081 ;;      Totals:         1       0       0       0       0
  3082 ;;Total ram usage:        1 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    2
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		_main
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3092                           	line	41
  3093                           global __ptext2
  3094                           __ptext2:	;psect for function _resetTemporizador
  3095  0595                     psect	text2
  3096                           	file	"tempo.c"
  3097                           	line	41
  3098                           	global	__size_of_resetTemporizador
  3099                           	__size_of_resetTemporizador	equ	__end_of_resetTemporizador-_resetTemporizador
  3100  0017                     	
  3101                           _resetTemporizador:	
  3102  0595                     ;incstack = 0
  3103                           	opt	stack 5
  3104                           ; Regs used in _resetTemporizador: [wreg-fsr0h+status,2+status,0]
  3105                           ;resetTemporizador@t stored from wreg
  3106                           	movwf	(resetTemporizador@t)
  3107  0595  00F2               	line	43
  3108                           	
  3109                           l1294:	
  3110  0596                     ;tempo.c: 41: void resetTemporizador( struct temporizadorT * t );tempo.c: 42: {;tempo.c:
                                  43:     t->hab = 0;
  3111                           	movf	(resetTemporizador@t),w
  3112  0596  0872               	movwf	fsr0
  3113  0597  0084               	bcf	status, 7	;select IRP bank0
  3114  0598  1383               	clrf	indf
  3115  0599  0180               	line	44
  3116                           ;tempo.c: 44:     t->seg = 0;
  3117                           	incf	(resetTemporizador@t),w
  3118  059A  0A72               	movwf	fsr0
  3119  059B  0084               	clrf	indf
  3120  059C  0180               	line	45
  3121                           	
  3122                           l1296:	
  3123  059D                     ;tempo.c: 45:     t->min = 0;
  3124                           	movf	(resetTemporizador@t),w
  3125  059D  0872               	addlw	02h
  3126  059E  3E02               	movwf	fsr0
  3127  059F  0084               	clrf	indf
  3128  05A0  0180               	line	46
  3129                           	
  3130                           l1298:	
  3131  05A1                     ;tempo.c: 46:     t->hor = 0;
  3132                           	movf	(resetTemporizador@t),w
  3133  05A1  0872               	addlw	03h
  3134  05A2  3E03               	movwf	fsr0
  3135  05A3  0084               	clrf	indf
  3136  05A4  0180               	line	47
  3137                           	
  3138                           l1300:	
  3139  05A5                     ;tempo.c: 47:     t->dia = 0;
  3140                           	movf	(resetTemporizador@t),w
  3141  05A5  0872               	addlw	04h
  3142  05A6  3E04               	movwf	fsr0
  3143  05A7  0084               	clrf	indf
  3144  05A8  0180               	incf	fsr0,f
  3145  05A9  0A84               	clrf	indf
  3146  05AA  0180               	line	48
  3147                           	
  3148                           l224:	
  3149  05AB                     	return
  3150  05AB  0008               	opt stack 0
  3151                           GLOBAL	__end_of_resetTemporizador
  3152                           	__end_of_resetTemporizador:
  3153  05AC                     	signat	_resetTemporizador,4217
  3154                           	global	_lcd_print
  3155                           
  3156 ;; *************** function _lcd_print *****************
  3157 ;; Defined at:
  3158 ;;		line 158 in file "lcd.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  lin             1    wreg     unsigned char 
  3161 ;;  col             1    0[BANK0 ] unsigned char 
  3162 ;;  str             1    1[BANK0 ] PTR const unsigned char 
  3163 ;;		 -> STR_2(17), STR_1(17), 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;  lin             1    3[BANK0 ] unsigned char 
  3166 ;;  pos             1    2[BANK0 ] unsigned char 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3176 ;;      Params:         0       2       0       0       0
  3177 ;;      Locals:         0       2       0       0       0
  3178 ;;      Temps:          1       0       0       0       0
  3179 ;;      Totals:         1       4       0       0       0
  3180 ;;Total ram usage:        5 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; Hardware stack levels required when called:    4
  3183 ;; This function calls:
  3184 ;;		_lcd_dataReg
  3185 ;;		_lcd_lincol
  3186 ;; This function is called by:
  3187 ;;		_main
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3191                           	file	"lcd.c"
  3192                           	line	158
  3193                           global __ptext3
  3194                           __ptext3:	;psect for function _lcd_print
  3195  04C2                     psect	text3
  3196                           	file	"lcd.c"
  3197                           	line	158
  3198                           	global	__size_of_lcd_print
  3199                           	__size_of_lcd_print	equ	__end_of_lcd_print-_lcd_print
  3200  003B                     	
  3201                           _lcd_print:	
  3202  04C2                     ;incstack = 0
  3203                           	opt	stack 3
  3204                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3205                           ;lcd_print@lin stored from wreg
  3206                           	bcf	status, 5	;RP0=0, select bank0
  3207  04C2  1283               	bcf	status, 6	;RP1=0, select bank0
  3208  04C3  1303               	movwf	(lcd_print@lin)
  3209  04C4  00C2               	line	160
  3210                           	
  3211                           l2244:	
  3212  04C5                     ;lcd.c: 158: void lcd_print( unsigned char lin, unsigned char col, const char * str );lc
                                 d.c: 159: {;lcd.c: 160:     char pos = col;
  3213                           	movf	(lcd_print@col),w
  3214  04C5  083F               	movwf	(??_lcd_print+0)+0
  3215  04C6  00F8               	movf	(??_lcd_print+0)+0,w
  3216  04C7  0878               	movwf	(lcd_print@pos)
  3217  04C8  00C1               	line	161
  3218                           	
  3219                           l2246:	
  3220  04C9                     ;lcd.c: 161:     lcd_lincol( lin, col );
  3221                           	movf	(lcd_print@col),w
  3222  04C9  083F               	movwf	(??_lcd_print+0)+0
  3223  04CA  00F8               	movf	(??_lcd_print+0)+0,w
  3224  04CB  0878               	movwf	(lcd_lincol@col)
  3225  04CC  00F5               	movf	(lcd_print@lin),w
  3226  04CD  0842               	fcall	_lcd_lincol
  3227  04CE  120A  118A  25D7  120A  118A  	line	163
  3228                           ;lcd.c: 163:     while( *str )
  3229                           	goto	l2254
  3230  04D3  2CED               	
  3231                           l192:	
  3232  04D4                     	line	165
  3233                           	
  3234                           l2248:	
  3235  04D4                     ;lcd.c: 164:     {;lcd.c: 165:         lcd_dataReg( *str );
  3236                           	bcf	status, 5	;RP0=0, select bank0
  3237  04D4  1283               	bcf	status, 6	;RP1=0, select bank0
  3238  04D5  1303               	movf	(lcd_print@str),w
  3239  04D6  0840               	movwf	fsr0
  3240  04D7  0084               	fcall	stringdir
  3241  04D8  120A  118A  2555  120A  118A  	fcall	_lcd_dataReg
  3242  04DD  120A  118A  24FD  120A  118A  	line	166
  3243                           	
  3244                           l2250:	
  3245  04E2                     ;lcd.c: 166:         ++str;
  3246                           	movlw	low(01h)
  3247  04E2  3001               	movwf	(??_lcd_print+0)+0
  3248  04E3  00F8               	movf	(??_lcd_print+0)+0,w
  3249  04E4  0878               	bcf	status, 5	;RP0=0, select bank0
  3250  04E5  1283               	bcf	status, 6	;RP1=0, select bank0
  3251  04E6  1303               	addwf	(lcd_print@str),f
  3252  04E7  07C0               	line	167
  3253                           	
  3254                           l2252:	
  3255  04E8                     ;lcd.c: 167:         ++pos;
  3256                           	movlw	low(01h)
  3257  04E8  3001               	movwf	(??_lcd_print+0)+0
  3258  04E9  00F8               	movf	(??_lcd_print+0)+0,w
  3259  04EA  0878               	addwf	(lcd_print@pos),f
  3260  04EB  07C1               	goto	l2254
  3261  04EC  2CED               	line	168
  3262                           ;lcd.c: 168:     }
  3263                           	
  3264                           l191:	
  3265  04ED                     	line	163
  3266                           	
  3267                           l2254:	
  3268  04ED                     ;lcd.c: 163:     while( *str )
  3269                           	bcf	status, 5	;RP0=0, select bank0
  3270  04ED  1283               	bcf	status, 6	;RP1=0, select bank0
  3271  04EE  1303               	movf	(lcd_print@str),w
  3272  04EF  0840               	movwf	fsr0
  3273  04F0  0084               	fcall	stringdir
  3274  04F1  120A  118A  2555  120A  118A  	xorlw	0
  3275  04F6  3A00               	skipz
  3276  04F7  1D03               	goto	u1731
  3277  04F8  2CFA               	goto	u1730
  3278  04F9  2CFB               u1731:
  3279  04FA                     	goto	l2248
  3280  04FA  2CD4               u1730:
  3281  04FB                     	goto	l194
  3282  04FB  2CFC               	
  3283                           l193:	
  3284  04FC                     	line	169
  3285                           	
  3286                           l194:	
  3287  04FC                     	return
  3288  04FC  0008               	opt stack 0
  3289                           GLOBAL	__end_of_lcd_print
  3290                           	__end_of_lcd_print:
  3291  04FD                     	signat	_lcd_print,12409
  3292                           	global	_lcd_num
  3293                           
  3294 ;; *************** function _lcd_num *****************
  3295 ;; Defined at:
  3296 ;;		line 180 in file "lcd.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;  lin             1    wreg     unsigned char 
  3299 ;;  col             1    4[BANK0 ] unsigned char 
  3300 ;;  num             2    5[BANK0 ] int 
  3301 ;;  tam             1    7[BANK0 ] unsigned char 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  lin             1   11[BANK0 ] unsigned char 
  3304 ;;  div             2   14[BANK0 ] int 
  3305 ;;  sinal           1   13[BANK0 ] unsigned char 
  3306 ;;  size            1   12[BANK0 ] unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         0       4       0       0       0
  3317 ;;      Locals:         0       5       0       0       0
  3318 ;;      Temps:          0       3       0       0       0
  3319 ;;      Totals:         0      12       0       0       0
  3320 ;;Total ram usage:       12 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    4
  3323 ;; This function calls:
  3324 ;;		___awdiv
  3325 ;;		___awmod
  3326 ;;		_lcd_dataReg
  3327 ;;		_lcd_lincol
  3328 ;; This function is called by:
  3329 ;;		_main
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3333                           	line	180
  3334                           global __ptext4
  3335                           __ptext4:	;psect for function _lcd_num
  3336  01B3                     psect	text4
  3337                           	file	"lcd.c"
  3338                           	line	180
  3339                           	global	__size_of_lcd_num
  3340                           	__size_of_lcd_num	equ	__end_of_lcd_num-_lcd_num
  3341  00EE                     	
  3342                           _lcd_num:	
  3343  01B3                     ;incstack = 0
  3344                           	opt	stack 3
  3345                           ; Regs used in _lcd_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3346                           ;lcd_num@lin stored from wreg
  3347                           	bcf	status, 5	;RP0=0, select bank0
  3348  01B3  1283               	bcf	status, 6	;RP1=0, select bank0
  3349  01B4  1303               	movwf	(lcd_num@lin)
  3350  01B5  00CA               	line	187
  3351                           	
  3352                           l2272:	
  3353  01B6                     ;lcd.c: 180: void lcd_num( unsigned char lin, unsigned char col,;lcd.c: 181:            
                                          int num, unsigned char tam );lcd.c: 182: {;lcd.c: 183:     int div;;lcd.c: 184:
                                      unsigned char size;;lcd.c: 185:     char sinal;;lcd.c: 187:     sinal = num < 0;
  3354                           	btfsc	(lcd_num@num+1),7
  3355  01B6  1BC5               	goto	u1781
  3356  01B7  29B9               	goto	u1780
  3357  01B8  29BB               u1781:
  3358  01B9                     	movlw	1
  3359  01B9  3001               	goto	u1790
  3360  01BA  29BC               u1780:
  3361  01BB                     	movlw	0
  3362  01BB  3000               u1790:
  3363  01BC                     	movwf	(??_lcd_num+0)+0
  3364  01BC  00C7               	movf	(??_lcd_num+0)+0,w
  3365  01BD  0847               	movwf	(lcd_num@sinal)
  3366  01BE  00CC               	line	188
  3367                           	
  3368                           l2274:	
  3369  01BF                     ;lcd.c: 188:     if( sinal )
  3370                           	movf	((lcd_num@sinal)),w
  3371  01BF  084C               	btfsc	status,2
  3372  01C0  1903               	goto	u1801
  3373  01C1  29C3               	goto	u1800
  3374  01C2  29C4               u1801:
  3375  01C3                     	goto	l2278
  3376  01C3  29CA               u1800:
  3377  01C4                     	line	189
  3378                           	
  3379                           l2276:	
  3380  01C4                     ;lcd.c: 189:         num = (~num) + 1;
  3381                           	comf	(lcd_num@num),f
  3382  01C4  09C4               	comf	(lcd_num@num+1),f
  3383  01C5  09C5               	incf	(lcd_num@num),f
  3384  01C6  0AC4               	skipnz
  3385  01C7  1903               	incf	(lcd_num@num+1),f
  3386  01C8  0AC5               	goto	l2278
  3387  01C9  29CA               	
  3388                           l197:	
  3389  01CA                     	line	191
  3390                           	
  3391                           l2278:	
  3392  01CA                     ;lcd.c: 191:     lcd_lincol(lin, col);
  3393                           	movf	(lcd_num@col),w
  3394  01CA  0843               	movwf	(??_lcd_num+0)+0
  3395  01CB  00C7               	movf	(??_lcd_num+0)+0,w
  3396  01CC  0847               	movwf	(lcd_lincol@col)
  3397  01CD  00F5               	movf	(lcd_num@lin),w
  3398  01CE  084A               	fcall	_lcd_lincol
  3399  01CF  120A  118A  25D7  120A  118A  	line	193
  3400                           	
  3401                           l2280:	
  3402  01D4                     ;lcd.c: 193:     div=10000;
  3403                           	movlw	010h
  3404  01D4  3010               	bcf	status, 5	;RP0=0, select bank0
  3405  01D5  1283               	bcf	status, 6	;RP1=0, select bank0
  3406  01D6  1303               	movwf	(lcd_num@div)
  3407  01D7  00CD               	movlw	027h
  3408  01D8  3027               	movwf	((lcd_num@div))+1
  3409  01D9  00CE               	line	194
  3410                           	
  3411                           l2282:	
  3412  01DA                     ;lcd.c: 194:     size = 5;
  3413                           	movlw	low(05h)
  3414  01DA  3005               	movwf	(??_lcd_num+0)+0
  3415  01DB  00C7               	movf	(??_lcd_num+0)+0,w
  3416  01DC  0847               	movwf	(lcd_num@size)
  3417  01DD  00CB               	line	195
  3418                           ;lcd.c: 195:     while( div >= 1 )
  3419                           	goto	l2290
  3420  01DE  2A0E               	
  3421                           l199:	
  3422  01DF                     	line	197
  3423                           	
  3424                           l2284:	
  3425  01DF                     ;lcd.c: 196:     {;lcd.c: 197:         if( num/div == 0 )
  3426                           	bcf	status, 5	;RP0=0, select bank0
  3427  01DF  1283               	bcf	status, 6	;RP1=0, select bank0
  3428  01E0  1303               	movf	(lcd_num@div+1),w
  3429  01E1  084E               	movwf	(___awdiv@divisor+1)
  3430  01E2  00F3               	movf	(lcd_num@div),w
  3431  01E3  084D               	movwf	(___awdiv@divisor)
  3432  01E4  00F2               	movf	(lcd_num@num+1),w
  3433  01E5  0845               	movwf	(___awdiv@dividend+1)
  3434  01E6  00F5               	movf	(lcd_num@num),w
  3435  01E7  0844               	movwf	(___awdiv@dividend)
  3436  01E8  00F4               	fcall	___awdiv
  3437  01E9  120A  118A  23AD  120A  118A  	movf	((0+(?___awdiv))),w
  3438  01EE  0872               iorwf	((1+(?___awdiv))),w
  3439  01EF  0473               	btfss	status,2
  3440  01F0  1D03               	goto	u1811
  3441  01F1  29F3               	goto	u1810
  3442  01F2  29F4               u1811:
  3443  01F3                     	goto	l2296
  3444  01F3  2A28               u1810:
  3445  01F4                     	line	198
  3446                           	
  3447                           l2286:	
  3448  01F4                     ;lcd.c: 198:             --size;
  3449                           	movlw	01h
  3450  01F4  3001               	bcf	status, 5	;RP0=0, select bank0
  3451  01F5  1283               	bcf	status, 6	;RP1=0, select bank0
  3452  01F6  1303               	subwf	(lcd_num@size),f
  3453  01F7  02CB               	goto	l2288
  3454  01F8  29FA               	line	199
  3455                           ;lcd.c: 199:         else
  3456                           	
  3457                           l200:	
  3458  01F9                     	line	200
  3459                           ;lcd.c: 200:             break;
  3460                           	goto	l2296
  3461  01F9  2A28               	
  3462                           l201:	
  3463  01FA                     	line	201
  3464                           	
  3465                           l2288:	
  3466  01FA                     ;lcd.c: 201:         div/=10;
  3467                           	movlw	0Ah
  3468  01FA  300A               	movwf	(___awdiv@divisor)
  3469  01FB  00F2               	movlw	0
  3470  01FC  3000               	movwf	((___awdiv@divisor))+1
  3471  01FD  00F3               	movf	(lcd_num@div+1),w
  3472  01FE  084E               	movwf	(___awdiv@dividend+1)
  3473  01FF  00F5               	movf	(lcd_num@div),w
  3474  0200  084D               	movwf	(___awdiv@dividend)
  3475  0201  00F4               	fcall	___awdiv
  3476  0202  120A  118A  23AD  120A  118A  	movf	(1+(?___awdiv)),w
  3477  0207  0873               	bcf	status, 5	;RP0=0, select bank0
  3478  0208  1283               	bcf	status, 6	;RP1=0, select bank0
  3479  0209  1303               	movwf	(lcd_num@div+1)
  3480  020A  00CE               	movf	(0+(?___awdiv)),w
  3481  020B  0872               	movwf	(lcd_num@div)
  3482  020C  00CD               	goto	l2290
  3483  020D  2A0E               	line	202
  3484                           ;lcd.c: 202:     }
  3485                           	
  3486                           l198:	
  3487  020E                     	line	195
  3488                           	
  3489                           l2290:	
  3490  020E                     ;lcd.c: 195:     while( div >= 1 )
  3491                           	movf	(lcd_num@div+1),w
  3492  020E  084E               	xorlw	80h
  3493  020F  3A80               	movwf	btemp+1
  3494  0210  00FF               	movlw	(0)^80h
  3495  0211  3080               	subwf	btemp+1,w
  3496  0212  027F               	skipz
  3497  0213  1D03               	goto	u1825
  3498  0214  2A17               	movlw	01h
  3499  0215  3001               	subwf	(lcd_num@div),w
  3500  0216  024D               u1825:
  3501  0217                     
  3502                           	skipnc
  3503  0217  1803               	goto	u1821
  3504  0218  2A1A               	goto	u1820
  3505  0219  2A1B               u1821:
  3506  021A                     	goto	l2284
  3507  021A  29DF               u1820:
  3508  021B                     	goto	l2296
  3509  021B  2A28               	
  3510                           l202:	
  3511  021C                     	line	204
  3512                           ;lcd.c: 204:     while( tam > (size+sinal) && tam > 1 )
  3513                           	goto	l2296
  3514  021C  2A28               	
  3515                           l204:	
  3516  021D                     	line	207
  3517                           	
  3518                           l2292:	
  3519  021D                     ;lcd.c: 205:     {;lcd.c: 207:         lcd_dataReg('0');
  3520                           	movlw	low(030h)
  3521  021D  3030               	fcall	_lcd_dataReg
  3522  021E  120A  118A  24FD  120A  118A  	line	208
  3523                           	
  3524                           l2294:	
  3525  0223                     ;lcd.c: 208:         --tam;
  3526                           	movlw	01h
  3527  0223  3001               	bcf	status, 5	;RP0=0, select bank0
  3528  0224  1283               	bcf	status, 6	;RP1=0, select bank0
  3529  0225  1303               	subwf	(lcd_num@tam),f
  3530  0226  02C6               	goto	l2296
  3531  0227  2A28               	line	209
  3532                           ;lcd.c: 209:     }
  3533                           	
  3534                           l203:	
  3535  0228                     	line	204
  3536                           	
  3537                           l2296:	
  3538  0228                     ;lcd.c: 204:     while( tam > (size+sinal) && tam > 1 )
  3539                           	bcf	status, 5	;RP0=0, select bank0
  3540  0228  1283               	bcf	status, 6	;RP1=0, select bank0
  3541  0229  1303               	movf	(lcd_num@size),w
  3542  022A  084B               	addwf	(lcd_num@sinal),w
  3543  022B  074C               	movwf	(??_lcd_num+0)+0
  3544  022C  00C7               	clrf	(??_lcd_num+0)+0+1
  3545  022D  01C8               	rlf	1+(??_lcd_num+0)+0,f
  3546  022E  0DC8               	
  3547                           	movf	1+(??_lcd_num+0)+0,w
  3548  022F  0848               	xorlw	80h
  3549  0230  3A80               	movwf	(??_lcd_num+2)+0
  3550  0231  00C9               	movlw	80h
  3551  0232  3080               	subwf	(??_lcd_num+2)+0,w
  3552  0233  0249               	skipz
  3553  0234  1D03               	goto	u1835
  3554  0235  2A38               	movf	(lcd_num@tam),w
  3555  0236  0846               	subwf	0+(??_lcd_num+0)+0,w
  3556  0237  0247               u1835:
  3557  0238                     
  3558                           	skipnc
  3559  0238  1803               	goto	u1831
  3560  0239  2A3B               	goto	u1830
  3561  023A  2A3C               u1831:
  3562  023B                     	goto	l2300
  3563  023B  2A46               u1830:
  3564  023C                     	
  3565                           l2298:	
  3566  023C                     	movlw	low(02h)
  3567  023C  3002               	bcf	status, 5	;RP0=0, select bank0
  3568  023D  1283               	bcf	status, 6	;RP1=0, select bank0
  3569  023E  1303               	subwf	(lcd_num@tam),w
  3570  023F  0246               	skipnc
  3571  0240  1803               	goto	u1841
  3572  0241  2A43               	goto	u1840
  3573  0242  2A44               u1841:
  3574  0243                     	goto	l2292
  3575  0243  2A1D               u1840:
  3576  0244                     	goto	l2300
  3577  0244  2A46               	
  3578                           l206:	
  3579  0245                     	goto	l2300
  3580  0245  2A46               	
  3581                           l207:	
  3582  0246                     	line	211
  3583                           	
  3584                           l2300:	
  3585  0246                     ;lcd.c: 211:     if( sinal )
  3586                           	bcf	status, 5	;RP0=0, select bank0
  3587  0246  1283               	bcf	status, 6	;RP1=0, select bank0
  3588  0247  1303               	movf	((lcd_num@sinal)),w
  3589  0248  084C               	btfsc	status,2
  3590  0249  1903               	goto	u1851
  3591  024A  2A4C               	goto	u1850
  3592  024B  2A4D               u1851:
  3593  024C                     	goto	l209
  3594  024C  2A54               u1850:
  3595  024D                     	line	212
  3596                           	
  3597                           l2302:	
  3598  024D                     ;lcd.c: 212:         lcd_dataReg('-');
  3599                           	movlw	low(02Dh)
  3600  024D  302D               	fcall	_lcd_dataReg
  3601  024E  120A  118A  24FD  120A  118A  	goto	l209
  3602  0253  2A54               	
  3603                           l208:	
  3604  0254                     	line	214
  3605                           ;lcd.c: 214:     do
  3606                           	
  3607                           l209:	
  3608  0254                     	line	216
  3609                           ;lcd.c: 215:     {;lcd.c: 216:         lcd_dataReg( (unsigned char)(num / div) + '0' );

  3610                           	bcf	status, 5	;RP0=0, select bank0
  3611  0254  1283               	bcf	status, 6	;RP1=0, select bank0
  3612  0255  1303               	movf	(lcd_num@div+1),w
  3613  0256  084E               	movwf	(___awdiv@divisor+1)
  3614  0257  00F3               	movf	(lcd_num@div),w
  3615  0258  084D               	movwf	(___awdiv@divisor)
  3616  0259  00F2               	movf	(lcd_num@num+1),w
  3617  025A  0845               	movwf	(___awdiv@dividend+1)
  3618  025B  00F5               	movf	(lcd_num@num),w
  3619  025C  0844               	movwf	(___awdiv@dividend)
  3620  025D  00F4               	fcall	___awdiv
  3621  025E  120A  118A  23AD  120A  118A  	movf	(0+(?___awdiv)),w
  3622  0263  0872               	addlw	030h
  3623  0264  3E30               	fcall	_lcd_dataReg
  3624  0265  120A  118A  24FD  120A  118A  	line	217
  3625                           ;lcd.c: 217:         num = num % div;
  3626                           	bcf	status, 5	;RP0=0, select bank0
  3627  026A  1283               	bcf	status, 6	;RP1=0, select bank0
  3628  026B  1303               	movf	(lcd_num@div+1),w
  3629  026C  084E               	movwf	(___awmod@divisor+1)
  3630  026D  00F3               	movf	(lcd_num@div),w
  3631  026E  084D               	movwf	(___awmod@divisor)
  3632  026F  00F2               	movf	(lcd_num@num+1),w
  3633  0270  0845               	movwf	(___awmod@dividend+1)
  3634  0271  00F5               	movf	(lcd_num@num),w
  3635  0272  0844               	movwf	(___awmod@dividend)
  3636  0273  00F4               	fcall	___awmod
  3637  0274  120A  118A  2420  120A  118A  	movf	(1+(?___awmod)),w
  3638  0279  0873               	bcf	status, 5	;RP0=0, select bank0
  3639  027A  1283               	bcf	status, 6	;RP1=0, select bank0
  3640  027B  1303               	movwf	(lcd_num@num+1)
  3641  027C  00C5               	movf	(0+(?___awmod)),w
  3642  027D  0872               	movwf	(lcd_num@num)
  3643  027E  00C4               	line	218
  3644                           ;lcd.c: 218:         div/=10;
  3645                           	movlw	0Ah
  3646  027F  300A               	movwf	(___awdiv@divisor)
  3647  0280  00F2               	movlw	0
  3648  0281  3000               	movwf	((___awdiv@divisor))+1
  3649  0282  00F3               	movf	(lcd_num@div+1),w
  3650  0283  084E               	movwf	(___awdiv@dividend+1)
  3651  0284  00F5               	movf	(lcd_num@div),w
  3652  0285  084D               	movwf	(___awdiv@dividend)
  3653  0286  00F4               	fcall	___awdiv
  3654  0287  120A  118A  23AD  120A  118A  	movf	(1+(?___awdiv)),w
  3655  028C  0873               	bcf	status, 5	;RP0=0, select bank0
  3656  028D  1283               	bcf	status, 6	;RP1=0, select bank0
  3657  028E  1303               	movwf	(lcd_num@div+1)
  3658  028F  00CE               	movf	(0+(?___awdiv)),w
  3659  0290  0872               	movwf	(lcd_num@div)
  3660  0291  00CD               	line	219
  3661                           	
  3662                           l2304:	
  3663  0292                     ;lcd.c: 219:     }
  3664                           	movf	(lcd_num@div+1),w
  3665  0292  084E               	xorlw	80h
  3666  0293  3A80               	movwf	btemp+1
  3667  0294  00FF               	movlw	(0)^80h
  3668  0295  3080               	subwf	btemp+1,w
  3669  0296  027F               	skipz
  3670  0297  1D03               	goto	u1865
  3671  0298  2A9B               	movlw	01h
  3672  0299  3001               	subwf	(lcd_num@div),w
  3673  029A  024D               u1865:
  3674  029B                     
  3675                           	skipnc
  3676  029B  1803               	goto	u1861
  3677  029C  2A9E               	goto	u1860
  3678  029D  2A9F               u1861:
  3679  029E                     	goto	l209
  3680  029E  2A54               u1860:
  3681  029F                     	goto	l211
  3682  029F  2AA0               	
  3683                           l210:	
  3684  02A0                     	line	221
  3685                           	
  3686                           l211:	
  3687  02A0                     	return
  3688  02A0  0008               	opt stack 0
  3689                           GLOBAL	__end_of_lcd_num
  3690                           	__end_of_lcd_num:
  3691  02A1                     	signat	_lcd_num,16505
  3692                           	global	_lcd_lincol
  3693                           
  3694 ;; *************** function _lcd_lincol *****************
  3695 ;; Defined at:
  3696 ;;		line 113 in file "lcd.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  lin             1    wreg     unsigned char 
  3699 ;;  col             1    5[COMMON] unsigned char 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  lin             1    7[COMMON] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0, pclath, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3711 ;;      Params:         1       0       0       0       0
  3712 ;;      Locals:         1       0       0       0       0
  3713 ;;      Temps:          1       0       0       0       0
  3714 ;;      Totals:         3       0       0       0       0
  3715 ;;Total ram usage:        3 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    3
  3718 ;; This function calls:
  3719 ;;		_lcd_instReg
  3720 ;; This function is called by:
  3721 ;;		_lcd_print
  3722 ;;		_lcd_num
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3726                           	line	113
  3727                           global __ptext5
  3728                           __ptext5:	;psect for function _lcd_lincol
  3729  05D7                     psect	text5
  3730                           	file	"lcd.c"
  3731                           	line	113
  3732                           	global	__size_of_lcd_lincol
  3733                           	__size_of_lcd_lincol	equ	__end_of_lcd_lincol-_lcd_lincol
  3734  0013                     	
  3735                           _lcd_lincol:	
  3736  05D7                     ;incstack = 0
  3737                           	opt	stack 3
  3738                           ; Regs used in _lcd_lincol: [wreg+status,2+status,0+pclath+cstack]
  3739                           ;lcd_lincol@lin stored from wreg
  3740                           	movwf	(lcd_lincol@lin)
  3741  05D7  00F7               	line	115
  3742                           	
  3743                           l1834:	
  3744  05D8                     ;lcd.c: 113: void lcd_lincol( unsigned char lin, unsigned char col);lcd.c: 114: {;lcd.c:
                                  115:     lcd_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  3745                           	movf	(lcd_lincol@lin),w
  3746  05D8  0877               	movwf	(??_lcd_lincol+0)+0
  3747  05D9  00F6               	movlw	06h
  3748  05DA  3006               u1045:
  3749  05DB                     	clrc
  3750  05DB  1003               	rlf	(??_lcd_lincol+0)+0,f
  3751  05DC  0DF6               	addlw	-1
  3752  05DD  3EFF               	skipz
  3753  05DE  1D03               	goto	u1045
  3754  05DF  2DDB               	movf	(lcd_lincol@col),w
  3755  05E0  0875               	addwf	0+(??_lcd_lincol+0)+0,w
  3756  05E1  0776               	andlw	07Fh
  3757  05E2  397F               	addlw	080h
  3758  05E3  3E80               	fcall	_lcd_instReg
  3759  05E4  120A  118A  2331  120A  118A  	line	116
  3760                           	
  3761                           l182:	
  3762  05E9                     	return
  3763  05E9  0008               	opt stack 0
  3764                           GLOBAL	__end_of_lcd_lincol
  3765                           	__end_of_lcd_lincol:
  3766  05EA                     	signat	_lcd_lincol,8313
  3767                           	global	_lcd_dataReg
  3768                           
  3769 ;; *************** function _lcd_dataReg *****************
  3770 ;; Defined at:
  3771 ;;		line 95 in file "lcd.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  d               1    wreg     unsigned char 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  d               1    4[COMMON] unsigned char 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2, status,0
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3785 ;;      Params:         0       0       0       0       0
  3786 ;;      Locals:         1       0       0       0       0
  3787 ;;      Temps:          2       0       0       0       0
  3788 ;;      Totals:         3       0       0       0       0
  3789 ;;Total ram usage:        3 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; Hardware stack levels required when called:    2
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_lcd_print
  3796 ;;		_lcd_num
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3800                           	line	95
  3801                           global __ptext6
  3802                           __ptext6:	;psect for function _lcd_dataReg
  3803  04FD                     psect	text6
  3804                           	file	"lcd.c"
  3805                           	line	95
  3806                           	global	__size_of_lcd_dataReg
  3807                           	__size_of_lcd_dataReg	equ	__end_of_lcd_dataReg-_lcd_dataReg
  3808  002C                     	
  3809                           _lcd_dataReg:	
  3810  04FD                     ;incstack = 0
  3811                           	opt	stack 4
  3812                           ; Regs used in _lcd_dataReg: [wreg+status,2+status,0]
  3813                           ;lcd_dataReg@d stored from wreg
  3814                           	movwf	(lcd_dataReg@d)
  3815  04FD  00F4               	line	97
  3816                           	
  3817                           l1816:	
  3818  04FE                     ;lcd.c: 95: void lcd_dataReg( unsigned char d );lcd.c: 96: {;lcd.c: 97:     PORTDbits.RD
                                 4 = 1;
  3819                           	bcf	status, 5	;RP0=0, select bank0
  3820  04FE  1283               	bcf	status, 6	;RP1=0, select bank0
  3821  04FF  1303               	bsf	(8),4	;volatile
  3822  0500  1608               	line	98
  3823                           	
  3824                           l1818:	
  3825  0501                     ;lcd.c: 98:     PORTD = ((PORTD & 0xF0)|(d >> 4&0x0F));
  3826                           	movf	(lcd_dataReg@d),w
  3827  0501  0874               	movwf	(??_lcd_dataReg+0)+0
  3828  0502  00F2               	movlw	04h
  3829  0503  3004               u1035:
  3830  0504                     	clrc
  3831  0504  1003               	rrf	(??_lcd_dataReg+0)+0,f
  3832  0505  0CF2               	addlw	-1
  3833  0506  3EFF               	skipz
  3834  0507  1D03               	goto	u1035
  3835  0508  2D04               	movlw	low(0Fh)
  3836  0509  300F               	andwf	0+(??_lcd_dataReg+0)+0,w
  3837  050A  0572               	movwf	(??_lcd_dataReg+1)+0
  3838  050B  00F3               	movf	(8),w	;volatile
  3839  050C  0808               	andlw	0F0h
  3840  050D  39F0               	iorwf	0+(??_lcd_dataReg+1)+0,w
  3841  050E  0473               	movwf	(8)	;volatile
  3842  050F  0088               	line	99
  3843                           	
  3844                           l1820:	
  3845  0510                     ;lcd.c: 99:     PORTDbits.RD5 = 0;
  3846                           	bcf	(8),5	;volatile
  3847  0510  1288               	line	100
  3848                           	
  3849                           l1822:	
  3850  0511                     ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3851                           	opt asmopt_push
  3852                           opt asmopt_off
  3853                           	movlw	13
  3854  0511  300D               movwf	((??_lcd_dataReg+0)+0),f
  3855  0512  00F2               	u1887:
  3856  0513                     decfsz	(??_lcd_dataReg+0)+0,f
  3857  0513  0BF2               	goto	u1887
  3858  0514  2D13               opt asmopt_pop
  3859                           
  3860                           	line	101
  3861                           	
  3862                           l1824:	
  3863  0515                     ;lcd.c: 101:     PORTDbits.RD5 = 1;
  3864                           	bcf	status, 5	;RP0=0, select bank0
  3865  0515  1283               	bcf	status, 6	;RP1=0, select bank0
  3866  0516  1303               	bsf	(8),5	;volatile
  3867  0517  1688               	line	103
  3868                           	
  3869                           l1826:	
  3870  0518                     ;lcd.c: 103:     PORTDbits.RD4 = 1;
  3871                           	bsf	(8),4	;volatile
  3872  0518  1608               	line	104
  3873                           	
  3874                           l1828:	
  3875  0519                     ;lcd.c: 104:     PORTD = ((PORTD & 0xF0)|(d&0x0F));
  3876                           	movlw	low(0Fh)
  3877  0519  300F               	andwf	(lcd_dataReg@d),w
  3878  051A  0574               	movwf	(??_lcd_dataReg+0)+0
  3879  051B  00F2               	movf	(8),w	;volatile
  3880  051C  0808               	andlw	0F0h
  3881  051D  39F0               	iorwf	0+(??_lcd_dataReg+0)+0,w
  3882  051E  0472               	movwf	(8)	;volatile
  3883  051F  0088               	line	105
  3884                           	
  3885                           l1830:	
  3886  0520                     ;lcd.c: 105:     PORTDbits.RD5 = 0;
  3887                           	bcf	(8),5	;volatile
  3888  0520  1288               	line	106
  3889                           ;lcd.c: 106:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3890                           	opt asmopt_push
  3891                           opt asmopt_off
  3892                           	movlw	13
  3893  0521  300D               movwf	((??_lcd_dataReg+0)+0),f
  3894  0522  00F2               	u1897:
  3895  0523                     decfsz	(??_lcd_dataReg+0)+0,f
  3896  0523  0BF2               	goto	u1897
  3897  0524  2D23               opt asmopt_pop
  3898                           
  3899                           	line	107
  3900                           	
  3901                           l1832:	
  3902  0525                     ;lcd.c: 107:     PORTDbits.RD5 = 1;
  3903                           	bcf	status, 5	;RP0=0, select bank0
  3904  0525  1283               	bcf	status, 6	;RP1=0, select bank0
  3905  0526  1303               	bsf	(8),5	;volatile
  3906  0527  1688               	line	108
  3907                           	
  3908                           l179:	
  3909  0528                     	return
  3910  0528  0008               	opt stack 0
  3911                           GLOBAL	__end_of_lcd_dataReg
  3912                           	__end_of_lcd_dataReg:
  3913  0529                     	signat	_lcd_dataReg,4217
  3914                           	global	___awmod
  3915                           
  3916 ;; *************** function ___awmod *****************
  3917 ;; Defined at:
  3918 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  divisor         2    2[COMMON] int 
  3921 ;;  dividend        2    4[COMMON] int 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  sign            1    8[COMMON] unsigned char 
  3924 ;;  counter         1    7[COMMON] unsigned char 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  2    2[COMMON] int 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3934 ;;      Params:         4       0       0       0       0
  3935 ;;      Locals:         2       0       0       0       0
  3936 ;;      Temps:          1       0       0       0       0
  3937 ;;      Totals:         7       0       0       0       0
  3938 ;;Total ram usage:        7 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    2
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_lcd_num
  3945 ;;		_temporizar
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           psect	text7,local,class=CODE,delta=2,merge=1,group=1
  3949                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3950                           	line	5
  3951                           global __ptext7
  3952                           __ptext7:	;psect for function ___awmod
  3953  0420                     psect	text7
  3954                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3955                           	line	5
  3956                           	global	__size_of___awmod
  3957                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  3958  0063                     	
  3959                           ___awmod:	
  3960  0420                     ;incstack = 0
  3961                           	opt	stack 4
  3962                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3963                           	line	12
  3964                           	
  3965                           l2206:	
  3966  0420                     	clrf	(___awmod@sign)
  3967  0420  01F8               	line	13
  3968                           	
  3969                           l2208:	
  3970  0421                     	btfss	(___awmod@dividend+1),7
  3971  0421  1FF5               	goto	u1641
  3972  0422  2C24               	goto	u1640
  3973  0423  2C25               u1641:
  3974  0424                     	goto	l2214
  3975  0424  2C2D               u1640:
  3976  0425                     	line	14
  3977                           	
  3978                           l2210:	
  3979  0425                     	comf	(___awmod@dividend),f
  3980  0425  09F4               	comf	(___awmod@dividend+1),f
  3981  0426  09F5               	incf	(___awmod@dividend),f
  3982  0427  0AF4               	skipnz
  3983  0428  1903               	incf	(___awmod@dividend+1),f
  3984  0429  0AF5               	line	15
  3985                           	
  3986                           l2212:	
  3987  042A                     	clrf	(___awmod@sign)
  3988  042A  01F8               	incf	(___awmod@sign),f
  3989  042B  0AF8               	goto	l2214
  3990  042C  2C2D               	line	16
  3991                           	
  3992                           l607:	
  3993  042D                     	line	17
  3994                           	
  3995                           l2214:	
  3996  042D                     	btfss	(___awmod@divisor+1),7
  3997  042D  1FF3               	goto	u1651
  3998  042E  2C30               	goto	u1650
  3999  042F  2C31               u1651:
  4000  0430                     	goto	l2218
  4001  0430  2C37               u1650:
  4002  0431                     	line	18
  4003                           	
  4004                           l2216:	
  4005  0431                     	comf	(___awmod@divisor),f
  4006  0431  09F2               	comf	(___awmod@divisor+1),f
  4007  0432  09F3               	incf	(___awmod@divisor),f
  4008  0433  0AF2               	skipnz
  4009  0434  1903               	incf	(___awmod@divisor+1),f
  4010  0435  0AF3               	goto	l2218
  4011  0436  2C37               	
  4012                           l608:	
  4013  0437                     	line	19
  4014                           	
  4015                           l2218:	
  4016  0437                     	movf	((___awmod@divisor)),w
  4017  0437  0872               iorwf	((___awmod@divisor+1)),w
  4018  0438  0473               	btfsc	status,2
  4019  0439  1903               	goto	u1661
  4020  043A  2C3C               	goto	u1660
  4021  043B  2C3D               u1661:
  4022  043C                     	goto	l2236
  4023  043C  2C72               u1660:
  4024  043D                     	line	20
  4025                           	
  4026                           l2220:	
  4027  043D                     	clrf	(___awmod@counter)
  4028  043D  01F7               	incf	(___awmod@counter),f
  4029  043E  0AF7               	line	21
  4030                           	goto	l2226
  4031  043F  2C4C               	
  4032                           l611:	
  4033  0440                     	line	22
  4034                           	
  4035                           l2222:	
  4036  0440                     	movlw	01h
  4037  0440  3001               	
  4038                           u1675:
  4039  0441                     	clrc
  4040  0441  1003               	rlf	(___awmod@divisor),f
  4041  0442  0DF2               	rlf	(___awmod@divisor+1),f
  4042  0443  0DF3               	addlw	-1
  4043  0444  3EFF               	skipz
  4044  0445  1D03               	goto	u1675
  4045  0446  2C41               	line	23
  4046                           	
  4047                           l2224:	
  4048  0447                     	movlw	low(01h)
  4049  0447  3001               	movwf	(??___awmod+0)+0
  4050  0448  00F6               	movf	(??___awmod+0)+0,w
  4051  0449  0876               	addwf	(___awmod@counter),f
  4052  044A  07F7               	goto	l2226
  4053  044B  2C4C               	line	24
  4054                           	
  4055                           l610:	
  4056  044C                     	line	21
  4057                           	
  4058                           l2226:	
  4059  044C                     	btfss	(___awmod@divisor+1),(15)&7
  4060  044C  1FF3               	goto	u1681
  4061  044D  2C4F               	goto	u1680
  4062  044E  2C50               u1681:
  4063  044F                     	goto	l2222
  4064  044F  2C40               u1680:
  4065  0450                     	goto	l2228
  4066  0450  2C52               	
  4067                           l612:	
  4068  0451                     	goto	l2228
  4069  0451  2C52               	line	25
  4070                           	
  4071                           l613:	
  4072  0452                     	line	26
  4073                           	
  4074                           l2228:	
  4075  0452                     	movf	(___awmod@divisor+1),w
  4076  0452  0873               	subwf	(___awmod@dividend+1),w
  4077  0453  0275               	skipz
  4078  0454  1D03               	goto	u1695
  4079  0455  2C58               	movf	(___awmod@divisor),w
  4080  0456  0872               	subwf	(___awmod@dividend),w
  4081  0457  0274               u1695:
  4082  0458                     	skipc
  4083  0458  1C03               	goto	u1691
  4084  0459  2C5B               	goto	u1690
  4085  045A  2C5C               u1691:
  4086  045B                     	goto	l2232
  4087  045B  2C63               u1690:
  4088  045C                     	line	27
  4089                           	
  4090                           l2230:	
  4091  045C                     	movf	(___awmod@divisor),w
  4092  045C  0872               	subwf	(___awmod@dividend),f
  4093  045D  02F4               	movf	(___awmod@divisor+1),w
  4094  045E  0873               	skipc
  4095  045F  1C03               	decf	(___awmod@dividend+1),f
  4096  0460  03F5               	subwf	(___awmod@dividend+1),f
  4097  0461  02F5               	goto	l2232
  4098  0462  2C63               	
  4099                           l614:	
  4100  0463                     	line	28
  4101                           	
  4102                           l2232:	
  4103  0463                     	movlw	01h
  4104  0463  3001               	
  4105                           u1705:
  4106  0464                     	clrc
  4107  0464  1003               	rrf	(___awmod@divisor+1),f
  4108  0465  0CF3               	rrf	(___awmod@divisor),f
  4109  0466  0CF2               	addlw	-1
  4110  0467  3EFF               	skipz
  4111  0468  1D03               	goto	u1705
  4112  0469  2C64               	line	29
  4113                           	
  4114                           l2234:	
  4115  046A                     	movlw	01h
  4116  046A  3001               	subwf	(___awmod@counter),f
  4117  046B  02F7               	btfss	status,2
  4118  046C  1D03               	goto	u1711
  4119  046D  2C6F               	goto	u1710
  4120  046E  2C70               u1711:
  4121  046F                     	goto	l2228
  4122  046F  2C52               u1710:
  4123  0470                     	goto	l2236
  4124  0470  2C72               	
  4125                           l615:	
  4126  0471                     	goto	l2236
  4127  0471  2C72               	line	30
  4128                           	
  4129                           l609:	
  4130  0472                     	line	31
  4131                           	
  4132                           l2236:	
  4133  0472                     	movf	((___awmod@sign)),w
  4134  0472  0878               	btfsc	status,2
  4135  0473  1903               	goto	u1721
  4136  0474  2C76               	goto	u1720
  4137  0475  2C77               u1721:
  4138  0476                     	goto	l2240
  4139  0476  2C7D               u1720:
  4140  0477                     	line	32
  4141                           	
  4142                           l2238:	
  4143  0477                     	comf	(___awmod@dividend),f
  4144  0477  09F4               	comf	(___awmod@dividend+1),f
  4145  0478  09F5               	incf	(___awmod@dividend),f
  4146  0479  0AF4               	skipnz
  4147  047A  1903               	incf	(___awmod@dividend+1),f
  4148  047B  0AF5               	goto	l2240
  4149  047C  2C7D               	
  4150                           l616:	
  4151  047D                     	line	33
  4152                           	
  4153                           l2240:	
  4154  047D                     	movf	(___awmod@dividend+1),w
  4155  047D  0875               	movwf	(?___awmod+1)
  4156  047E  00F3               	movf	(___awmod@dividend),w
  4157  047F  0874               	movwf	(?___awmod)
  4158  0480  00F2               	goto	l617
  4159  0481  2C82               	
  4160                           l2242:	
  4161  0482                     	line	34
  4162                           	
  4163                           l617:	
  4164  0482                     	return
  4165  0482  0008               	opt stack 0
  4166                           GLOBAL	__end_of___awmod
  4167                           	__end_of___awmod:
  4168  0483                     	signat	___awmod,8314
  4169                           	global	___awdiv
  4170                           
  4171 ;; *************** function ___awdiv *****************
  4172 ;; Defined at:
  4173 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  divisor         2    2[COMMON] int 
  4176 ;;  dividend        2    4[COMMON] int 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  quotient        2    2[BANK0 ] int 
  4179 ;;  sign            1    1[BANK0 ] unsigned char 
  4180 ;;  counter         1    0[BANK0 ] unsigned char 
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  2    2[COMMON] int 
  4183 ;; Registers used:
  4184 ;;		wreg, status,2, status,0
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4190 ;;      Params:         4       0       0       0       0
  4191 ;;      Locals:         0       4       0       0       0
  4192 ;;      Temps:          1       0       0       0       0
  4193 ;;      Totals:         5       4       0       0       0
  4194 ;;Total ram usage:        9 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    2
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_lcd_num
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           psect	text8,local,class=CODE,delta=2,merge=1,group=1
  4204                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4205                           	line	5
  4206                           global __ptext8
  4207                           __ptext8:	;psect for function ___awdiv
  4208  03AD                     psect	text8
  4209                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4210                           	line	5
  4211                           	global	__size_of___awdiv
  4212                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  4213  0073                     	
  4214                           ___awdiv:	
  4215  03AD                     ;incstack = 0
  4216                           	opt	stack 4
  4217                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4218                           	line	13
  4219                           	
  4220                           l2162:	
  4221  03AD                     	bcf	status, 5	;RP0=0, select bank0
  4222  03AD  1283               	bcf	status, 6	;RP1=0, select bank0
  4223  03AE  1303               	clrf	(___awdiv@sign)
  4224  03AF  01C0               	line	14
  4225                           	
  4226                           l2164:	
  4227  03B0                     	btfss	(___awdiv@divisor+1),7
  4228  03B0  1FF3               	goto	u1541
  4229  03B1  2BB3               	goto	u1540
  4230  03B2  2BB4               u1541:
  4231  03B3                     	goto	l2170
  4232  03B3  2BBC               u1540:
  4233  03B4                     	line	15
  4234                           	
  4235                           l2166:	
  4236  03B4                     	comf	(___awdiv@divisor),f
  4237  03B4  09F2               	comf	(___awdiv@divisor+1),f
  4238  03B5  09F3               	incf	(___awdiv@divisor),f
  4239  03B6  0AF2               	skipnz
  4240  03B7  1903               	incf	(___awdiv@divisor+1),f
  4241  03B8  0AF3               	line	16
  4242                           	
  4243                           l2168:	
  4244  03B9                     	clrf	(___awdiv@sign)
  4245  03B9  01C0               	incf	(___awdiv@sign),f
  4246  03BA  0AC0               	goto	l2170
  4247  03BB  2BBC               	line	17
  4248                           	
  4249                           l594:	
  4250  03BC                     	line	18
  4251                           	
  4252                           l2170:	
  4253  03BC                     	btfss	(___awdiv@dividend+1),7
  4254  03BC  1FF5               	goto	u1551
  4255  03BD  2BBF               	goto	u1550
  4256  03BE  2BC0               u1551:
  4257  03BF                     	goto	l2176
  4258  03BF  2BCA               u1550:
  4259  03C0                     	line	19
  4260                           	
  4261                           l2172:	
  4262  03C0                     	comf	(___awdiv@dividend),f
  4263  03C0  09F4               	comf	(___awdiv@dividend+1),f
  4264  03C1  09F5               	incf	(___awdiv@dividend),f
  4265  03C2  0AF4               	skipnz
  4266  03C3  1903               	incf	(___awdiv@dividend+1),f
  4267  03C4  0AF5               	line	20
  4268                           	
  4269                           l2174:	
  4270  03C5                     	movlw	low(01h)
  4271  03C5  3001               	movwf	(??___awdiv+0)+0
  4272  03C6  00F6               	movf	(??___awdiv+0)+0,w
  4273  03C7  0876               	xorwf	(___awdiv@sign),f
  4274  03C8  06C0               	goto	l2176
  4275  03C9  2BCA               	line	21
  4276                           	
  4277                           l595:	
  4278  03CA                     	line	22
  4279                           	
  4280                           l2176:	
  4281  03CA                     	clrf	(___awdiv@quotient)
  4282  03CA  01C1               	clrf	(___awdiv@quotient+1)
  4283  03CB  01C2               	line	23
  4284                           	
  4285                           l2178:	
  4286  03CC                     	movf	((___awdiv@divisor)),w
  4287  03CC  0872               iorwf	((___awdiv@divisor+1)),w
  4288  03CD  0473               	btfsc	status,2
  4289  03CE  1903               	goto	u1561
  4290  03CF  2BD1               	goto	u1560
  4291  03D0  2BD2               u1561:
  4292  03D1                     	goto	l2198
  4293  03D1  2C0F               u1560:
  4294  03D2                     	line	24
  4295                           	
  4296                           l2180:	
  4297  03D2                     	clrf	(___awdiv@counter)
  4298  03D2  01BF               	incf	(___awdiv@counter),f
  4299  03D3  0ABF               	line	25
  4300                           	goto	l2186
  4301  03D4  2BE1               	
  4302                           l598:	
  4303  03D5                     	line	26
  4304                           	
  4305                           l2182:	
  4306  03D5                     	movlw	01h
  4307  03D5  3001               	
  4308                           u1575:
  4309  03D6                     	clrc
  4310  03D6  1003               	rlf	(___awdiv@divisor),f
  4311  03D7  0DF2               	rlf	(___awdiv@divisor+1),f
  4312  03D8  0DF3               	addlw	-1
  4313  03D9  3EFF               	skipz
  4314  03DA  1D03               	goto	u1575
  4315  03DB  2BD6               	line	27
  4316                           	
  4317                           l2184:	
  4318  03DC                     	movlw	low(01h)
  4319  03DC  3001               	movwf	(??___awdiv+0)+0
  4320  03DD  00F6               	movf	(??___awdiv+0)+0,w
  4321  03DE  0876               	addwf	(___awdiv@counter),f
  4322  03DF  07BF               	goto	l2186
  4323  03E0  2BE1               	line	28
  4324                           	
  4325                           l597:	
  4326  03E1                     	line	25
  4327                           	
  4328                           l2186:	
  4329  03E1                     	btfss	(___awdiv@divisor+1),(15)&7
  4330  03E1  1FF3               	goto	u1581
  4331  03E2  2BE4               	goto	u1580
  4332  03E3  2BE5               u1581:
  4333  03E4                     	goto	l2182
  4334  03E4  2BD5               u1580:
  4335  03E5                     	goto	l2188
  4336  03E5  2BE7               	
  4337                           l599:	
  4338  03E6                     	goto	l2188
  4339  03E6  2BE7               	line	29
  4340                           	
  4341                           l600:	
  4342  03E7                     	line	30
  4343                           	
  4344                           l2188:	
  4345  03E7                     	movlw	01h
  4346  03E7  3001               	
  4347                           u1595:
  4348  03E8                     	clrc
  4349  03E8  1003               	rlf	(___awdiv@quotient),f
  4350  03E9  0DC1               	rlf	(___awdiv@quotient+1),f
  4351  03EA  0DC2               	addlw	-1
  4352  03EB  3EFF               	skipz
  4353  03EC  1D03               	goto	u1595
  4354  03ED  2BE8               	line	31
  4355                           	movf	(___awdiv@divisor+1),w
  4356  03EE  0873               	subwf	(___awdiv@dividend+1),w
  4357  03EF  0275               	skipz
  4358  03F0  1D03               	goto	u1605
  4359  03F1  2BF4               	movf	(___awdiv@divisor),w
  4360  03F2  0872               	subwf	(___awdiv@dividend),w
  4361  03F3  0274               u1605:
  4362  03F4                     	skipc
  4363  03F4  1C03               	goto	u1601
  4364  03F5  2BF7               	goto	u1600
  4365  03F6  2BF8               u1601:
  4366  03F7                     	goto	l2194
  4367  03F7  2C00               u1600:
  4368  03F8                     	line	32
  4369                           	
  4370                           l2190:	
  4371  03F8                     	movf	(___awdiv@divisor),w
  4372  03F8  0872               	subwf	(___awdiv@dividend),f
  4373  03F9  02F4               	movf	(___awdiv@divisor+1),w
  4374  03FA  0873               	skipc
  4375  03FB  1C03               	decf	(___awdiv@dividend+1),f
  4376  03FC  03F5               	subwf	(___awdiv@dividend+1),f
  4377  03FD  02F5               	line	33
  4378                           	
  4379                           l2192:	
  4380  03FE                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  4381  03FE  1441               	goto	l2194
  4382  03FF  2C00               	line	34
  4383                           	
  4384                           l601:	
  4385  0400                     	line	35
  4386                           	
  4387                           l2194:	
  4388  0400                     	movlw	01h
  4389  0400  3001               	
  4390                           u1615:
  4391  0401                     	clrc
  4392  0401  1003               	rrf	(___awdiv@divisor+1),f
  4393  0402  0CF3               	rrf	(___awdiv@divisor),f
  4394  0403  0CF2               	addlw	-1
  4395  0404  3EFF               	skipz
  4396  0405  1D03               	goto	u1615
  4397  0406  2C01               	line	36
  4398                           	
  4399                           l2196:	
  4400  0407                     	movlw	01h
  4401  0407  3001               	subwf	(___awdiv@counter),f
  4402  0408  02BF               	btfss	status,2
  4403  0409  1D03               	goto	u1621
  4404  040A  2C0C               	goto	u1620
  4405  040B  2C0D               u1621:
  4406  040C                     	goto	l2188
  4407  040C  2BE7               u1620:
  4408  040D                     	goto	l2198
  4409  040D  2C0F               	
  4410                           l602:	
  4411  040E                     	goto	l2198
  4412  040E  2C0F               	line	37
  4413                           	
  4414                           l596:	
  4415  040F                     	line	38
  4416                           	
  4417                           l2198:	
  4418  040F                     	movf	((___awdiv@sign)),w
  4419  040F  0840               	btfsc	status,2
  4420  0410  1903               	goto	u1631
  4421  0411  2C13               	goto	u1630
  4422  0412  2C14               u1631:
  4423  0413                     	goto	l2202
  4424  0413  2C1A               u1630:
  4425  0414                     	line	39
  4426                           	
  4427                           l2200:	
  4428  0414                     	comf	(___awdiv@quotient),f
  4429  0414  09C1               	comf	(___awdiv@quotient+1),f
  4430  0415  09C2               	incf	(___awdiv@quotient),f
  4431  0416  0AC1               	skipnz
  4432  0417  1903               	incf	(___awdiv@quotient+1),f
  4433  0418  0AC2               	goto	l2202
  4434  0419  2C1A               	
  4435                           l603:	
  4436  041A                     	line	40
  4437                           	
  4438                           l2202:	
  4439  041A                     	movf	(___awdiv@quotient+1),w
  4440  041A  0842               	movwf	(?___awdiv+1)
  4441  041B  00F3               	movf	(___awdiv@quotient),w
  4442  041C  0841               	movwf	(?___awdiv)
  4443  041D  00F2               	goto	l604
  4444  041E  2C1F               	
  4445                           l2204:	
  4446  041F                     	line	41
  4447                           	
  4448                           l604:	
  4449  041F                     	return
  4450  041F  0008               	opt stack 0
  4451                           GLOBAL	__end_of___awdiv
  4452                           	__end_of___awdiv:
  4453  0420                     	signat	___awdiv,8314
  4454                           	global	_lcd_init
  4455                           
  4456 ;; *************** function _lcd_init *****************
  4457 ;; Defined at:
  4458 ;;		line 123 in file "lcd.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;		None
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;		None
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg, status,2, status,0, pclath, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4472 ;;      Params:         0       0       0       0       0
  4473 ;;      Locals:         0       0       0       0       0
  4474 ;;      Temps:          0       0       0       0       0
  4475 ;;      Totals:         0       0       0       0       0
  4476 ;;Total ram usage:        0 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    3
  4479 ;; This function calls:
  4480 ;;		_delay
  4481 ;;		_lcd_instReg
  4482 ;; This function is called by:
  4483 ;;		_main
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4487                           	file	"lcd.c"
  4488                           	line	123
  4489                           global __ptext9
  4490                           __ptext9:	;psect for function _lcd_init
  4491  0483                     psect	text9
  4492                           	file	"lcd.c"
  4493                           	line	123
  4494                           	global	__size_of_lcd_init
  4495                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  4496  003F                     	
  4497                           _lcd_init:	
  4498  0483                     ;incstack = 0
  4499                           	opt	stack 4
  4500                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4501                           	line	125
  4502                           	
  4503                           l1918:	
  4504  0483                     ;lcd.c: 125:     delay(100);
  4505                           	movlw	064h
  4506  0483  3064               	movwf	(delay@t)
  4507  0484  00F2               	movlw	0
  4508  0485  3000               	movwf	((delay@t))+1
  4509  0486  00F3               	fcall	_delay
  4510  0487  120A  118A  25AC  120A  118A  	line	126
  4511                           	
  4512                           l1920:	
  4513  048C                     ;lcd.c: 126:     TRISDbits.TRISD4 = 0;
  4514                           	bsf	status, 5	;RP0=1, select bank1
  4515  048C  1683               	bcf	status, 6	;RP1=0, select bank1
  4516  048D  1303               	bcf	(136)^080h,4	;volatile
  4517  048E  1208               	line	127
  4518                           	
  4519                           l1922:	
  4520  048F                     ;lcd.c: 127:     TRISDbits.TRISD5 = 0;
  4521                           	bcf	(136)^080h,5	;volatile
  4522  048F  1288               	line	128
  4523                           	
  4524                           l1924:	
  4525  0490                     ;lcd.c: 128:     TRISDbits.TRISD0 = 0;
  4526                           	bcf	(136)^080h,0	;volatile
  4527  0490  1008               	line	129
  4528                           	
  4529                           l1926:	
  4530  0491                     ;lcd.c: 129:     TRISDbits.TRISD1 = 0;
  4531                           	bcf	(136)^080h,1	;volatile
  4532  0491  1088               	line	130
  4533                           	
  4534                           l1928:	
  4535  0492                     ;lcd.c: 130:     TRISDbits.TRISD2 = 0;
  4536                           	bcf	(136)^080h,2	;volatile
  4537  0492  1108               	line	131
  4538                           	
  4539                           l1930:	
  4540  0493                     ;lcd.c: 131:     TRISDbits.TRISD3 = 0;
  4541                           	bcf	(136)^080h,3	;volatile
  4542  0493  1188               	line	133
  4543                           ;lcd.c: 133:     delay(100);
  4544                           	movlw	064h
  4545  0494  3064               	movwf	(delay@t)
  4546  0495  00F2               	movlw	0
  4547  0496  3000               	movwf	((delay@t))+1
  4548  0497  00F3               	fcall	_delay
  4549  0498  120A  118A  25AC  120A  118A  	line	134
  4550                           	
  4551                           l1932:	
  4552  049D                     ;lcd.c: 134:     PORTDbits.RD5 = 1;
  4553                           	bcf	status, 5	;RP0=0, select bank0
  4554  049D  1283               	bcf	status, 6	;RP1=0, select bank0
  4555  049E  1303               	bsf	(8),5	;volatile
  4556  049F  1688               	line	135
  4557                           ;lcd.c: 135:     lcd_instReg( 0x20|0x00|0x08 );
  4558                           	movlw	low(028h)
  4559  04A0  3028               	fcall	_lcd_instReg
  4560  04A1  120A  118A  2331  120A  118A  	line	136
  4561                           ;lcd.c: 136:     lcd_instReg( 0x08|0x04|0x00|0x00 );
  4562                           	movlw	low(0Ch)
  4563  04A6  300C               	fcall	_lcd_instReg
  4564  04A7  120A  118A  2331  120A  118A  	line	137
  4565                           ;lcd.c: 137:     lcd_instReg( 0x01 );
  4566                           	movlw	low(01h)
  4567  04AC  3001               	fcall	_lcd_instReg
  4568  04AD  120A  118A  2331  120A  118A  	line	138
  4569                           ;lcd.c: 138:     lcd_instReg( 0x02 );
  4570                           	movlw	low(02h)
  4571  04B2  3002               	fcall	_lcd_instReg
  4572  04B3  120A  118A  2331  120A  118A  	line	139
  4573                           ;lcd.c: 139:     delay(100);
  4574                           	movlw	064h
  4575  04B8  3064               	movwf	(delay@t)
  4576  04B9  00F2               	movlw	0
  4577  04BA  3000               	movwf	((delay@t))+1
  4578  04BB  00F3               	fcall	_delay
  4579  04BC  120A  118A  25AC  120A  118A  	line	140
  4580                           	
  4581                           l185:	
  4582  04C1                     	return
  4583  04C1  0008               	opt stack 0
  4584                           GLOBAL	__end_of_lcd_init
  4585                           	__end_of_lcd_init:
  4586  04C2                     	signat	_lcd_init,89
  4587                           	global	_lcd_instReg
  4588                           
  4589 ;; *************** function _lcd_instReg *****************
  4590 ;; Defined at:
  4591 ;;		line 60 in file "lcd.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;  i               1    wreg     unsigned char 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  i               1    4[COMMON] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4605 ;;      Params:         0       0       0       0       0
  4606 ;;      Locals:         1       0       0       0       0
  4607 ;;      Temps:          2       0       0       0       0
  4608 ;;      Totals:         3       0       0       0       0
  4609 ;;Total ram usage:        3 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    2
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_lcd_lincol
  4616 ;;		_lcd_init
  4617 ;;		_lcd_clr
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  4621                           	line	60
  4622                           global __ptext10
  4623                           __ptext10:	;psect for function _lcd_instReg
  4624  0331                     psect	text10
  4625                           	file	"lcd.c"
  4626                           	line	60
  4627                           	global	__size_of_lcd_instReg
  4628                           	__size_of_lcd_instReg	equ	__end_of_lcd_instReg-_lcd_instReg
  4629  007C                     	
  4630                           _lcd_instReg:	
  4631  0331                     ;incstack = 0
  4632                           	opt	stack 3
  4633                           ; Regs used in _lcd_instReg: [wreg+status,2+status,0]
  4634                           ;lcd_instReg@i stored from wreg
  4635                           	movwf	(lcd_instReg@i)
  4636  0331  00F4               	line	62
  4637                           	
  4638                           l1768:	
  4639  0332                     ;lcd.c: 60: void lcd_instReg( unsigned char i );lcd.c: 61: {;lcd.c: 62:     PORTDbits.RD
                                 4 = 0;
  4640                           	bcf	status, 5	;RP0=0, select bank0
  4641  0332  1283               	bcf	status, 6	;RP1=0, select bank0
  4642  0333  1303               	bcf	(8),4	;volatile
  4643  0334  1208               	line	63
  4644                           	
  4645                           l1770:	
  4646  0335                     ;lcd.c: 63:     PORTD = ((PORTD & 0xF0)|(i>>4&0x0F));
  4647                           	movf	(lcd_instReg@i),w
  4648  0335  0874               	movwf	(??_lcd_instReg+0)+0
  4649  0336  00F2               	movlw	04h
  4650  0337  3004               u955:
  4651  0338                     	clrc
  4652  0338  1003               	rrf	(??_lcd_instReg+0)+0,f
  4653  0339  0CF2               	addlw	-1
  4654  033A  3EFF               	skipz
  4655  033B  1D03               	goto	u955
  4656  033C  2B38               	movlw	low(0Fh)
  4657  033D  300F               	andwf	0+(??_lcd_instReg+0)+0,w
  4658  033E  0572               	movwf	(??_lcd_instReg+1)+0
  4659  033F  00F3               	movf	(8),w	;volatile
  4660  0340  0808               	andlw	0F0h
  4661  0341  39F0               	iorwf	0+(??_lcd_instReg+1)+0,w
  4662  0342  0473               	movwf	(8)	;volatile
  4663  0343  0088               	line	65
  4664                           	
  4665                           l1772:	
  4666  0344                     ;lcd.c: 65:     PORTDbits.RD5 = 0;
  4667                           	bcf	(8),5	;volatile
  4668  0344  1288               	line	66
  4669                           ;lcd.c: 66:     if( i == 0x01 || i == 0x02 )
  4670                           		decf	((lcd_instReg@i)),w
  4671  0345  0374               	btfsc	status,2
  4672  0346  1903               	goto	u961
  4673  0347  2B49               	goto	u960
  4674  0348  2B4A               u961:
  4675  0349                     	goto	l1776
  4676  0349  2B51               u960:
  4677  034A                     	
  4678                           l1774:	
  4679  034A                     		movlw	2
  4680  034A  3002               	xorwf	((lcd_instReg@i)),w
  4681  034B  0674               	btfss	status,2
  4682  034C  1D03               	goto	u971
  4683  034D  2B4F               	goto	u970
  4684  034E  2B50               u971:
  4685  034F                     	goto	l1778
  4686  034F  2B5B               u970:
  4687  0350                     	goto	l1776
  4688  0350  2B51               	
  4689                           l169:	
  4690  0351                     	line	67
  4691                           	
  4692                           l1776:	
  4693  0351                     ;lcd.c: 67:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4694                           	opt asmopt_push
  4695                           opt asmopt_off
  4696                           movlw	3
  4697  0351  3003               movwf	((??_lcd_instReg+0)+0+1),f
  4698  0352  00F3               	movlw	151
  4699  0353  3097               movwf	((??_lcd_instReg+0)+0),f
  4700  0354  00F2               	u1907:
  4701  0355                     decfsz	((??_lcd_instReg+0)+0),f
  4702  0355  0BF2               	goto	u1907
  4703  0356  2B55               	decfsz	((??_lcd_instReg+0)+0+1),f
  4704  0357  0BF3               	goto	u1907
  4705  0358  2B55               	nop2
  4706  0359  2B5A               opt asmopt_pop
  4707                           
  4708                           	goto	l1780
  4709  035A  2B60               	line	68
  4710                           ;lcd.c: 68:     else
  4711                           	
  4712                           l167:	
  4713  035B                     	line	69
  4714                           	
  4715                           l1778:	
  4716  035B                     ;lcd.c: 69:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  4717                           	opt asmopt_push
  4718                           opt asmopt_off
  4719                           	movlw	13
  4720  035B  300D               movwf	((??_lcd_instReg+0)+0),f
  4721  035C  00F2               	u1917:
  4722  035D                     decfsz	(??_lcd_instReg+0)+0,f
  4723  035D  0BF2               	goto	u1917
  4724  035E  2B5D               opt asmopt_pop
  4725                           
  4726                           	goto	l1780
  4727  035F  2B60               	
  4728                           l170:	
  4729  0360                     	line	70
  4730                           	
  4731                           l1780:	
  4732  0360                     ;lcd.c: 70:     PORTDbits.RD5 = 1;
  4733                           	bcf	status, 5	;RP0=0, select bank0
  4734  0360  1283               	bcf	status, 6	;RP1=0, select bank0
  4735  0361  1303               	bsf	(8),5	;volatile
  4736  0362  1688               	line	73
  4737                           	
  4738                           l1782:	
  4739  0363                     ;lcd.c: 73:     if( (i & 0xF0) == (0x20 | 0x00) )
  4740                           	movlw	low(0F0h)
  4741  0363  30F0               	andwf	(lcd_instReg@i),w
  4742  0364  0574               	movwf	(??_lcd_instReg+0)+0
  4743  0365  00F2               		movlw	32
  4744  0366  3020               	xorwf	((??_lcd_instReg+0)+0),w
  4745  0367  0672               	btfss	status,2
  4746  0368  1D03               	goto	u981
  4747  0369  2B6B               	goto	u980
  4748  036A  2B6C               u981:
  4749  036B                     	goto	l1794
  4750  036B  2B85               u980:
  4751  036C                     	line	75
  4752                           	
  4753                           l1784:	
  4754  036C                     ;lcd.c: 74:     {;lcd.c: 75:         PORTDbits.RD4 = 0;
  4755                           	bcf	(8),4	;volatile
  4756  036C  1208               	line	76
  4757                           	
  4758                           l1786:	
  4759  036D                     ;lcd.c: 76:         PORTD = ((PORTD & 0xF0)|(i>>4&0x0F));
  4760                           	movf	(lcd_instReg@i),w
  4761  036D  0874               	movwf	(??_lcd_instReg+0)+0
  4762  036E  00F2               	movlw	04h
  4763  036F  3004               u995:
  4764  0370                     	clrc
  4765  0370  1003               	rrf	(??_lcd_instReg+0)+0,f
  4766  0371  0CF2               	addlw	-1
  4767  0372  3EFF               	skipz
  4768  0373  1D03               	goto	u995
  4769  0374  2B70               	movlw	low(0Fh)
  4770  0375  300F               	andwf	0+(??_lcd_instReg+0)+0,w
  4771  0376  0572               	movwf	(??_lcd_instReg+1)+0
  4772  0377  00F3               	movf	(8),w	;volatile
  4773  0378  0808               	andlw	0F0h
  4774  0379  39F0               	iorwf	0+(??_lcd_instReg+1)+0,w
  4775  037A  0473               	movwf	(8)	;volatile
  4776  037B  0088               	line	77
  4777                           	
  4778                           l1788:	
  4779  037C                     ;lcd.c: 77:         PORTDbits.RD5 = 0;
  4780                           	bcf	(8),5	;volatile
  4781  037C  1288               	line	78
  4782                           	
  4783                           l1790:	
  4784  037D                     ;lcd.c: 78:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  4785                           	opt asmopt_push
  4786                           opt asmopt_off
  4787                           	movlw	13
  4788  037D  300D               movwf	((??_lcd_instReg+0)+0),f
  4789  037E  00F2               	u1927:
  4790  037F                     decfsz	(??_lcd_instReg+0)+0,f
  4791  037F  0BF2               	goto	u1927
  4792  0380  2B7F               opt asmopt_pop
  4793                           
  4794                           	line	79
  4795                           	
  4796                           l1792:	
  4797  0381                     ;lcd.c: 79:         PORTDbits.RD5 = 1;
  4798                           	bcf	status, 5	;RP0=0, select bank0
  4799  0381  1283               	bcf	status, 6	;RP1=0, select bank0
  4800  0382  1303               	bsf	(8),5	;volatile
  4801  0383  1688               	goto	l1794
  4802  0384  2B85               	line	80
  4803                           ;lcd.c: 80:     }
  4804                           	
  4805                           l171:	
  4806  0385                     	line	82
  4807                           	
  4808                           l1794:	
  4809  0385                     ;lcd.c: 82:     PORTDbits.RD4 = 0;
  4810                           	bcf	(8),4	;volatile
  4811  0385  1208               	line	83
  4812                           	
  4813                           l1796:	
  4814  0386                     ;lcd.c: 83:     PORTD = ((PORTD & 0xF0)|(i&0x0F));
  4815                           	movlw	low(0Fh)
  4816  0386  300F               	andwf	(lcd_instReg@i),w
  4817  0387  0574               	movwf	(??_lcd_instReg+0)+0
  4818  0388  00F2               	movf	(8),w	;volatile
  4819  0389  0808               	andlw	0F0h
  4820  038A  39F0               	iorwf	0+(??_lcd_instReg+0)+0,w
  4821  038B  0472               	movwf	(8)	;volatile
  4822  038C  0088               	line	84
  4823                           	
  4824                           l1798:	
  4825  038D                     ;lcd.c: 84:     PORTDbits.RD5 = 0;
  4826                           	bcf	(8),5	;volatile
  4827  038D  1288               	line	85
  4828                           	
  4829                           l1800:	
  4830  038E                     ;lcd.c: 85:     if( i == 0x01 || i == 0x02 )
  4831                           		decf	((lcd_instReg@i)),w
  4832  038E  0374               	btfsc	status,2
  4833  038F  1903               	goto	u1001
  4834  0390  2B92               	goto	u1000
  4835  0391  2B93               u1001:
  4836  0392                     	goto	l1804
  4837  0392  2B9A               u1000:
  4838  0393                     	
  4839                           l1802:	
  4840  0393                     		movlw	2
  4841  0393  3002               	xorwf	((lcd_instReg@i)),w
  4842  0394  0674               	btfss	status,2
  4843  0395  1D03               	goto	u1011
  4844  0396  2B98               	goto	u1010
  4845  0397  2B99               u1011:
  4846  0398                     	goto	l1806
  4847  0398  2BA4               u1010:
  4848  0399                     	goto	l1804
  4849  0399  2B9A               	
  4850                           l174:	
  4851  039A                     	line	86
  4852                           	
  4853                           l1804:	
  4854  039A                     ;lcd.c: 86:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4855                           	opt asmopt_push
  4856                           opt asmopt_off
  4857                           movlw	3
  4858  039A  3003               movwf	((??_lcd_instReg+0)+0+1),f
  4859  039B  00F3               	movlw	151
  4860  039C  3097               movwf	((??_lcd_instReg+0)+0),f
  4861  039D  00F2               	u1937:
  4862  039E                     decfsz	((??_lcd_instReg+0)+0),f
  4863  039E  0BF2               	goto	u1937
  4864  039F  2B9E               	decfsz	((??_lcd_instReg+0)+0+1),f
  4865  03A0  0BF3               	goto	u1937
  4866  03A1  2B9E               	nop2
  4867  03A2  2BA3               opt asmopt_pop
  4868                           
  4869                           	goto	l1808
  4870  03A3  2BA9               	line	87
  4871                           ;lcd.c: 87:     else
  4872                           	
  4873                           l172:	
  4874  03A4                     	line	88
  4875                           	
  4876                           l1806:	
  4877  03A4                     ;lcd.c: 88:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  4878                           	opt asmopt_push
  4879                           opt asmopt_off
  4880                           	movlw	13
  4881  03A4  300D               movwf	((??_lcd_instReg+0)+0),f
  4882  03A5  00F2               	u1947:
  4883  03A6                     decfsz	(??_lcd_instReg+0)+0,f
  4884  03A6  0BF2               	goto	u1947
  4885  03A7  2BA6               opt asmopt_pop
  4886                           
  4887                           	goto	l1808
  4888  03A8  2BA9               	
  4889                           l175:	
  4890  03A9                     	line	89
  4891                           	
  4892                           l1808:	
  4893  03A9                     ;lcd.c: 89:     PORTDbits.RD5 = 1;
  4894                           	bcf	status, 5	;RP0=0, select bank0
  4895  03A9  1283               	bcf	status, 6	;RP1=0, select bank0
  4896  03AA  1303               	bsf	(8),5	;volatile
  4897  03AB  1688               	line	90
  4898                           	
  4899                           l176:	
  4900  03AC                     	return
  4901  03AC  0008               	opt stack 0
  4902                           GLOBAL	__end_of_lcd_instReg
  4903                           	__end_of_lcd_instReg:
  4904  03AD                     	signat	_lcd_instReg,4217
  4905                           	global	_delay
  4906                           
  4907 ;; *************** function _delay *****************
  4908 ;; Defined at:
  4909 ;;		line 7 in file "delay.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  t               2    2[COMMON] unsigned int 
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;		None
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      void 
  4916 ;; Registers used:
  4917 ;;		wreg, status,2, status,0
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4923 ;;      Params:         2       0       0       0       0
  4924 ;;      Locals:         0       0       0       0       0
  4925 ;;      Temps:          1       0       0       0       0
  4926 ;;      Totals:         3       0       0       0       0
  4927 ;;Total ram usage:        3 bytes
  4928 ;; Hardware stack levels used:    1
  4929 ;; Hardware stack levels required when called:    2
  4930 ;; This function calls:
  4931 ;;		Nothing
  4932 ;; This function is called by:
  4933 ;;		_lcd_init
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4937                           	file	"delay.c"
  4938                           	line	7
  4939                           global __ptext11
  4940                           __ptext11:	;psect for function _delay
  4941  05AC                     psect	text11
  4942                           	file	"delay.c"
  4943                           	line	7
  4944                           	global	__size_of_delay
  4945                           	__size_of_delay	equ	__end_of_delay-_delay
  4946  0017                     	
  4947                           _delay:	
  4948  05AC                     ;incstack = 0
  4949                           	opt	stack 4
  4950                           ; Regs used in _delay: [wreg+status,2+status,0]
  4951                           	line	9
  4952                           	
  4953                           l1810:	
  4954  05AC                     ;delay.c: 7: void delay( unsigned int t );delay.c: 8: {;delay.c: 9:     while( t )
  4955                           	goto	l1814
  4956  05AC  2DBB               	
  4957                           l152:	
  4958  05AD                     	line	11
  4959                           	
  4960                           l1812:	
  4961  05AD                     ;delay.c: 10:     {;delay.c: 11:         _delay((unsigned long)((1)*(4000000/4000.0)));

  4962                           	opt asmopt_push
  4963                           opt asmopt_off
  4964                           	movlw	199
  4965  05AD  30C7               movwf	((??_delay+0)+0),f
  4966  05AE  00F4               	u1957:
  4967  05AF                     	nop2
  4968  05AF  2DB0               decfsz	(??_delay+0)+0,f
  4969  05B0  0BF4               	goto	u1957
  4970  05B1  2DAF               	nop2
  4971  05B2  2DB3               	nop2
  4972  05B3  2DB4               opt asmopt_pop
  4973                           
  4974                           	line	12
  4975                           ;delay.c: 12:         --t;
  4976                           	movlw	01h
  4977  05B4  3001               	subwf	(delay@t),f
  4978  05B5  02F2               	movlw	0
  4979  05B6  3000               	skipc
  4980  05B7  1C03               	decf	(delay@t+1),f
  4981  05B8  03F3               	subwf	(delay@t+1),f
  4982  05B9  02F3               	goto	l1814
  4983  05BA  2DBB               	line	13
  4984                           ;delay.c: 13:     }
  4985                           	
  4986                           l151:	
  4987  05BB                     	line	9
  4988                           	
  4989                           l1814:	
  4990  05BB                     ;delay.c: 9:     while( t )
  4991                           	movf	((delay@t)),w
  4992  05BB  0872               iorwf	((delay@t+1)),w
  4993  05BC  0473               	btfss	status,2
  4994  05BD  1D03               	goto	u1021
  4995  05BE  2DC0               	goto	u1020
  4996  05BF  2DC1               u1021:
  4997  05C0                     	goto	l1812
  4998  05C0  2DAD               u1020:
  4999  05C1                     	goto	l154
  5000  05C1  2DC2               	
  5001                           l153:	
  5002  05C2                     	line	14
  5003                           	
  5004                           l154:	
  5005  05C2                     	return
  5006  05C2  0008               	opt stack 0
  5007                           GLOBAL	__end_of_delay
  5008                           	__end_of_delay:
  5009  05C3                     	signat	_delay,4217
  5010                           	global	_habTemporizador
  5011                           
  5012 ;; *************** function _habTemporizador *****************
  5013 ;; Defined at:
  5014 ;;		line 36 in file "tempo.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;  t               1    wreg     PTR struct temporizadorT
  5017 ;;		 -> tempo(24), 
  5018 ;;  h               1    2[COMMON] unsigned char 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;  t               1    4[COMMON] PTR struct temporizadorT
  5021 ;;		 -> tempo(24), 
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  1    wreg      void 
  5024 ;; Registers used:
  5025 ;;		wreg, fsr0l, fsr0h
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5031 ;;      Params:         1       0       0       0       0
  5032 ;;      Locals:         1       0       0       0       0
  5033 ;;      Temps:          1       0       0       0       0
  5034 ;;      Totals:         3       0       0       0       0
  5035 ;;Total ram usage:        3 bytes
  5036 ;; Hardware stack levels used:    1
  5037 ;; Hardware stack levels required when called:    2
  5038 ;; This function calls:
  5039 ;;		Nothing
  5040 ;; This function is called by:
  5041 ;;		_main
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5045                           	file	"tempo.c"
  5046                           	line	36
  5047                           global __ptext12
  5048                           __ptext12:	;psect for function _habTemporizador
  5049  065D                     psect	text12
  5050                           	file	"tempo.c"
  5051                           	line	36
  5052                           	global	__size_of_habTemporizador
  5053                           	__size_of_habTemporizador	equ	__end_of_habTemporizador-_habTemporizador
  5054  0009                     	
  5055                           _habTemporizador:	
  5056  065D                     ;incstack = 0
  5057                           	opt	stack 5
  5058                           ; Regs used in _habTemporizador: [wregfsr0]
  5059                           ;habTemporizador@t stored from wreg
  5060                           	movwf	(habTemporizador@t)
  5061  065D  00F4               	line	38
  5062                           	
  5063                           l1950:	
  5064  065E                     ;tempo.c: 36: void habTemporizador( struct temporizadorT * t, unsigned char h );tempo.c:
                                  37: {;tempo.c: 38:     t->hab = h;
  5065                           	movf	(habTemporizador@h),w
  5066  065E  0872               	movwf	(??_habTemporizador+0)+0
  5067  065F  00F3               	movf	(habTemporizador@t),w
  5068  0660  0874               	movwf	fsr0
  5069  0661  0084               	movf	(??_habTemporizador+0)+0,w
  5070  0662  0873               	bcf	status, 7	;select IRP bank0
  5071  0663  1383               	movwf	indf
  5072  0664  0080               	line	39
  5073                           	
  5074                           l221:	
  5075  0665                     	return
  5076  0665  0008               	opt stack 0
  5077                           GLOBAL	__end_of_habTemporizador
  5078                           	__end_of_habTemporizador:
  5079  0666                     	signat	_habTemporizador,8313
  5080                           	global	_botao_init
  5081                           
  5082 ;; *************** function _botao_init *****************
  5083 ;; Defined at:
  5084 ;;		line 9 in file "botao.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;		None
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;		None
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      void 
  5091 ;; Registers used:
  5092 ;;		None
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5098 ;;      Params:         0       0       0       0       0
  5099 ;;      Locals:         0       0       0       0       0
  5100 ;;      Temps:          0       0       0       0       0
  5101 ;;      Totals:         0       0       0       0       0
  5102 ;;Total ram usage:        0 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:    2
  5105 ;; This function calls:
  5106 ;;		Nothing
  5107 ;; This function is called by:
  5108 ;;		_main
  5109 ;;		_teclado_init
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5113                           	file	"botao.c"
  5114                           	line	9
  5115                           global __ptext13
  5116                           __ptext13:	;psect for function _botao_init
  5117  0676                     psect	text13
  5118                           	file	"botao.c"
  5119                           	line	9
  5120                           	global	__size_of_botao_init
  5121                           	__size_of_botao_init	equ	__end_of_botao_init-_botao_init
  5122  0007                     	
  5123                           _botao_init:	
  5124  0676                     ;incstack = 0
  5125                           	opt	stack 5
  5126                           ; Regs used in _botao_init: []
  5127                           	line	11
  5128                           	
  5129                           l1276:	
  5130  0676                     ;botao.c: 11:     TRISAbits.TRISA0= 1;
  5131                           	bsf	status, 5	;RP0=1, select bank1
  5132  0676  1683               	bcf	status, 6	;RP1=0, select bank1
  5133  0677  1303               	bsf	(133)^080h,0	;volatile
  5134  0678  1405               	line	12
  5135                           ;botao.c: 12:     TRISAbits.TRISA1 = 1;
  5136                           	bsf	(133)^080h,1	;volatile
  5137  0679  1485               	line	13
  5138                           ;botao.c: 13:     TRISAbits.TRISA2 = 1;
  5139                           	bsf	(133)^080h,2	;volatile
  5140  067A  1505               	line	14
  5141                           ;botao.c: 14:     TRISAbits.TRISA3 = 1;
  5142                           	bsf	(133)^080h,3	;volatile
  5143  067B  1585               	line	15
  5144                           	
  5145                           l231:	
  5146  067C                     	return
  5147  067C  0008               	opt stack 0
  5148                           GLOBAL	__end_of_botao_init
  5149                           	__end_of_botao_init:
  5150  067D                     	signat	_botao_init,89
  5151                           	global	_b3
  5152                           
  5153 ;; *************** function _b3 *****************
  5154 ;; Defined at:
  5155 ;;		line 126 in file "botao.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;		None
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;		None
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  1    wreg      unsigned char 
  5162 ;; Registers used:
  5163 ;;		wreg, status,0
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5169 ;;      Params:         0       0       0       0       0
  5170 ;;      Locals:         0       0       0       0       0
  5171 ;;      Temps:          0       0       0       0       0
  5172 ;;      Totals:         0       0       0       0       0
  5173 ;;Total ram usage:        0 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:    2
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_main
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5183                           	line	126
  5184                           global __ptext14
  5185                           __ptext14:	;psect for function _b3
  5186  062B                     psect	text14
  5187                           	file	"botao.c"
  5188                           	line	126
  5189                           	global	__size_of_b3
  5190                           	__size_of_b3	equ	__end_of_b3-_b3
  5191  000A                     	
  5192                           _b3:	
  5193  062B                     ;incstack = 0
  5194                           	opt	stack 5
  5195                           ; Regs used in _b3: [wreg+status,0]
  5196                           	line	128
  5197                           	
  5198                           l1328:	
  5199  062B                     ;botao.c: 128:     return( !PORTAbits.RA3 );
  5200                           	clrc
  5201  062B  1003               	bcf	status, 5	;RP0=0, select bank0
  5202  062C  1283               	bcf	status, 6	;RP1=0, select bank0
  5203  062D  1303               	btfss	(5),3	;volatile
  5204  062E  1D85               	setc
  5205  062F  1403               	movlw	0
  5206  0630  3000               	skipnc
  5207  0631  1803               	movlw	1
  5208  0632  3001               
  5209                           	goto	l294
  5210  0633  2E34               	
  5211                           l1330:	
  5212  0634                     	line	129
  5213                           	
  5214                           l294:	
  5215  0634                     	return
  5216  0634  0008               	opt stack 0
  5217                           GLOBAL	__end_of_b3
  5218                           	__end_of_b3:
  5219  0635                     	signat	_b3,89
  5220                           	global	_b2
  5221                           
  5222 ;; *************** function _b2 *****************
  5223 ;; Defined at:
  5224 ;;		line 92 in file "botao.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;		None
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;		None
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  1    wreg      unsigned char 
  5231 ;; Registers used:
  5232 ;;		wreg, status,0
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5238 ;;      Params:         0       0       0       0       0
  5239 ;;      Locals:         0       0       0       0       0
  5240 ;;      Temps:          0       0       0       0       0
  5241 ;;      Totals:         0       0       0       0       0
  5242 ;;Total ram usage:        0 bytes
  5243 ;; Hardware stack levels used:    1
  5244 ;; Hardware stack levels required when called:    2
  5245 ;; This function calls:
  5246 ;;		Nothing
  5247 ;; This function is called by:
  5248 ;;		_main
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5252                           	line	92
  5253                           global __ptext15
  5254                           __ptext15:	;psect for function _b2
  5255  0635                     psect	text15
  5256                           	file	"botao.c"
  5257                           	line	92
  5258                           	global	__size_of_b2
  5259                           	__size_of_b2	equ	__end_of_b2-_b2
  5260  000A                     	
  5261                           _b2:	
  5262  0635                     ;incstack = 0
  5263                           	opt	stack 5
  5264                           ; Regs used in _b2: [wreg+status,0]
  5265                           	line	94
  5266                           	
  5267                           l1324:	
  5268  0635                     ;botao.c: 94:     return( !PORTAbits.RA2 );
  5269                           	clrc
  5270  0635  1003               	bcf	status, 5	;RP0=0, select bank0
  5271  0636  1283               	bcf	status, 6	;RP1=0, select bank0
  5272  0637  1303               	btfss	(5),2	;volatile
  5273  0638  1D05               	setc
  5274  0639  1403               	movlw	0
  5275  063A  3000               	skipnc
  5276  063B  1803               	movlw	1
  5277  063C  3001               
  5278                           	goto	l274
  5279  063D  2E3E               	
  5280                           l1326:	
  5281  063E                     	line	95
  5282                           	
  5283                           l274:	
  5284  063E                     	return
  5285  063E  0008               	opt stack 0
  5286                           GLOBAL	__end_of_b2
  5287                           	__end_of_b2:
  5288  063F                     	signat	_b2,89
  5289                           	global	_b1
  5290                           
  5291 ;; *************** function _b1 *****************
  5292 ;; Defined at:
  5293 ;;		line 58 in file "botao.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;		None
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;		None
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      unsigned char 
  5300 ;; Registers used:
  5301 ;;		wreg, status,0
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5307 ;;      Params:         0       0       0       0       0
  5308 ;;      Locals:         0       0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0
  5310 ;;      Totals:         0       0       0       0       0
  5311 ;;Total ram usage:        0 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    2
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_main
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5321                           	line	58
  5322                           global __ptext16
  5323                           __ptext16:	;psect for function _b1
  5324  063F                     psect	text16
  5325                           	file	"botao.c"
  5326                           	line	58
  5327                           	global	__size_of_b1
  5328                           	__size_of_b1	equ	__end_of_b1-_b1
  5329  000A                     	
  5330                           _b1:	
  5331  063F                     ;incstack = 0
  5332                           	opt	stack 5
  5333                           ; Regs used in _b1: [wreg+status,0]
  5334                           	line	60
  5335                           	
  5336                           l1320:	
  5337  063F                     ;botao.c: 60:    return( !PORTAbits.RA1 );
  5338                           	clrc
  5339  063F  1003               	bcf	status, 5	;RP0=0, select bank0
  5340  0640  1283               	bcf	status, 6	;RP1=0, select bank0
  5341  0641  1303               	btfss	(5),1	;volatile
  5342  0642  1C85               	setc
  5343  0643  1403               	movlw	0
  5344  0644  3000               	skipnc
  5345  0645  1803               	movlw	1
  5346  0646  3001               
  5347                           	goto	l254
  5348  0647  2E48               	
  5349                           l1322:	
  5350  0648                     	line	61
  5351                           	
  5352                           l254:	
  5353  0648                     	return
  5354  0648  0008               	opt stack 0
  5355                           GLOBAL	__end_of_b1
  5356                           	__end_of_b1:
  5357  0649                     	signat	_b1,89
  5358                           	global	_b0
  5359                           
  5360 ;; *************** function _b0 *****************
  5361 ;; Defined at:
  5362 ;;		line 20 in file "botao.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;		None
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;		None
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      unsigned char 
  5369 ;; Registers used:
  5370 ;;		wreg, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5376 ;;      Params:         0       0       0       0       0
  5377 ;;      Locals:         0       0       0       0       0
  5378 ;;      Temps:          0       0       0       0       0
  5379 ;;      Totals:         0       0       0       0       0
  5380 ;;Total ram usage:        0 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; Hardware stack levels required when called:    2
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_main
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5390                           	line	20
  5391                           global __ptext17
  5392                           __ptext17:	;psect for function _b0
  5393  0649                     psect	text17
  5394                           	file	"botao.c"
  5395                           	line	20
  5396                           	global	__size_of_b0
  5397                           	__size_of_b0	equ	__end_of_b0-_b0
  5398  000A                     	
  5399                           _b0:	
  5400  0649                     ;incstack = 0
  5401                           	opt	stack 5
  5402                           ; Regs used in _b0: [wreg+status,0]
  5403                           	line	22
  5404                           	
  5405                           l1314:	
  5406  0649                     ;botao.c: 22:     return( !PORTAbits.RA0 );
  5407                           	clrc
  5408  0649  1003               	bcf	status, 5	;RP0=0, select bank0
  5409  064A  1283               	bcf	status, 6	;RP1=0, select bank0
  5410  064B  1303               	btfss	(5),0	;volatile
  5411  064C  1C05               	setc
  5412  064D  1403               	movlw	0
  5413  064E  3000               	skipnc
  5414  064F  1803               	movlw	1
  5415  0650  3001               
  5416                           	goto	l234
  5417  0651  2E52               	
  5418                           l1316:	
  5419  0652                     	line	23
  5420                           	
  5421                           l234:	
  5422  0652                     	return
  5423  0652  0008               	opt stack 0
  5424                           GLOBAL	__end_of_b0
  5425                           	__end_of_b0:
  5426  0653                     	signat	_b0,89
  5427                           	global	_T0_status
  5428                           
  5429 ;; *************** function _T0_status *****************
  5430 ;; Defined at:
  5431 ;;		line 59 in file "timers.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;		None
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;		None
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  2    2[COMMON] unsigned int 
  5438 ;; Registers used:
  5439 ;;		wreg
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5445 ;;      Params:         2       0       0       0       0
  5446 ;;      Locals:         0       0       0       0       0
  5447 ;;      Temps:          0       0       0       0       0
  5448 ;;      Totals:         2       0       0       0       0
  5449 ;;Total ram usage:        2 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; Hardware stack levels required when called:    2
  5452 ;; This function calls:
  5453 ;;		Nothing
  5454 ;; This function is called by:
  5455 ;;		_main
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5459                           	file	"timers.c"
  5460                           	line	59
  5461                           global __ptext18
  5462                           __ptext18:	;psect for function _T0_status
  5463  066E                     psect	text18
  5464                           	file	"timers.c"
  5465                           	line	59
  5466                           	global	__size_of_T0_status
  5467                           	__size_of_T0_status	equ	__end_of_T0_status-_T0_status
  5468  0008                     	
  5469                           _T0_status:	
  5470  066E                     ;incstack = 0
  5471                           	opt	stack 5
  5472                           ; Regs used in _T0_status: [wreg]
  5473                           	line	61
  5474                           	
  5475                           l1952:	
  5476  066E                     ;timers.c: 61:     return( T0count );
  5477                           	bcf	status, 5	;RP0=0, select bank0
  5478  066E  1283               	bcf	status, 6	;RP1=0, select bank0
  5479  066F  1303               	movf	(_T0count+1),w
  5480  0670  0825               	movwf	(?_T0_status+1)
  5481  0671  00F3               	movf	(_T0count),w
  5482  0672  0824               	movwf	(?_T0_status)
  5483  0673  00F2               	goto	l90
  5484  0674  2E75               	
  5485                           l1954:	
  5486  0675                     	line	62
  5487                           	
  5488                           l90:	
  5489  0675                     	return
  5490  0675  0008               	opt stack 0
  5491                           GLOBAL	__end_of_T0_status
  5492                           	__end_of_T0_status:
  5493  0676                     	signat	_T0_status,90
  5494                           	global	_T0_start
  5495                           
  5496 ;; *************** function _T0_start *****************
  5497 ;; Defined at:
  5498 ;;		line 42 in file "timers.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  c               2    2[COMMON] unsigned int 
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;		None
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		wreg
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5512 ;;      Params:         2       0       0       0       0
  5513 ;;      Locals:         0       0       0       0       0
  5514 ;;      Temps:          0       0       0       0       0
  5515 ;;      Totals:         2       0       0       0       0
  5516 ;;Total ram usage:        2 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; Hardware stack levels required when called:    2
  5519 ;; This function calls:
  5520 ;;		Nothing
  5521 ;; This function is called by:
  5522 ;;		_main
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  5526                           	line	42
  5527                           global __ptext19
  5528                           __ptext19:	;psect for function _T0_start
  5529  0653                     psect	text19
  5530                           	file	"timers.c"
  5531                           	line	42
  5532                           	global	__size_of_T0_start
  5533                           	__size_of_T0_start	equ	__end_of_T0_start-_T0_start
  5534  000A                     	
  5535                           _T0_start:	
  5536  0653                     ;incstack = 0
  5537                           	opt	stack 5
  5538                           ; Regs used in _T0_start: [wreg]
  5539                           	line	44
  5540                           	
  5541                           l1946:	
  5542  0653                     ;timers.c: 42: void T0_start( unsigned int c );timers.c: 43: {;timers.c: 44:     TMR0 = 
                                 (256-250);
  5543                           	movlw	low(06h)
  5544  0653  3006               	bcf	status, 5	;RP0=0, select bank0
  5545  0654  1283               	bcf	status, 6	;RP1=0, select bank0
  5546  0655  1303               	movwf	(1)	;volatile
  5547  0656  0081               	line	45
  5548                           ;timers.c: 45:     T0count = c;
  5549                           	movf	(T0_start@c+1),w
  5550  0657  0873               	movwf	(_T0count+1)
  5551  0658  00A5               	movf	(T0_start@c),w
  5552  0659  0872               	movwf	(_T0count)
  5553  065A  00A4               	line	46
  5554                           	
  5555                           l1948:	
  5556  065B                     ;timers.c: 46:     INTCONbits.T0IE = 1;
  5557                           	bsf	(11),5	;volatile
  5558  065B  168B               	line	47
  5559                           	
  5560                           l81:	
  5561  065C                     	return
  5562  065C  0008               	opt stack 0
  5563                           GLOBAL	__end_of_T0_start
  5564                           	__end_of_T0_start:
  5565  065D                     	signat	_T0_start,4217
  5566                           	global	_T0_init
  5567                           
  5568 ;; *************** function _T0_init *****************
  5569 ;; Defined at:
  5570 ;;		line 21 in file "timers.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;		None
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;		None
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  1    wreg      void 
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5584 ;;      Params:         0       0       0       0       0
  5585 ;;      Locals:         0       0       0       0       0
  5586 ;;      Temps:          0       0       0       0       0
  5587 ;;      Totals:         0       0       0       0       0
  5588 ;;Total ram usage:        0 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    2
  5591 ;; This function calls:
  5592 ;;		Nothing
  5593 ;; This function is called by:
  5594 ;;		_main
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  5598                           	line	21
  5599                           global __ptext20
  5600                           __ptext20:	;psect for function _T0_init
  5601  05FC                     psect	text20
  5602                           	file	"timers.c"
  5603                           	line	21
  5604                           	global	__size_of_T0_init
  5605                           	__size_of_T0_init	equ	__end_of_T0_init-_T0_init
  5606  0010                     	
  5607                           _T0_init:	
  5608  05FC                     ;incstack = 0
  5609                           	opt	stack 5
  5610                           ; Regs used in _T0_init: [wreg+status,2+status,0]
  5611                           	line	23
  5612                           	
  5613                           l1264:	
  5614  05FC                     ;timers.c: 23:     INTCONbits.GIE = 0;
  5615                           	bcf	(11),7	;volatile
  5616  05FC  138B               	line	24
  5617                           ;timers.c: 24:     OPTION_REGbits.PSA = 0;
  5618                           	bsf	status, 5	;RP0=1, select bank1
  5619  05FD  1683               	bcf	status, 6	;RP1=0, select bank1
  5620  05FE  1303               	bcf	(129)^080h,3	;volatile
  5621  05FF  1181               	line	25
  5622                           	
  5623                           l1266:	
  5624  0600                     ;timers.c: 25:     OPTION_REGbits.PS = 0x1;
  5625                           	movf	(129)^080h,w	;volatile
  5626  0600  0801               	andlw	not (((1<<3)-1)<<0)
  5627  0601  39F8               	iorlw	(01h & ((1<<3)-1))<<0
  5628  0602  3801               	movwf	(129)^080h	;volatile
  5629  0603  0081               	line	26
  5630                           	
  5631                           l1268:	
  5632  0604                     ;timers.c: 26:     OPTION_REGbits.T0CS = 0;
  5633                           	bcf	(129)^080h,5	;volatile
  5634  0604  1281               	line	27
  5635                           	
  5636                           l1270:	
  5637  0605                     ;timers.c: 27:     TMR0 = (256-250);
  5638                           	movlw	low(06h)
  5639  0605  3006               	bcf	status, 5	;RP0=0, select bank0
  5640  0606  1283               	bcf	status, 6	;RP1=0, select bank0
  5641  0607  1303               	movwf	(1)	;volatile
  5642  0608  0081               	line	28
  5643                           	
  5644                           l1272:	
  5645  0609                     ;timers.c: 28:     INTCONbits.T0IE = 0;
  5646                           	bcf	(11),5	;volatile
  5647  0609  128B               	line	29
  5648                           	
  5649                           l1274:	
  5650  060A                     ;timers.c: 29:     INTCONbits.GIE = 1;
  5651                           	bsf	(11),7	;volatile
  5652  060A  178B               	line	30
  5653                           	
  5654                           l74:	
  5655  060B                     	return
  5656  060B  0008               	opt stack 0
  5657                           GLOBAL	__end_of_T0_init
  5658                           	__end_of_T0_init:
  5659  060C                     	signat	_T0_init,89
  5660                           	global	_EEPROM_write
  5661                           
  5662 ;; *************** function _EEPROM_write *****************
  5663 ;; Defined at:
  5664 ;;		line 12 in file "eeprom.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;  addr            1    wreg     unsigned char 
  5667 ;;  data            1    2[COMMON] unsigned char 
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;  addr            1    3[COMMON] unsigned char 
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  1    wreg      void 
  5672 ;; Registers used:
  5673 ;;		wreg
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5679 ;;      Params:         1       0       0       0       0
  5680 ;;      Locals:         1       0       0       0       0
  5681 ;;      Temps:          0       0       0       0       0
  5682 ;;      Totals:         2       0       0       0       0
  5683 ;;Total ram usage:        2 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; Hardware stack levels required when called:    2
  5686 ;; This function calls:
  5687 ;;		Nothing
  5688 ;; This function is called by:
  5689 ;;		_main
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  5693                           	file	"eeprom.c"
  5694                           	line	12
  5695                           global __ptext21
  5696                           __ptext21:	;psect for function _EEPROM_write
  5697  057C                     psect	text21
  5698                           	file	"eeprom.c"
  5699                           	line	12
  5700                           	global	__size_of_EEPROM_write
  5701                           	__size_of_EEPROM_write	equ	__end_of_EEPROM_write-_EEPROM_write
  5702  0019                     	
  5703                           _EEPROM_write:	
  5704  057C                     ;incstack = 0
  5705                           	opt	stack 5
  5706                           ; Regs used in _EEPROM_write: [wreg]
  5707                           ;EEPROM_write@addr stored from wreg
  5708                           	movwf	(EEPROM_write@addr)
  5709  057C  00F3               	line	14
  5710                           	
  5711                           l2006:	
  5712  057D                     ;eeprom.c: 12: void EEPROM_write( unsigned char addr, unsigned char data );eeprom.c: 13:
                                  {;eeprom.c: 14:     INTCONbits.GIE = 0;
  5713                           	bcf	(11),7	;volatile
  5714  057D  138B               	line	15
  5715                           	
  5716                           l2008:	
  5717  057E                     ;eeprom.c: 15:     EEADR = addr;
  5718                           	movf	(EEPROM_write@addr),w
  5719  057E  0873               	bcf	status, 5	;RP0=0, select bank2
  5720  057F  1283               	bsf	status, 6	;RP1=1, select bank2
  5721  0580  1703               	movwf	(269)^0100h	;volatile
  5722  0581  008D               	line	16
  5723                           ;eeprom.c: 16:     EEDAT = data;
  5724                           	movf	(EEPROM_write@data),w
  5725  0582  0872               	movwf	(268)^0100h	;volatile
  5726  0583  008C               	line	17
  5727                           	
  5728                           l2010:	
  5729  0584                     ;eeprom.c: 17:     EECON1bits.EEPGD = 0;
  5730                           	bsf	status, 5	;RP0=1, select bank3
  5731  0584  1683               	bsf	status, 6	;RP1=1, select bank3
  5732  0585  1703               	bcf	(396)^0180h,7	;volsfr
  5733  0586  138C               	line	18
  5734                           	
  5735                           l2012:	
  5736  0587                     ;eeprom.c: 18:     EECON1bits.WREN = 1;
  5737                           	bsf	(396)^0180h,2	;volsfr
  5738  0587  150C               	line	19
  5739                           ;eeprom.c: 19:     EECON2 = 0x55;
  5740                           	movlw	low(055h)
  5741  0588  3055               	movwf	(397)^0180h	;volsfr
  5742  0589  008D               	line	20
  5743                           ;eeprom.c: 20:     EECON2 = 0xAA;
  5744                           	movlw	low(0AAh)
  5745  058A  30AA               	movwf	(397)^0180h	;volsfr
  5746  058B  008D               	line	21
  5747                           	
  5748                           l2014:	
  5749  058C                     ;eeprom.c: 21:     EECON1bits.WR = 1;
  5750                           	bsf	(396)^0180h,1	;volsfr
  5751  058C  148C               	line	22
  5752                           ;eeprom.c: 22:     while( EECON1bits.WR )
  5753                           	goto	l362
  5754  058D  2D8E               	
  5755                           l363:	
  5756  058E                     	line	23
  5757                           ;eeprom.c: 23:         ;
  5758                           	
  5759                           l362:	
  5760  058E                     	line	22
  5761                           ;eeprom.c: 22:     while( EECON1bits.WR )
  5762                           	btfsc	(396)^0180h,1	;volsfr
  5763  058E  188C               	goto	u1381
  5764  058F  2D91               	goto	u1380
  5765  0590  2D92               u1381:
  5766  0591                     	goto	l362
  5767  0591  2D8E               u1380:
  5768  0592                     	
  5769                           l364:	
  5770  0592                     	line	24
  5771                           ;eeprom.c: 24:     EECON1bits.WREN = 0;
  5772                           	bcf	(396)^0180h,2	;volsfr
  5773  0592  110C               	line	25
  5774                           ;eeprom.c: 25:     INTCONbits.GIE = 1;
  5775                           	bsf	(11),7	;volatile
  5776  0593  178B               	line	26
  5777                           	
  5778                           l365:	
  5779  0594                     	return
  5780  0594  0008               	opt stack 0
  5781                           GLOBAL	__end_of_EEPROM_write
  5782                           	__end_of_EEPROM_write:
  5783  0595                     	signat	_EEPROM_write,8313
  5784                           	global	_EEPROM_read
  5785                           
  5786 ;; *************** function _EEPROM_read *****************
  5787 ;; Defined at:
  5788 ;;		line 3 in file "eeprom.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;  addr            1    wreg     unsigned char 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  addr            1    2[COMMON] unsigned char 
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  1    wreg      unsigned char 
  5795 ;; Registers used:
  5796 ;;		wreg, status,2
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5802 ;;      Params:         0       0       0       0       0
  5803 ;;      Locals:         1       0       0       0       0
  5804 ;;      Temps:          0       0       0       0       0
  5805 ;;      Totals:         1       0       0       0       0
  5806 ;;Total ram usage:        1 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:    2
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_main
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  5816                           	line	3
  5817                           global __ptext22
  5818                           __ptext22:	;psect for function _EEPROM_read
  5819  061C                     psect	text22
  5820                           	file	"eeprom.c"
  5821                           	line	3
  5822                           	global	__size_of_EEPROM_read
  5823                           	__size_of_EEPROM_read	equ	__end_of_EEPROM_read-_EEPROM_read
  5824  000F                     	
  5825                           _EEPROM_read:	
  5826  061C                     ;incstack = 0
  5827                           	opt	stack 5
  5828                           ; Regs used in _EEPROM_read: [wreg+status,2]
  5829                           ;EEPROM_read@addr stored from wreg
  5830                           	movwf	(EEPROM_read@addr)
  5831  061C  00F2               	line	5
  5832                           	
  5833                           l1302:	
  5834  061D                     ;eeprom.c: 3: char EEPROM_read( unsigned char addr );eeprom.c: 4: {;eeprom.c: 5:     EEA
                                 DRH = 0;
  5835                           	bcf	status, 5	;RP0=0, select bank2
  5836  061D  1283               	bsf	status, 6	;RP1=1, select bank2
  5837  061E  1703               	clrf	(271)^0100h	;volatile
  5838  061F  018F               	line	6
  5839                           	
  5840                           l1304:	
  5841  0620                     ;eeprom.c: 6:     EEADR = addr;
  5842                           	movf	(EEPROM_read@addr),w
  5843  0620  0872               	movwf	(269)^0100h	;volatile
  5844  0621  008D               	line	7
  5845                           	
  5846                           l1306:	
  5847  0622                     ;eeprom.c: 7:     EECON1bits.EEPGD = 0;
  5848                           	bsf	status, 5	;RP0=1, select bank3
  5849  0622  1683               	bsf	status, 6	;RP1=1, select bank3
  5850  0623  1703               	bcf	(396)^0180h,7	;volsfr
  5851  0624  138C               	line	8
  5852                           	
  5853                           l1308:	
  5854  0625                     ;eeprom.c: 8:     EECON1bits.RD = 1;
  5855                           	bsf	(396)^0180h,0	;volsfr
  5856  0625  140C               	line	9
  5857                           	
  5858                           l1310:	
  5859  0626                     ;eeprom.c: 9:     return( EEDAT );
  5860                           	bcf	status, 5	;RP0=0, select bank2
  5861  0626  1283               	bsf	status, 6	;RP1=1, select bank2
  5862  0627  1703               	movf	(268)^0100h,w	;volatile
  5863  0628  080C               	goto	l359
  5864  0629  2E2A               	
  5865                           l1312:	
  5866  062A                     	line	10
  5867                           	
  5868                           l359:	
  5869  062A                     	return
  5870  062A  0008               	opt stack 0
  5871                           GLOBAL	__end_of_EEPROM_read
  5872                           	__end_of_EEPROM_read:
  5873  062B                     	signat	_EEPROM_read,4217
  5874                           	global	_isr
  5875                           
  5876 ;; *************** function _isr *****************
  5877 ;; Defined at:
  5878 ;;		line 7 in file "interrupt.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;		None
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;		None
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1    wreg      void 
  5885 ;; Registers used:
  5886 ;;		wreg, status,2, status,0, pclath, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5892 ;;      Params:         0       0       0       0       0
  5893 ;;      Locals:         0       0       0       0       0
  5894 ;;      Temps:          2       0       0       0       0
  5895 ;;      Totals:         2       0       0       0       0
  5896 ;;Total ram usage:        2 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:    1
  5899 ;; This function calls:
  5900 ;;		_T0_int
  5901 ;;		_T1_int
  5902 ;;		_T2_int
  5903 ;; This function is called by:
  5904 ;;		Interrupt level 1
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  5908                           	file	"interrupt.c"
  5909                           	line	7
  5910                           global __ptext23
  5911                           __ptext23:	;psect for function _isr
  5912  0529                     psect	text23
  5913                           	file	"interrupt.c"
  5914                           	line	7
  5915                           	global	__size_of_isr
  5916                           	__size_of_isr	equ	__end_of_isr-_isr
  5917  002C                     	
  5918                           _isr:	
  5919  0529                     ;incstack = 0
  5920                           	opt	stack 3
  5921                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  5922                           psect	intentry,class=CODE,delta=2
  5923                           global __pintentry
  5924                           __pintentry:
  5925  0004                     global interrupt_function
  5926                           interrupt_function:
  5927  0004                     	global saved_w
  5928                           	saved_w	set	btemp+0
  5929  007E                     	movwf	saved_w
  5930  0004  00FE               	swapf	status,w
  5931  0005  0E03               	movwf	(??_isr+0)
  5932  0006  00F0               	movf	pclath,w
  5933  0007  080A               	movwf	(??_isr+1)
  5934  0008  00F1               	ljmp	_isr
  5935  0009  120A  118A  2D29   psect	text23
  5936                           	line	9
  5937                           	
  5938                           i1l2100:	
  5939  0529                     ;interrupt.c: 9:     if( INTCONbits.T0IF )
  5940                           	btfss	(11),2	;volatile
  5941  0529  1D0B               	goto	u143_21
  5942  052A  2D2C               	goto	u143_20
  5943  052B  2D2D               u143_21:
  5944  052C                     	goto	i1l2106
  5945  052C  2D34               u143_20:
  5946  052D                     	line	11
  5947                           	
  5948                           i1l2102:	
  5949  052D                     ;interrupt.c: 10:     {;interrupt.c: 11:         INTCONbits.T0IF = 0;
  5950                           	bcf	(11),2	;volatile
  5951  052D  110B               	line	12
  5952                           	
  5953                           i1l2104:	
  5954  052E                     ;interrupt.c: 12:         T0_int();
  5955                           	fcall	_T0_int
  5956  052E  120A  118A  25EA  120A  118A  	goto	i1l2106
  5957  0533  2D34               	line	13
  5958                           ;interrupt.c: 13:     }
  5959                           	
  5960                           i1l143:	
  5961  0534                     	line	14
  5962                           	
  5963                           i1l2106:	
  5964  0534                     ;interrupt.c: 14:     if( PIR1bits.TMR1IF )
  5965                           	bcf	status, 5	;RP0=0, select bank0
  5966  0534  1283               	bcf	status, 6	;RP1=0, select bank0
  5967  0535  1303               	btfss	(12),0	;volatile
  5968  0536  1C0C               	goto	u144_21
  5969  0537  2D39               	goto	u144_20
  5970  0538  2D3A               u144_21:
  5971  0539                     	goto	i1l2112
  5972  0539  2D41               u144_20:
  5973  053A                     	line	16
  5974                           	
  5975                           i1l2108:	
  5976  053A                     ;interrupt.c: 15:     {;interrupt.c: 16:         PIR1bits.TMR1IF = 0;
  5977                           	bcf	(12),0	;volatile
  5978  053A  100C               	line	17
  5979                           	
  5980                           i1l2110:	
  5981  053B                     ;interrupt.c: 17:         T1_int();
  5982                           	fcall	_T1_int
  5983  053B  120A  118A  25C3  120A  118A  	goto	i1l2112
  5984  0540  2D41               	line	18
  5985                           ;interrupt.c: 18:     }
  5986                           	
  5987                           i1l144:	
  5988  0541                     	line	19
  5989                           	
  5990                           i1l2112:	
  5991  0541                     ;interrupt.c: 19:     if( PIR1bits.TMR2IF )
  5992                           	bcf	status, 5	;RP0=0, select bank0
  5993  0541  1283               	bcf	status, 6	;RP1=0, select bank0
  5994  0542  1303               	btfss	(12),1	;volatile
  5995  0543  1C8C               	goto	u145_21
  5996  0544  2D46               	goto	u145_20
  5997  0545  2D47               u145_21:
  5998  0546                     	goto	i1l146
  5999  0546  2D4E               u145_20:
  6000  0547                     	line	21
  6001                           	
  6002                           i1l2114:	
  6003  0547                     ;interrupt.c: 20:     {;interrupt.c: 21:         PIR1bits.TMR2IF = 0;
  6004                           	bcf	(12),1	;volatile
  6005  0547  108C               	line	22
  6006                           	
  6007                           i1l2116:	
  6008  0548                     ;interrupt.c: 22:         T2_int();
  6009                           	fcall	_T2_int
  6010  0548  120A  118A  260C  120A  118A  	goto	i1l146
  6011  054D  2D4E               	line	23
  6012                           ;interrupt.c: 23:     }
  6013                           	
  6014                           i1l145:	
  6015  054E                     	line	24
  6016                           	
  6017                           i1l146:	
  6018  054E                     	movf	(??_isr+1),w
  6019  054E  0871               	movwf	pclath
  6020  054F  008A               	swapf	(??_isr+0)^0FFFFFF80h,w
  6021  0550  0E70               	movwf	status
  6022  0551  0083               	swapf	saved_w,f
  6023  0552  0EFE               	swapf	saved_w,w
  6024  0553  0E7E               	retfie
  6025  0554  0009               	opt stack 0
  6026                           GLOBAL	__end_of_isr
  6027                           	__end_of_isr:
  6028  0555                     	signat	_isr,89
  6029                           	global	_T2_int
  6030                           
  6031 ;; *************** function _T2_int *****************
  6032 ;; Defined at:
  6033 ;;		line 132 in file "timers.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;		None
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;		None
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  1    wreg      void 
  6040 ;; Registers used:
  6041 ;;		wreg, status,2, status,0
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6047 ;;      Params:         0       0       0       0       0
  6048 ;;      Locals:         0       0       0       0       0
  6049 ;;      Temps:          0       0       0       0       0
  6050 ;;      Totals:         0       0       0       0       0
  6051 ;;Total ram usage:        0 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; This function calls:
  6054 ;;		Nothing
  6055 ;; This function is called by:
  6056 ;;		_isr
  6057 ;; This function uses a non-reentrant model
  6058 ;;
  6059                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  6060                           	file	"timers.c"
  6061                           	line	132
  6062                           global __ptext24
  6063                           __ptext24:	;psect for function _T2_int
  6064  060C                     psect	text24
  6065                           	file	"timers.c"
  6066                           	line	132
  6067                           	global	__size_of_T2_int
  6068                           	__size_of_T2_int	equ	__end_of_T2_int-_T2_int
  6069  0010                     	
  6070                           _T2_int:	
  6071  060C                     ;incstack = 0
  6072                           	opt	stack 3
  6073                           ; Regs used in _T2_int: [wreg+status,2+status,0]
  6074                           	line	134
  6075                           	
  6076                           i1l2028:	
  6077  060C                     ;timers.c: 134:     if( T2count )
  6078                           	bcf	status, 5	;RP0=0, select bank0
  6079  060C  1283               	bcf	status, 6	;RP1=0, select bank0
  6080  060D  1303               	movf	((_T2count)),w
  6081  060E  0820               iorwf	((_T2count+1)),w
  6082  060F  0421               	btfsc	status,2
  6083  0610  1903               	goto	u141_21
  6084  0611  2E13               	goto	u141_20
  6085  0612  2E14               u141_21:
  6086  0613                     	goto	i1l116
  6087  0613  2E1B               u141_20:
  6088  0614                     	line	136
  6089                           	
  6090                           i1l2030:	
  6091  0614                     ;timers.c: 135:     {;timers.c: 136:         --T2count;
  6092                           	movlw	01h
  6093  0614  3001               	subwf	(_T2count),f
  6094  0615  02A0               	movlw	0
  6095  0616  3000               	skipc
  6096  0617  1C03               	decf	(_T2count+1),f
  6097  0618  03A1               	subwf	(_T2count+1),f
  6098  0619  02A1               	goto	i1l116
  6099  061A  2E1B               	line	137
  6100                           ;timers.c: 137:     }
  6101                           	
  6102                           i1l115:	
  6103  061B                     	line	138
  6104                           	
  6105                           i1l116:	
  6106  061B                     	return
  6107  061B  0008               	opt stack 0
  6108                           GLOBAL	__end_of_T2_int
  6109                           	__end_of_T2_int:
  6110  061C                     	signat	_T2_int,89
  6111                           	global	_T1_int
  6112                           
  6113 ;; *************** function _T1_int *****************
  6114 ;; Defined at:
  6115 ;;		line 80 in file "timers.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;		None
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1    wreg      void 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2, status,0
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6129 ;;      Params:         0       0       0       0       0
  6130 ;;      Locals:         0       0       0       0       0
  6131 ;;      Temps:          0       0       0       0       0
  6132 ;;      Totals:         0       0       0       0       0
  6133 ;;Total ram usage:        0 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; This function calls:
  6136 ;;		Nothing
  6137 ;; This function is called by:
  6138 ;;		_isr
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  6142                           	line	80
  6143                           global __ptext25
  6144                           __ptext25:	;psect for function _T1_int
  6145  05C3                     psect	text25
  6146                           	file	"timers.c"
  6147                           	line	80
  6148                           	global	__size_of_T1_int
  6149                           	__size_of_T1_int	equ	__end_of_T1_int-_T1_int
  6150  0014                     	
  6151                           _T1_int:	
  6152  05C3                     ;incstack = 0
  6153                           	opt	stack 3
  6154                           ; Regs used in _T1_int: [wreg+status,2+status,0]
  6155                           	line	82
  6156                           	
  6157                           i1l2022:	
  6158  05C3                     ;timers.c: 82:     TMR1H = ((0xFFFF-1000+1) >> 8) & 0x00FF;
  6159                           	movlw	low(0FCh)
  6160  05C3  30FC               	bcf	status, 5	;RP0=0, select bank0
  6161  05C4  1283               	bcf	status, 6	;RP1=0, select bank0
  6162  05C5  1303               	movwf	(15)	;volatile
  6163  05C6  008F               	line	83
  6164                           ;timers.c: 83:     TMR1L = ((0xFFFF-1000+1) >> 0) & 0x00FF;
  6165                           	movlw	low(018h)
  6166  05C7  3018               	movwf	(14)	;volatile
  6167  05C8  008E               	line	84
  6168                           	
  6169                           i1l2024:	
  6170  05C9                     ;timers.c: 84:     if( T1count )
  6171                           	movf	((_T1count)),w
  6172  05C9  0822               iorwf	((_T1count+1)),w
  6173  05CA  0423               	btfsc	status,2
  6174  05CB  1903               	goto	u140_21
  6175  05CC  2DCE               	goto	u140_20
  6176  05CD  2DCF               u140_21:
  6177  05CE                     	goto	i1l97
  6178  05CE  2DD6               u140_20:
  6179  05CF                     	line	86
  6180                           	
  6181                           i1l2026:	
  6182  05CF                     ;timers.c: 85:     {;timers.c: 86:         --T1count;
  6183                           	movlw	01h
  6184  05CF  3001               	subwf	(_T1count),f
  6185  05D0  02A2               	movlw	0
  6186  05D1  3000               	skipc
  6187  05D2  1C03               	decf	(_T1count+1),f
  6188  05D3  03A3               	subwf	(_T1count+1),f
  6189  05D4  02A3               	goto	i1l97
  6190  05D5  2DD6               	line	87
  6191                           ;timers.c: 87:     }
  6192                           	
  6193                           i1l96:	
  6194  05D6                     	line	88
  6195                           	
  6196                           i1l97:	
  6197  05D6                     	return
  6198  05D6  0008               	opt stack 0
  6199                           GLOBAL	__end_of_T1_int
  6200                           	__end_of_T1_int:
  6201  05D7                     	signat	_T1_int,89
  6202                           	global	_T0_int
  6203                           
  6204 ;; *************** function _T0_int *****************
  6205 ;; Defined at:
  6206 ;;		line 33 in file "timers.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;		None
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;		None
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      void 
  6213 ;; Registers used:
  6214 ;;		wreg, status,2, status,0
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6220 ;;      Params:         0       0       0       0       0
  6221 ;;      Locals:         0       0       0       0       0
  6222 ;;      Temps:          0       0       0       0       0
  6223 ;;      Totals:         0       0       0       0       0
  6224 ;;Total ram usage:        0 bytes
  6225 ;; Hardware stack levels used:    1
  6226 ;; This function calls:
  6227 ;;		Nothing
  6228 ;; This function is called by:
  6229 ;;		_isr
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  6233                           	line	33
  6234                           global __ptext26
  6235                           __ptext26:	;psect for function _T0_int
  6236  05EA                     psect	text26
  6237                           	file	"timers.c"
  6238                           	line	33
  6239                           	global	__size_of_T0_int
  6240                           	__size_of_T0_int	equ	__end_of_T0_int-_T0_int
  6241  0012                     	
  6242                           _T0_int:	
  6243  05EA                     ;incstack = 0
  6244                           	opt	stack 3
  6245                           ; Regs used in _T0_int: [wreg+status,2+status,0]
  6246                           	line	35
  6247                           	
  6248                           i1l2016:	
  6249  05EA                     ;timers.c: 35:     TMR0 = (256-250);
  6250                           	movlw	low(06h)
  6251  05EA  3006               	bcf	status, 5	;RP0=0, select bank0
  6252  05EB  1283               	bcf	status, 6	;RP1=0, select bank0
  6253  05EC  1303               	movwf	(1)	;volatile
  6254  05ED  0081               	line	36
  6255                           	
  6256                           i1l2018:	
  6257  05EE                     ;timers.c: 36:     if( T0count )
  6258                           	movf	((_T0count)),w
  6259  05EE  0824               iorwf	((_T0count+1)),w
  6260  05EF  0425               	btfsc	status,2
  6261  05F0  1903               	goto	u139_21
  6262  05F1  2DF3               	goto	u139_20
  6263  05F2  2DF4               u139_21:
  6264  05F3                     	goto	i1l78
  6265  05F3  2DFB               u139_20:
  6266  05F4                     	line	38
  6267                           	
  6268                           i1l2020:	
  6269  05F4                     ;timers.c: 37:     {;timers.c: 38:         --T0count;
  6270                           	movlw	01h
  6271  05F4  3001               	subwf	(_T0count),f
  6272  05F5  02A4               	movlw	0
  6273  05F6  3000               	skipc
  6274  05F7  1C03               	decf	(_T0count+1),f
  6275  05F8  03A5               	subwf	(_T0count+1),f
  6276  05F9  02A5               	goto	i1l78
  6277  05FA  2DFB               	line	39
  6278                           ;timers.c: 39:     }
  6279                           	
  6280                           i1l77:	
  6281  05FB                     	line	40
  6282                           	
  6283                           i1l78:	
  6284  05FB                     	return
  6285  05FB  0008               	opt stack 0
  6286                           GLOBAL	__end_of_T0_int
  6287                           	__end_of_T0_int:
  6288  05FC                     	signat	_T0_int,89
  6289                           global	___latbits
  6290                           ___latbits	equ	2
  6291  0002                     	global	btemp
  6292                           	btemp set 07Eh
  6293  007E                     
  6294                           	DABS	1,126,2	;btemp
  6295                           	global	wtemp0
  6296                           	wtemp0 set btemp+0
  6297  007E                     	end


Data Sizes:
    Strings     17
    Constant    16
    Data        2
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     20      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    resetTemporizador@t	PTR struct temporizadorT size(1) Largest target is 24
		 -> tempo(BANK0[24]), 

    habTemporizador@t	PTR struct temporizadorT size(1) Largest target is 24
		 -> tempo(BANK0[24]), 

    temporizar@t	PTR struct temporizadorT size(1) Largest target is 24
		 -> tempo(BANK0[24]), 

    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_lcd_print
    _temporizar->___awmod
    _lcd_print->_lcd_lincol
    _lcd_num->___awmod
    _lcd_lincol->_lcd_instReg
    _lcd_init->_delay
    _lcd_init->_lcd_instReg

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_num
    _lcd_num->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9530
                                             16 BANK0      4     4      0
                        _EEPROM_read
                       _EEPROM_write
                            _T0_init
                           _T0_start
                          _T0_status
                                 _b0
                                 _b1
                                 _b2
                                 _b3
                         _botao_init
                    _habTemporizador
                           _lcd_init
                            _lcd_num
                          _lcd_print
                  _resetTemporizador
                         _temporizar
 ---------------------------------------------------------------------------------
 (1) _temporizar                                           5     5      0    1638
                                              0 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _resetTemporizador                                    1     1      0     195
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     940
                                              8 COMMON     1     1      0
                                              0 BANK0      4     2      2
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (1) _lcd_num                                             12     8      4    5541
                                              4 BANK0     12     8      4
                            ___awdiv
                            ___awmod
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (2) _lcd_lincol                                           3     2      1     372
                                              5 COMMON     3     2      1
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (2) _lcd_dataReg                                          3     3      0      44
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1153
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     427
                              _delay
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (3) _lcd_instReg                                          3     3      0     176
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     251
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _habTemporizador                                      3     2      1     480
                                              2 COMMON     3     2      1
                                 _b0 (ARG)
                                 _b1 (ARG)
                                 _b2 (ARG)
                                 _b3 (ARG)
 ---------------------------------------------------------------------------------
 (1) _botao_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _b3                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _b2                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _b1                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _b0                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _T0_status                                            2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _T0_start                                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _T0_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_write                                         2     1      1     120
                                              2 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_read                                          1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
                             _T0_int
                             _T1_int
                             _T2_int
 ---------------------------------------------------------------------------------
 (5) _T2_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T1_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T0_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_read
   _EEPROM_write
   _T0_init
   _T0_start
   _T0_status
   _b0
   _b1
   _b2
   _b3
   _botao_init
   _habTemporizador
     _b0 (ARG)
     _b1 (ARG)
     _b2 (ARG)
     _b3 (ARG)
   _lcd_init
     _delay
     _lcd_instReg
   _lcd_num
     ___awdiv
     ___awmod
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _lcd_print
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _resetTemporizador
   _temporizar
     ___awmod

 _isr (ROOT)
   _T0_int
   _T1_int
   _T2_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      33       5       63.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3F      12        0.0%
ABS                  0      0      3F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon May 09 10:34:36 2022

                         pc 0002                 __CFG_CP$OFF 0000                lcd_dataReg@d 0074  
                        l41 0083                          l42 01AE                          l43 01AF  
                        l44 01B0                          l45 01B0                          l81 065C  
                        l74 060B                          l90 0675                  _b0Anterior 007A  
                        _b0 0649                          _b1 063F                          _b2 0635  
                        _b3 062B                ___awdiv@sign 0040                          fsr 0004  
                _b1Anterior 0079                         ?_b0 0070                         ?_b1 0070  
                       ?_b2 0070                         ?_b3 0070                  _b2Anterior 007B  
                       l200 01F9                         l201 01FA                         l210 02A0  
                       l202 021C                         l211 02A0                         l203 0228  
                       l204 021D                         l221 0665                         l206 0245  
                       l214 0330                         l231 067C                         l151 05BB  
                       l207 0246                         l215 032F                         l152 05AD  
                       l208 0254                         l224 05AB                         l216 032E  
                       l153 05C2                         l209 0254                         l217 032D  
                       l234 0652                         l154 05C2                         l170 0360  
                       l218 0330                         l171 0385                         l172 03A4  
                       l254 0648                         l174 039A                         l182 05E9  
                       l175 03A9                         l167 035B                         l191 04ED  
                       l176 03AC                         l600 03E7                         l192 04D4  
                       l169 0351                         l185 04C1                         l601 0400  
                       l193 04FC                         l362 058E                         l274 063E  
                       l602 040E                         l610 044C                         l194 04FC  
                       l363 058E                         l603 041A                         l611 0440  
                       l179 0528                         l364 0592                         l604 041F  
                       l612 0451                         l365 0594                         l613 0452  
                       l197 01CA                         l294 0634                         l614 0463  
                       l198 020E                         l359 062A                         l615 0471  
                       l607 042D                         l199 01DF                         l616 047D  
                       l608 0437                         l617 0482                         l609 0472  
                       l594 03BC                         l595 03CA                         l596 040F  
                       l597 03E1                         l598 03D5                         l599 03E6  
                       _PR2 0092                __CFG_CPD$OFF 0000                         u960 034A  
                       u961 0349                         u970 0350                         u971 034F  
                       u955 0338                         u980 036C                         u981 036B  
                       u995 0370                  _b3Anterior 0026                         _isr 0529  
                       fsr0 0004                         indf 0000                ___awmod@sign 0078  
                      ??_b0 0072                        ??_b1 0072                        ??_b2 0072  
                      ??_b3 0072                __CFG_LVP$OFF 0000                 lcd_num@size 004B  
                      l2010 0584                        l2012 0587                        l1300 05A5  
                      l1310 0626                        l1302 061D                        l2014 058C  
                      l2006 057D                        l1312 062A                        l1304 0620  
                      l2008 057E                        l1320 063F                        l2200 0414  
                      l1306 0622                        l1314 0649                        l1322 0648  
                      l1330 0634                        l2202 041A                        l2210 0425  
                      l1308 0625                        l1316 0652                        l1324 0635  
                      l2204 041F                        l2220 043D                        l2212 042A  
                      l2300 0246                        l1270 0605                        l1326 063E  
                      l2230 045C                        l2222 0440                        l2214 042D  
                      l2206 0420                        l2302 024D                        l2310 0032  
                      l1272 0609                        l1264 05FC                        l1328 062B  
                      l2240 047D                        l2232 0463                        l2224 0447  
                      l2216 0431                        l2208 0421                        l2304 0292  
                      l2320 0065                        l2312 0037                        l1274 060A  
                      l1266 0600                        l2170 03BC                        l2162 03AD  
                      l2242 0482                        l2234 046A                        l2226 044C  
                      l2218 0437                        l2250 04E2                        l2330 0093  
                      l2322 006B                        l2314 003C                        l2306 0029  
                      l1268 0604                        l1276 0676                        l2180 03D2  
                      l2172 03C0                        l2164 03B0                        l2228 0452  
                      l2236 0472                        l2252 04E8                        l2244 04C5  
                      l2260 02CB                        l2340 00D7                        l2332 00A3  
                      l2324 0071                        l2316 0049                        l2308 002D  
                      l2190 03F8                        l2182 03D5                        l2174 03C5  
                      l2166 03B4                        l2238 0477                        l2254 04ED  
                      l2246 04C9                        l1294 0596                        l2270 0324  
                      l2262 02D2                        l2350 0103                        l2342 00DD  
                      l2334 00B3                        l2326 0077                        l2318 005F  
                      l1800 038E                        l2192 03FE                        l2184 03DC  
                      l2176 03CA                        l2168 03B9                        l2280 01D4  
                      l2272 01B6                        l2248 04D4                        l1296 059D  
                      l2264 02F3                        l2256 02A4                        l2360 017F  
                      l2352 0126                        l2344 00E3                        l2336 00C3  
                      l2328 0083                        l1810 05AC                        l1802 0393  
                      l2194 0400                        l2186 03E1                        l2178 03CC  
                      l2290 020E                        l2282 01DA                        l2274 01BF  
                      l1298 05A1                        l2266 02FB                        l2258 02AC  
                      l2362 0196                        l2354 013D                        l2346 00E9  
                      l2338 00CE                        l1812 05AD                        l1804 039A  
                      l2196 0407                        l2188 03E7                        l1820 0510  
                      l2292 021D                        l2284 01DF                        l2276 01C4  
                      l2268 031C                        l2356 0154                        l2348 00EF  
                      l1814 05BB                        l1806 03A4                        l2198 040F  
                      l1830 0520                        l1822 0511                        l2294 0223  
                      l2286 01F4                        l2278 01CA                        l2358 0168  
                      l1808 03A9                        l1920 048C                        l1832 0525  
                      l1824 0515                        l1816 04FE                        l2288 01FA  
                      l2296 0228                        l1770 0335                        l1930 0493  
                      l1922 048F                        l1826 0518                        l1818 0501  
                      l1834 05D8                        l2298 023C                        l1780 0360  
                      l1772 0344                        l1932 049D                        l1924 0490  
                      l1828 0519                        l1950 065E                        l1790 037D  
                      l1782 0363                        l1774 034A                        l1926 0491  
                      l1918 0483                        l1952 066E                        l1792 0381  
                      l1784 036C                        l1776 0351                        l1768 0332  
                      l1928 0492                        l1946 0653                        l1954 0675  
                      l1786 036D                        l1794 0385                        l1778 035B  
                      l1948 065B                        l1796 0386                        l1788 037C  
                      l1798 038D                        ?_isr 0070                        STR_1 056B  
                      STR_2 056B                        u1000 0393                        u1001 0392  
                      u1010 0399                        u1011 0398                        u1020 05C1  
                      u1021 05C0                        u1035 0504                        u1045 05DB  
                      u1600 03F8                        u1601 03F7                        u1380 0592  
                      u1620 040D                        u1540 03B4                        u1381 0591  
                      u1621 040C                        u1605 03F4                        u1541 03B3  
                      u1630 0414                        u1550 03C0                        u1710 0470  
                      u1631 0413                        u1615 0401                        u1551 03BF  
                      u1711 046F                        u1560 03D2                        u1720 0477  
                      u1640 0425                        u1800 01C4                        u1561 03D1  
                      u1721 0476                        u1705 0464                        u1641 0424  
                      u1801 01C3                        u1650 0431                        u1810 01F4  
                      u1730 04FB                        u1651 0430                        u1811 01F3  
                      u1731 04FA                        u1580 03E5                        u1660 043D  
                      u1820 021B                        u1740 02AC                        u1581 03E4  
                      u1661 043C                        u1821 021A                        u1741 02AB  
                      u1830 023C                        u1750 02D2                        u1575 03D6  
                      u1831 023B                        u1751 02D1                        u1680 0450  
                      u1840 0244                        u1760 02FB                        u1681 044F  
                      u1841 0243                        u1825 0217                        u1761 02FA  
                      u1690 045C                        u1850 024D                        u1770 0324  
                      u1907 0355                        u1595 03E8                        u1691 045B  
                      u1675 0441                        u1851 024C                        u1835 0238  
                      u1771 0323                        u1860 029F                        u1780 01BB  
                      u1917 035D                        u1861 029E                        u1781 01B9  
                      u1790 01BC                        u1870 00CE                        u1927 037F  
                      u1695 0458                        u1871 00CD                        u1937 039E  
                      u1865 029B                        u1947 03A6                        u1957 05AF  
                      u1887 0513                        u1897 0523                        i1l77 05FB  
                      i1l78 05FB                        i1l96 05D6                        i1l97 05D6  
                      _TMR0 0001                        _TMR2 0011                        _WPUB 0095  
           __end_of_T0_init 060C                __CFG_WRT$OFF 0000                        _main 0029  
                      btemp 007E                        start 000C               __CFG_IESO$OFF 0000  
              lcd_instReg@i 0074            ?_habTemporizador 0072                       ??_isr 0070  
              lcd_num@sinal 004C        __end_of_EEPROM_write 0595                       ?_main 0070  
           __end_of___awdiv 0420                       _EEADR 010D                       _EEDAT 010C  
             __CFG_WDTE$OFF 0000             __end_of___awmod 0483                       _ANSEL 0188  
           ___awdiv@divisor 0072                       i1l115 061B                       i1l116 061B  
                     i1l143 0534                       i1l144 0541                       i1l145 054E  
                     i1l146 054E             ___awdiv@counter 003F                       _TMR1H 000F  
                     _TMR1L 000E                       _PORTB 0006                       _PORTD 0008  
                     _TRISB 0086       __end_of_tecladoMatriz 056B                lcd_print@col 003F  
              lcd_print@lin 0042              __CFG_FCMEN$OFF 0000                lcd_print@pos 0041  
              lcd_print@str 0040          __size_of_T0_status 0008            __end_of_T0_start 065D  
           __end_of_lcd_num 02A1                       _delay 05AC                       _tempo 0027  
            __CFG_BOREN$OFF 0000                       pclath 000A                       status 0003  
                     wtemp0 007E             EEPROM_read@addr 0072               lcd_lincol@col 0075  
             lcd_lincol@lin 0077              __CFG_MCLRE$OFF 0000        __size_of_EEPROM_read 000F  
           __initialization 000F                __end_of_main 01B3           _resetTemporizador 0595  
                    ??_main 004F          ?_resetTemporizador 0070                   ??_T0_init 0072  
                    ?_delay 0072                      _EEADRH 010F                      _EECON2 018D  
          ___awdiv@dividend 0074         ??_resetTemporizador 0072                      _ANSELH 0189  
                    i1l2020 05F4                      i1l2100 0529                      i1l2022 05C3  
                    i1l2030 0614                      i1l2110 053B                      i1l2102 052D  
                    i1l2016 05EA                      i1l2024 05C9                      i1l2112 0541  
                    i1l2104 052E                      i1l2018 05EE                      i1l2026 05CF  
                    i1l2114 0547                      i1l2106 0534                      i1l2028 060C  
                    i1l2116 0548                      i1l2108 053A                      u140_20 05CF  
                    u140_21 05CE                      u141_20 0614                      u141_21 0613  
                    u143_20 052D                      u143_21 052C                      u144_20 053A  
                    u144_21 0539                      u145_20 0547                      u145_21 0546  
                    u139_20 05F4                      u139_21 05F3                      _T0_int 05EA  
                    _T1_int 05C3                      _T2_int 060C              __CFG_PWRTE$OFF 0000  
      __size_of_lcd_dataReg 002C           __end_of_T0_status 0676            __end_of_lcd_init 04C2  
                 ??___awdiv 0076                   ??___awmod 0076        __size_of_lcd_instReg 007C  
 __end_of_resetTemporizador 05AC                      delay@t 0072            ___awdiv@quotient 0041  
           ___awmod@divisor 0072             ___awmod@counter 0077                   ??_lcd_num 0047  
              __pdataCOMMON 0079                      saved_w 007E          resetTemporizador@t 0072  
   __end_of__initialization 0025              __pcstackCOMMON 0070       __size_of_EEPROM_write 0019  
                 ?_T0_start 0072               __end_of_delay 05C3                  __end_of_b0 0653  
                __end_of_b1 0649                  __end_of_b2 063F                  __end_of_b3 0635  
            _OPTION_REGbits 0081                     ??_delay 0074          __size_of_lcd_print 003B  
                __pbssBANK0 0020                     ?_T0_int 0070                     ?_T1_int 0070  
                   ?_T2_int 0070                _EEPROM_write 057C                  __pmaintext 0029  
                ??_T0_start 0074                  __pintentry 0004  __size_of_resetTemporizador 0017  
                 T0_start@c 0072                  _lcd_lincol 05D7                  _botao_init 0676  
                   _T0_init 05FC                     _T0count 0024                     _T1count 0022  
                   _T2count 0020                   ?_lcd_init 0070                  __stringtab 0555  
           __size_of_T0_int 0012             __size_of_T1_int 0014             __size_of_T2_int 0010  
          EEPROM_write@addr 0073            EEPROM_write@data 0072           __end_of_lcd_print 04FD  
                   ___awdiv 03AD                     ___awmod 0420                     __ptext1 02A1  
                   __ptext2 0595                     __ptext3 04C2                     __ptext4 01B3  
                   __ptext5 05D7                     __ptext6 04FD                     __ptext7 0420  
                   __ptext8 03AD                     __ptext9 0483                     _lcd_num 01B3  
                 _T1CONbits 0010    __size_of_habTemporizador 0009                   _T2CONbits 0012  
              __size_of_isr 002C            ___awmod@dividend 0074            habTemporizador@h 0072  
          habTemporizador@t 0074                     clrloop0 0667                  ??_lcd_init 0075  
      end_of_initialization 0025               ??_EEPROM_read 0072                   _T0_status 066E  
                _temporizar 02A1                   _PORTAbits 0005                   _PORTDbits 0008  
                 _TRISAbits 0085                 ?_lcd_lincol 0075                   _TRISDbits 0088  
               ?_botao_init 0070                 temporizar@t 0043               ??_lcd_dataReg 0072  
                lcd_num@col 0043                  lcd_num@div 004D                  lcd_num@lin 004A  
                lcd_num@tam 0046                  lcd_num@num 0044              __end_of_T0_int 05FC  
            __end_of_T1_int 05D7              __end_of_T2_int 061C               ??_lcd_instReg 0072  
       __end_of_EEPROM_read 062B                  ?_T0_status 0072               __pidataCOMMON 067D  
         __size_of_T0_start 000A         start_initialization 000F               _tecladoMatriz 055B  
               __end_of_isr 0555           ??_habTemporizador 0073                    ??_T0_int 0070  
                  ??_T1_int 0070                    ??_T2_int 0070    __CFG_FOSC$INTRC_NOCLKOUT 0000  
       __end_of_lcd_dataReg 0529         __size_of_lcd_lincol 0013         __size_of_botao_init 0007  
       __end_of_lcd_instReg 03AD                 ?_temporizar 0070                 __pbssCOMMON 007B  
                 ___latbits 0002               __pcstackBANK0 003F                    ?_T0_init 0070  
         __size_of_lcd_init 003F                 _EEPROM_read 061C                    ?___awdiv 0072  
                  ?___awmod 0072                 ??_T0_status 0074                   __pstrings 0555  
                 _lcd_print 04C2                    ?_lcd_num 0043              __size_of_delay 0017  
               __size_of_b0 000A                 __size_of_b1 000A                 __size_of_b2 000A  
               __size_of_b3 000A           interrupt_function 0004                 _lcd_dataReg 04FD  
       __size_of_temporizar 0090                   clear_ram0 0666                    _PIE1bits 008C  
                  _PIR1bits 000C                 _lcd_instReg 0331                    _T0_start 0653  
                ?_lcd_print 003F                 __stringbase 055A                ??_lcd_lincol 0076  
              ??_botao_init 0072            __size_of_T0_init 0010                  _EECON1bits 018C  
        __end_of_lcd_lincol 05EA          __end_of_botao_init 067D            __size_of___awdiv 0073  
          __size_of___awmod 0063          __end_of__stringtab 055B             _habTemporizador 065D  
          __size_of_lcd_num 00EE                    __ptext10 0331                    __ptext11 05AC  
                  __ptext20 05FC                    __ptext12 065D                    __ptext21 057C  
                  __ptext13 0676                    __ptext22 061C                    __ptext14 062B  
                  __ptext23 0529                    __ptext15 0635                    __ptext24 060C  
                  __ptext16 063F                    __ptext25 05C3                    __ptext17 0649  
                  __ptext26 05EA                    __ptext18 066E                    __ptext19 0653  
         __CFG_BOR4V$BOR40V 0000                    _lcd_init 0483               ?_EEPROM_write 0072  
             __size_of_main 018A                ??_temporizar 003F                 ??_lcd_print 0078  
                _INTCONbits 000B                    intlevel1 0000              ??_EEPROM_write 0073  
              ?_EEPROM_read 0070          __end_of_temporizar 0331                   stringcode 0555  
   __end_of_habTemporizador 0666                    stringdir 0555                    stringtab 0555  
              ?_lcd_dataReg 0070                ?_lcd_instReg 0070  
